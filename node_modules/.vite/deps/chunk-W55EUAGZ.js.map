{
  "version": 3,
  "sources": ["../../@atlaskit/navigation-system/dist/esm/ui/page-layout/constants.js", "../../@atlaskit/navigation-system/dist/esm/ui/page-layout/id-utils.js"],
  "sourcesContent": ["/**\n * These variables are shared across the different page layout slots.\n * This violates the [UI styling standard](https://atlassian.design/components/eslint-plugin-ui-styling-standard/no-imported-style-values/usage).\n * We have chosen to ignore this rule to prevent duplicating them across the different slots, and to provide a high level view of them and how they relate.\n */\n\n// These are \"compressed\" to discourage usage.\nexport var sideNavVar = '--n_sNvw';\nexport var asideVar = '--n_asDw';\nexport var panelVar = '--n_pnlW';\nexport var bannerMountedVar = '--n_bnrM';\nexport var topNavMountedVar = '--n_tNvM';\n\n/**\n * Captures the current width of the side navigation, at all times, including during resizing.\n *\n * The standard `sideNavVar` only captures the 'committed' width, not the resizing width.\n */\nexport var sideNavLiveWidthVar = '--n_sNvlw';\nexport var sideNavPanelSplitterId = Symbol('SideNav PanelSplitter');\nexport var asidePanelSplitterId = Symbol('Aside PanelSplitter');\nexport var panelPanelSplitterId = Symbol('Panel PanelSplitter');\n\n// We aren't using template literals here because Compiled can't compiled them in platform ATM.\nexport var contentHeightWhenFixed = \"calc(100vh - var(--n_bnrM, 0px) - var(--n_tNvM, 0px))\";\nexport var contentInsetBlockStart = \"calc(var(--n_bnrM, 0px) + var(--n_tNvM, 0px))\";\n\n// We define variables as they can change their size depending on the viewport width. That isn't needed for\n// general grid item slots because, well, they just take up the size of the grid item! In this instance since\n// the UNSAFE absolutely positioned sibling isn't on the grid it needs extra layout information.\n// Note: THESE ARE THE SAME VALUES AS THE LEGACY PAGE LAYOUT.\n// WHEN WE ELIMINATE USAGE OF THOSE VARIABLES THESE CAN BE RENAMED TO BE HASHED.\nexport var UNSAFE_topNavVar = '--topNavigationHeight';\nexport var UNSAFE_bannerVar = '--bannerHeight';\nexport var UNSAFE_sideNavLayoutVar = '--leftSidebarWidth';\nexport var UNSAFE_asideLayoutVar = '--rightSidebarWidth';\nexport var UNSAFE_panelLayoutVar = '--rightPanelWidth';\n\n// The following UNSAFE variables are used to absolutely position elements that aren't a child of page layout.\n// Known use cases: Legacy pages rendered inside Confluence and Jira.\nexport var UNSAFE_MAIN_BLOCK_START_FOR_LEGACY_PAGES_ONLY = \"calc(var(\".concat(UNSAFE_bannerVar, \", 0px) + var(\").concat(UNSAFE_topNavVar, \", 0px))\");\nexport var UNSAFE_MAIN_INLINE_START_FOR_LEGACY_PAGES_ONLY = \"var(\".concat(UNSAFE_sideNavLayoutVar, \", 0px)\");\nexport var UNSAFE_MAIN_INLINE_END_FOR_LEGACY_PAGES_ONLY = \"calc(var(\".concat(UNSAFE_asideLayoutVar, \", 0px) + var(\").concat(UNSAFE_panelLayoutVar, \", 0px))\");\n\n/**\n * We define the z-indexes here so each page slot can be locally layered against each other.\n * For globally defined values such as flag, modal, etc, we can continue to\n * rely on accessing them through global means.\n */\nexport var localSlotLayers = {\n  topBar: 4,\n  banner: 4,\n  sideNav: 2,\n  panelSmallViewports: 1\n};", "import { useId } from '@atlaskit/ds-lib/use-id';\n\n// Exposing a hook as a convenience for consumers, so they don't need to import\n// from ds-lib themselves.\n/**\n * Returns a unique ID for use by layout elements and skip links.\n * You can use this for custom skip links.\n */\nexport function useSkipLinkId() {\n  var uniqueId = useId();\n  return uniqueId;\n}\n\n/**\n * Returns an ID for use by the layout element and skip links.\n *\n * If the consumer has already provided an ID, it will be used instead.\n * Otherwise, a unique ID will be returned.\n */\nexport function useLayoutId() {\n  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n    providedId = _ref.providedId;\n  var uniqueId = useSkipLinkId();\n  var id = providedId ? providedId : uniqueId;\n  return id;\n}"],
  "mappings": ";;;;;AAOO,IAAI,aAAa;AACjB,IAAI,WAAW;AACf,IAAI,WAAW;AACf,IAAI,mBAAmB;AACvB,IAAI,mBAAmB;AAOvB,IAAI,sBAAsB;AAC1B,IAAI,yBAAyB,OAAO,uBAAuB;AAC3D,IAAI,uBAAuB,OAAO,qBAAqB;AACvD,IAAI,uBAAuB,OAAO,qBAAqB;AAWvD,IAAI,mBAAmB;AACvB,IAAI,mBAAmB;AACvB,IAAI,0BAA0B;AAC9B,IAAI,wBAAwB;AAC5B,IAAI,wBAAwB;AAI5B,IAAI,gDAAgD,YAAY,OAAO,kBAAkB,eAAe,EAAE,OAAO,kBAAkB,SAAS;AAC5I,IAAI,iDAAiD,OAAO,OAAO,yBAAyB,QAAQ;AACpG,IAAI,+CAA+C,YAAY,OAAO,uBAAuB,eAAe,EAAE,OAAO,uBAAuB,SAAS;;;AClCrJ,SAAS,gBAAgB;AAC9B,MAAI,WAAW,MAAM;AACrB,SAAO;AACT;AAQO,SAAS,cAAc;AAC5B,MAAI,OAAO,UAAU,SAAS,KAAK,UAAU,CAAC,MAAM,SAAY,UAAU,CAAC,IAAI,CAAC,GAC9E,aAAa,KAAK;AACpB,MAAI,WAAW,cAAc;AAC7B,MAAI,KAAK,aAAa,aAAa;AACnC,SAAO;AACT;",
  "names": []
}
