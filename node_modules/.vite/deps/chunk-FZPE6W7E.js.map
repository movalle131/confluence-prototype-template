{
  "version": 3,
  "sources": ["../../@atlaskit/navigation-system/dist/esm/ui/menu-item/link-menu-item.js", "../../@atlaskit/navigation-system/dist/esm/ui/menu-item/use-scroll-menu-item-into-view.js"],
  "sourcesContent": ["/* link-menu-item.tsx generated by @compiled/babel-plugin v0.36.1 */\nimport \"./link-menu-item.compiled.css\";\nimport * as React from 'react';\nimport { ax, ix } from \"@compiled/react/runtime\";\nimport { useMemo, useRef } from 'react';\nimport mergeRefs from '@atlaskit/ds-lib/merge-refs';\nimport { forwardRefWithGeneric } from '../../components/forward-ref-with-generic';\nimport { ListItem } from '../../components/list-item';\nimport { MenuItemBase } from './menu-item';\nimport { useScrollMenuItemIntoView } from './use-scroll-menu-item-into-view';\nvar listItemStyles = {\n  root: \"_10m98stt\"\n};\nvar LinkMenuItemNoRef = function LinkMenuItemNoRef(_ref, forwardedRef) {\n  var testId = _ref.testId,\n    actions = _ref.actions,\n    children = _ref.children,\n    description = _ref.description,\n    elemAfter = _ref.elemAfter,\n    elemBefore = _ref.elemBefore,\n    href = _ref.href,\n    target = _ref.target,\n    actionsOnHover = _ref.actionsOnHover,\n    isSelected = _ref.isSelected,\n    onClick = _ref.onClick,\n    interactionName = _ref.interactionName,\n    isContentTooltipDisabled = _ref.isContentTooltipDisabled,\n    visualContentRef = _ref.visualContentRef,\n    listItemRef = _ref.listItemRef,\n    isDragging = _ref.isDragging,\n    hasDragIndicator = _ref.hasDragIndicator,\n    dropIndicator = _ref.dropIndicator;\n  var itemRef = useRef(null);\n  useScrollMenuItemIntoView({\n    elementRef: itemRef,\n    isSelected: isSelected !== null && isSelected !== void 0 ? isSelected : false\n  });\n  var ref = useMemo(function () {\n    return mergeRefs([itemRef, listItemRef !== null && listItemRef !== void 0 ? listItemRef : null]);\n  }, [itemRef, listItemRef]);\n  return /*#__PURE__*/React.createElement(ListItem, {\n    ref: ref,\n    xcss: listItemStyles.root\n  }, /*#__PURE__*/React.createElement(MenuItemBase, {\n    testId: testId,\n    description: description,\n    actions: actions,\n    elemAfter: elemAfter\n    // TODO Always use \"open in new window\" icon when `openInNewWindow` prop is true\n    ,\n    elemBefore: elemBefore,\n    href: href,\n    target: target,\n    actionsOnHover: actionsOnHover,\n    isSelected: isSelected,\n    onClick: onClick,\n    ref: forwardedRef,\n    visualContentRef: visualContentRef,\n    interactionName: interactionName,\n    isContentTooltipDisabled: isContentTooltipDisabled,\n    isDragging: isDragging,\n    hasDragIndicator: hasDragIndicator,\n    dropIndicator: dropIndicator\n  }, children));\n};\n\n/**\n * LinkMenuItem\n *\n * A menu item link. It should be used within a `ul`.\n */\nexport var LinkMenuItem = forwardRefWithGeneric(LinkMenuItemNoRef);", "import { useEffect, useRef } from 'react';\nimport invariant from 'tiny-invariant';\nimport { useAreAllAncestorsExpanded } from './expandable-menu-item/expandable-menu-item-context';\nfunction scrollMenuItemIntoView(element) {\n  var _element$scrollIntoVi;\n  /**\n   * If [scrollIntoViewIfNeeded](https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollIntoViewIfNeeded) is available,\n   * we are using it to scroll the element into view _in the center_ of the scroll container. Because it is a non-standard method\n   * and not available on all browsers (currently not supported in Firefox), we are using it for progressive enhancement.\n   *\n   * Otherwise, we are falling back to [scrollIntoView](https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollIntoView).\n   */\n  if (typeof element.scrollIntoViewIfNeeded === 'function') {\n    element.scrollIntoViewIfNeeded(true);\n    return;\n  }\n\n  // JSDOM does not support scrollIntoView, so defensively using it (see https://github.com/jsdom/jsdom/issues/1695)\n  (_element$scrollIntoVi = element.scrollIntoView) === null || _element$scrollIntoVi === void 0 || _element$scrollIntoVi.call(element, {\n    // We are using `nearest` to prevent scrolling on user interaction when the menu item is already in view.\n    block: 'nearest'\n  });\n}\n\n/**\n * Scrolls the element into view once it is selected, and once all its ancestors (expandable\n * parent menu items) are expanded.\n *\n * Once that has happened, we don't want to scroll it into view again until it has been unselected.\n * This is to prevent the menu item from being scrolled into view again if the user collapses a\n * parent and then expands it again, without changing what menu item is selected.\n */\nexport function useScrollMenuItemIntoView(_ref) {\n  var elementRef = _ref.elementRef,\n    isSelected = _ref.isSelected;\n  var areAllAncestorsExpanded = useAreAllAncestorsExpanded();\n  var waitingStateRef = useRef({\n    type: 'waiting-to-be-selected-and-all-ancestors-expanded'\n  });\n  useEffect(function () {\n    if (waitingStateRef.current.type === 'waiting-to-be-selected-and-all-ancestors-expanded') {\n      var shouldScroll = areAllAncestorsExpanded && isSelected;\n      if (!shouldScroll) {\n        return;\n      }\n      var element = elementRef.current;\n      invariant(element, 'Element ref must be set');\n      scrollMenuItemIntoView(element);\n\n      // Now that we are scrolled the menu item into view, we need to wait for the menu item to\n      // be unselected before checking again.\n      waitingStateRef.current.type = 'waiting-to-be-unselected';\n      return;\n    }\n    if (waitingStateRef.current.type === 'waiting-to-be-unselected') {\n      if (!isSelected) {\n        waitingStateRef.current.type = 'waiting-to-be-selected-and-all-ancestors-expanded';\n      }\n      return;\n    }\n  }, [areAllAncestorsExpanded, elementRef, isSelected]);\n}"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,YAAuB;AACvB;AACA,IAAAA,gBAAgC;AAHhC,OAAO;;;ACDP,mBAAkC;AAGlC,SAAS,uBAAuB,SAAS;AACvC,MAAI;AAQJ,MAAI,OAAO,QAAQ,2BAA2B,YAAY;AACxD,YAAQ,uBAAuB,IAAI;AACnC;AAAA,EACF;AAGA,GAAC,wBAAwB,QAAQ,oBAAoB,QAAQ,0BAA0B,UAAU,sBAAsB,KAAK,SAAS;AAAA;AAAA,IAEnI,OAAO;AAAA,EACT,CAAC;AACH;AAUO,SAAS,0BAA0B,MAAM;AAC9C,MAAI,aAAa,KAAK,YACpB,aAAa,KAAK;AACpB,MAAI,0BAA0B,2BAA2B;AACzD,MAAI,sBAAkB,qBAAO;AAAA,IAC3B,MAAM;AAAA,EACR,CAAC;AACD,8BAAU,WAAY;AACpB,QAAI,gBAAgB,QAAQ,SAAS,qDAAqD;AACxF,UAAI,eAAe,2BAA2B;AAC9C,UAAI,CAAC,cAAc;AACjB;AAAA,MACF;AACA,UAAI,UAAU,WAAW;AACzB,gBAAU,SAAS,yBAAyB;AAC5C,6BAAuB,OAAO;AAI9B,sBAAgB,QAAQ,OAAO;AAC/B;AAAA,IACF;AACA,QAAI,gBAAgB,QAAQ,SAAS,4BAA4B;AAC/D,UAAI,CAAC,YAAY;AACf,wBAAgB,QAAQ,OAAO;AAAA,MACjC;AACA;AAAA,IACF;AAAA,EACF,GAAG,CAAC,yBAAyB,YAAY,UAAU,CAAC;AACtD;;;ADnDA,IAAI,iBAAiB;AAAA,EACnB,MAAM;AACR;AACA,IAAI,oBAAoB,SAASC,mBAAkB,MAAM,cAAc;AACrE,MAAI,SAAS,KAAK,QAChB,UAAU,KAAK,SACf,WAAW,KAAK,UAChB,cAAc,KAAK,aACnB,YAAY,KAAK,WACjB,aAAa,KAAK,YAClB,OAAO,KAAK,MACZ,SAAS,KAAK,QACd,iBAAiB,KAAK,gBACtB,aAAa,KAAK,YAClB,UAAU,KAAK,SACf,kBAAkB,KAAK,iBACvB,2BAA2B,KAAK,0BAChC,mBAAmB,KAAK,kBACxB,cAAc,KAAK,aACnB,aAAa,KAAK,YAClB,mBAAmB,KAAK,kBACxB,gBAAgB,KAAK;AACvB,MAAI,cAAU,sBAAO,IAAI;AACzB,4BAA0B;AAAA,IACxB,YAAY;AAAA,IACZ,YAAY,eAAe,QAAQ,eAAe,SAAS,aAAa;AAAA,EAC1E,CAAC;AACD,MAAI,UAAM,uBAAQ,WAAY;AAC5B,WAAO,UAAU,CAAC,SAAS,gBAAgB,QAAQ,gBAAgB,SAAS,cAAc,IAAI,CAAC;AAAA,EACjG,GAAG,CAAC,SAAS,WAAW,CAAC;AACzB,SAA0B,oBAAc,UAAU;AAAA,IAChD;AAAA,IACA,MAAM,eAAe;AAAA,EACvB,GAAsB,oBAAc,cAAc;AAAA,IAChD;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IAGA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA,KAAK;AAAA,IACL;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF,GAAG,QAAQ,CAAC;AACd;AAOO,IAAI,eAAe,sBAAsB,iBAAiB;",
  "names": ["import_react", "LinkMenuItemNoRef"]
}
