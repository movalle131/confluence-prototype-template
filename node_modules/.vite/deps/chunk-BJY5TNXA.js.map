{
  "version": 3,
  "sources": ["../../@atlaskit/navigation-system/dist/esm/ui/page-layout/top-nav/top-nav.js", "../../@atlaskit/navigation-system/dist/esm/ui/top-nav-items/themed/use-custom-theme.js", "../../@atlaskit/navigation-system/dist/esm/ui/top-nav-items/themed/get-custom-theme-styles.js", "../../@atlaskit/navigation-system/dist/esm/ui/top-nav-items/themed/color-utils/index.js", "../../@atlaskit/navigation-system/dist/esm/ui/top-nav-items/themed/color-utils/formats/hex.js", "../../@atlaskit/navigation-system/dist/esm/ui/top-nav-items/themed/palette.js", "../../@atlaskit/navigation-system/dist/esm/ui/top-nav-items/themed/search.js", "../../@atlaskit/navigation-system/dist/esm/ui/page-layout/top-nav/top-nav-start.js", "../../@atlaskit/navigation-system/dist/esm/ui/page-layout/top-nav/top-nav-middle.js", "../../@atlaskit/navigation-system/dist/esm/ui/page-layout/top-nav/top-nav-end.js"],
  "sourcesContent": ["/* top-nav.tsx generated by @compiled/babel-plugin v0.36.1 */\nimport \"./top-nav.compiled.css\";\nimport * as React from 'react';\nimport { ax, ix } from \"@compiled/react/runtime\";\nimport { useContext } from 'react';\nimport { useSkipLink } from '../../../context/skip-links/skip-links-context';\nimport { HasCustomThemeContext } from '../../top-nav-items/themed/has-custom-theme-context';\nimport { useCustomTheme } from '../../top-nav-items/themed/use-custom-theme';\nimport { bannerMountedVar, localSlotLayers, topNavMountedVar, UNSAFE_topNavVar } from '../constants';\nimport { DangerouslyHoistSlotSizes } from '../hoist-slot-sizes-context';\nimport { DangerouslyHoistCssVarToDocumentRoot, HoistCssVarToLocalGrid } from '../hoist-utils';\nimport { useLayoutId } from '../id-utils';\nvar styles = {\n  root: \"_nd5l8cbt _zulpu2gc _18zrutpp _179rzgxb _1e0c11p5 _yv0e1mfv _4cvr1h6o _bfhkvuon _vchhusvi _4t3i1dgc _152t1nws _kqsw1if8 _1pbyegat _d6vu1bgi _1j8b18ax\"\n};\n\n/**\n * The top nav layout area. It will display at the top of the screen, below the banner if one is present.\n */\nexport function TopNav(_ref) {\n  var children = _ref.children,\n    xcss = _ref.xcss,\n    _ref$height = _ref.height,\n    height = _ref$height === void 0 ? 48 : _ref$height,\n    _ref$skipLinkLabel = _ref.skipLinkLabel,\n    skipLinkLabel = _ref$skipLinkLabel === void 0 ? 'Top Bar' : _ref$skipLinkLabel,\n    testId = _ref.testId,\n    providedId = _ref.id,\n    UNSAFE_theme = _ref.UNSAFE_theme;\n  var dangerouslyHoistSlotSizes = useContext(DangerouslyHoistSlotSizes);\n  var id = useLayoutId({\n    providedId: providedId\n  });\n  useSkipLink(id, skipLinkLabel);\n  var customTheme = useCustomTheme(UNSAFE_theme);\n  return /*#__PURE__*/React.createElement(HasCustomThemeContext.Provider, {\n    value: customTheme.isEnabled\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    id: id,\n    \"data-layout-slot\": true,\n    className: ax([styles.root, xcss]),\n    \"data-testid\": testId\n    // eslint-disable-next-line @atlaskit/ui-styling-standard/enforce-style-prop\n    ,\n    style: customTheme.isEnabled ? customTheme.style : undefined\n  }, /*#__PURE__*/React.createElement(HoistCssVarToLocalGrid, {\n    variableName: topNavMountedVar,\n    value: height\n  }), dangerouslyHoistSlotSizes &&\n  /*#__PURE__*/\n  // ------ START UNSAFE STYLES ------\n  // These styles are only needed for the UNSAFE legacy use case for Jira + Confluence.\n  // When they aren't needed anymore we can delete them wholesale.\n  React.createElement(DangerouslyHoistCssVarToDocumentRoot, {\n    variableName: UNSAFE_topNavVar,\n    value: height\n  })\n  // ------ END UNSAFE STYLES ------\n  , children));\n}", "import { useMemo } from 'react';\nimport { getCustomThemeStyles } from './get-custom-theme-styles';\n/**\n * Processes the provided theme and returns theme styles if possible.\n */\nexport function useCustomTheme(theme) {\n  var value = useMemo(function () {\n    if (!(theme !== null && theme !== void 0 && theme.backgroundColor) || !(theme !== null && theme !== void 0 && theme.highlightColor)) {\n      return {\n        isEnabled: false\n      };\n    }\n\n    /**\n     * Re-creating the `theme` object from it's pieces.\n     *\n     * _Technically_ we could just use `theme`, but that would involve an eslint opt out\n     * as we would be leveraging a value (`theme`) not in the dependency array.\n     *\n     * The current approach is the most correct‚Ñ¢Ô∏è and avoids foot guns.\n     * We are only using values in the effect that are defined in the dependency array üôå\n     */\n    var value = {\n      backgroundColor: theme.backgroundColor,\n      highlightColor: theme.highlightColor\n    };\n    var style = getCustomThemeStyles(value);\n    if (!style) {\n      // Either the `backgroundColor` or `highlightColor` could not be parsed\n      return {\n        isEnabled: false\n      };\n    }\n    return {\n      isEnabled: true,\n      style: style\n    };\n  },\n  // Using individual properties as keys for improved memoization.\n  // Now this effect will only run if the values change rather than\n  // the reference to the object (which might be new on every call)\n  [theme === null || theme === void 0 ? void 0 : theme.backgroundColor, theme === null || theme === void 0 ? void 0 : theme.highlightColor]);\n  return value;\n}", "import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { themedLogoIcon, themedLogoText } from '../nav-logo/logo-renderer';\nimport { themedButtonBackground, themedButtonBackgroundHovered, themedButtonBackgroundPressed, themedButtonBorder, themedButtonDisabledBackground, themedButtonDisabledText, themedButtonPrimaryBackground, themedButtonPrimaryBackgroundHovered, themedButtonPrimaryBackgroundPressed, themedButtonPrimaryText, themedButtonSelectedBackground, themedButtonSelectedBackgroundHovered, themedButtonSelectedBackgroundPressed, themedButtonSelectedBorder, themedButtonSelectedText } from './button';\nimport { getColorMode, getTextColor, isLight, simpleAlphaComposite } from './color-utils';\nimport { parseHex } from './color-utils/formats/hex';\nimport { palette, paletteRgba } from './palette';\nimport { themedSearchBorder, themedSearchBorderFocused } from './search';\n\n/**\n * Expects colors to be passed as `RGB` objects.\n *\n * Allows `string` for hex strings only, for backwards compatibility.\n * This will likely be removed in the future.\n *\n * Allows `null` for ergonomic reasons, because our color parsing utilities can return\n * `null` if they cannot parse a color string.\n */\n\nfunction toRGBString(_ref) {\n  var r = _ref.r,\n    g = _ref.g,\n    b = _ref.b;\n  return \"rgb(\".concat(r, \", \").concat(g, \", \").concat(b, \")\");\n}\nfunction toRGBAString(_ref2) {\n  var r = _ref2.r,\n    g = _ref2.g,\n    b = _ref2.b,\n    a = _ref2.a;\n  return \"rgba(\".concat(r, \", \").concat(g, \", \").concat(b, \", \").concat(a, \")\");\n}\n// Using raw hex codes because custom colors break out of the tokens model\n// We will need to invert the colors based on backgroundColor independently of the app's color mode (dark/light)\n// Values here are not final\nvar buttonStyles = {\n  light: _defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty({}, themedButtonBackground, 'transparent'), themedButtonBackgroundHovered, palette.Neutral200A), themedButtonBackgroundPressed, palette.Neutral300A), themedButtonBorder, palette.Neutral300A), themedButtonSelectedBackground, palette.Neutral300A), themedButtonSelectedBackgroundHovered, palette.Neutral400A), themedButtonSelectedBackgroundPressed, palette.Neutral500A), themedButtonDisabledText, palette.Neutral400A), themedButtonDisabledBackground, palette.Neutral100A),\n  dark: _defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty({}, themedButtonBackground, 'transparent'), themedButtonBackgroundHovered, palette.DarkNeutral200A), themedButtonBackgroundPressed, palette.DarkNeutral300A), themedButtonBorder, palette.DarkNeutral300A), themedButtonSelectedBackground, palette.DarkNeutral300A), themedButtonSelectedBackgroundHovered, palette.DarkNeutral400A), themedButtonSelectedBackgroundPressed, palette.DarkNeutral500A), themedButtonDisabledText, palette.DarkNeutral400A), themedButtonDisabledBackground, palette.DarkNeutral100A)\n};\nvar logoStyles = {\n  light: _defineProperty(_defineProperty({}, themedLogoIcon, palette.DarkNeutral0), themedLogoText, palette.DarkNeutral0),\n  dark: _defineProperty(_defineProperty({}, themedLogoIcon, palette.Neutral0), themedLogoText, palette.Neutral0)\n};\n\n/**\n * Provides a `style` prop value for the `TopNav` that defines required CSS variables.\n *\n * If a provided `backgroundColor` or `highlightColor` cannot be parsed,\n * then `null` will be returned.\n */\nexport function getCustomThemeStyles(_ref3) {\n  var backgroundColor = _ref3.backgroundColor,\n    highlightColor = _ref3.highlightColor;\n  var backgroundRgb = typeof backgroundColor === 'string' ? parseHex(backgroundColor) : backgroundColor;\n  var highlightRgb = typeof highlightColor === 'string' ? parseHex(highlightColor) : highlightColor;\n  if (!backgroundRgb || !highlightRgb) {\n    return null;\n  }\n  var textColor = getTextColor(backgroundRgb);\n  var colorMode = getColorMode(backgroundRgb);\n  var highlightTextColor = getTextColor(highlightRgb);\n  return _objectSpread(_objectSpread(_objectSpread(_objectSpread({\n    backgroundColor: toRGBString(backgroundRgb),\n    color: textColor.hex\n  }, buttonStyles[colorMode]), logoStyles[colorMode]), getSelectedStyles({\n    backgroundColor: backgroundRgb,\n    colorMode: colorMode\n  })), {}, _defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty({}, themedSearchBorder, toRGBAString(_objectSpread(_objectSpread({}, textColor.rgb), {}, {\n    a: 0.5\n  }))), themedSearchBorderFocused, toRGBAString(_objectSpread(_objectSpread({}, highlightRgb), {}, {\n    a: 0.8\n  }))), themedButtonPrimaryBackground, toRGBString(highlightRgb)), themedButtonPrimaryBackgroundHovered, toRGBAString(_objectSpread(_objectSpread({}, highlightRgb), {}, {\n    a: 0.8\n  }))), themedButtonPrimaryBackgroundPressed, toRGBAString(_objectSpread(_objectSpread({}, highlightRgb), {}, {\n    a: 0.65\n  }))), themedButtonPrimaryText, highlightTextColor.hex));\n}\n\n/**\n * Precomputed RGBA values for the selected backgrounds\n */\nvar selectedBackgroundRGBA = {\n  light: paletteRgba.Neutral300A,\n  dark: paletteRgba.DarkNeutral300A\n};\nfunction getSelectedStyles(_ref4) {\n  var backgroundColor = _ref4.backgroundColor,\n    colorMode = _ref4.colorMode;\n  /**\n   * The background color of the selected button in its default state.\n   *\n   * We are referring to this as a foreground color because it is semi-transparent,\n   * so is not the actual color displayed when the button is on top of a background color.\n   */\n  var foregroundColor = selectedBackgroundRGBA[colorMode];\n\n  /**\n   * The blended color seen when the selected background is over the top bar.\n   */\n  var blendedBackground = simpleAlphaComposite({\n    background: backgroundColor,\n    foreground: foregroundColor\n  });\n  return _defineProperty(_defineProperty({}, themedButtonSelectedText, getTextColor(blendedBackground).hex), themedButtonSelectedBorder, isLight(blendedBackground) ? palette.Neutral1100 : palette.DarkNeutral1100);\n}", "/**\n * Removes sRGB gamma correction from the provided channel.\n * The resulting linear channel directly corresponds to subpixel intensity.\n *\n * Expects a normalized sRGB value (between 0 and 1)\n *\n * This formula is derived from WCAG2 guidelines:\n * https://www.w3.org/WAI/WCAG22/Techniques/general/G18.html#tests\n */\nfunction linearizeRGBChannel(channel) {\n  return channel <= 0.04045 ? channel / 12.92 : Math.pow((channel + 0.055) / 1.055, 2.4);\n}\n\n/**\n * This formula is derived from WCAG2 guidelines:\n * https://www.w3.org/WAI/WCAG22/Techniques/general/G18.html#tests\n */\nfunction relativeLuminanceW3C(_ref) {\n  var r = _ref.r,\n    g = _ref.g,\n    b = _ref.b;\n  /**\n   * Normalized sRGB - each channel is between 0 and 1\n   */\n  var normal = {\n    r: r / 255,\n    g: g / 255,\n    b: b / 255\n  };\n\n  /**\n   * linear RGB - the gamma correction of sRGB is removed and\n   * the channels correspond directly to subpixel intensity\n   */\n  var linear = {\n    r: linearizeRGBChannel(normal.r),\n    g: linearizeRGBChannel(normal.g),\n    b: linearizeRGBChannel(normal.b)\n  };\n\n  // For linear RGB, the relative luminance of a color is defined as:\n  var L = 0.2126 * linear.r + 0.7152 * linear.g + 0.0722 * linear.b;\n  return L;\n}\n\n/**\n * This is the intersection point for W3C contrast ratio against:\n *\n * 1. black\n * 2. white\n *\n * In other words, the background luminance for which W3C contrast is equal\n * for both white and black text.\n *\n * Using a precomputed flip point means we can save a lot of calculations.\n *\n * This is only the theoretical flip point, and we can adjust it as needed.\n */\nvar flipLuminance = 0.179129;\nexport function isLight(color) {\n  return relativeLuminanceW3C(color) >= flipLuminance;\n}\nexport function getColorMode(backgroundColor) {\n  if (relativeLuminanceW3C(backgroundColor) >= flipLuminance) {\n    return 'light';\n  }\n  return 'dark';\n}\nvar textColor = {\n  light: {\n    hex: '#000',\n    rgb: {\n      r: 0,\n      g: 0,\n      b: 0\n    }\n  },\n  dark: {\n    hex: '#FFF',\n    rgb: {\n      r: 255,\n      g: 255,\n      b: 255\n    }\n  }\n};\nexport function getTextColor(backgroundColor) {\n  var colorMode = getColorMode(backgroundColor);\n  return textColor[colorMode];\n}\n\n/**\n * Simple alpha compositing as defined in\n * https://www.w3.org/TR/compositing-1/#simplealphacompositing\n *\n * This is the standard approach for alpha blending using the\n * Porter-Duff 'source over' compositing operator.\n *\n * This has been simplified to assume the background has no transparency.\n */\nexport function simpleAlphaComposite(_ref2) {\n  var background = _ref2.background,\n    foreground = _ref2.foreground;\n  return {\n    r: foreground.a * foreground.r + background.r * (1 - foreground.a),\n    g: foreground.a * foreground.g + background.g * (1 - foreground.a),\n    b: foreground.a * foreground.b + background.b * (1 - foreground.a)\n  };\n}", "// valid hex color (optional alpha channel) - 3, 4, 6, or 8 digits after the #\nvar isValidHex = function isValidHex(hex) {\n  return (\n    // Not using `([a-f0-9]{3,4}){1,2}` because that allows 7 digits which is invalid\n    /^#(([a-f0-9]{3,4})|([a-f0-9][a-f0-9]){3,4})$/i.test(hex)\n  );\n};\n\n/**\n * Attempts to parse a hex color into RGB.\n *\n * Alpha channel will be accepted but ignored.\n *\n * Returns `null` on failure.\n */\nexport function parseHex(color) {\n  if (!isValidHex(color)) {\n    if (process.env.NODE_ENV !== 'production') {\n      // eslint-disable-next-line no-console\n      console.error(\"parseHex failed to parse input: '\".concat(color, \"'\"));\n    }\n    return null;\n  }\n  var channels;\n  if (color.length <= 5) {\n    // Hex code is shorthand - RGB channels are one digit\n    channels = {\n      r: color[1].repeat(2),\n      g: color[2].repeat(2),\n      b: color[3].repeat(2)\n    };\n  } else {\n    // Hex code is longhand - RGB channels are two digits\n    channels = {\n      r: color.slice(1, 3),\n      g: color.slice(3, 5),\n      b: color.slice(5, 7)\n    };\n  }\n  return {\n    r: parseInt(channels.r, 16),\n    g: parseInt(channels.g, 16),\n    b: parseInt(channels.b, 16)\n  };\n}", "/**\n * Copied from the brand refresh palette.\n *\n * Ideally we'd codegen this but the brand refresh palette isn't exposed\n * through public API and we shouldn't use the private API of another package.\n */\nexport var palette = {\n  'DarkNeutral-100': '#111213',\n  'DarkNeutral-100A': '#01040475',\n  DarkNeutral0: '#18191A',\n  DarkNeutral100: '#1F1F21',\n  DarkNeutral100A: '#BDBDBD0A',\n  DarkNeutral200: '#242528',\n  DarkNeutral200A: '#CECED912',\n  DarkNeutral250: '#2B2C2F',\n  DarkNeutral250A: '#D9DAE71A',\n  DarkNeutral300: '#303134',\n  DarkNeutral300A: '#E3E4F21F',\n  DarkNeutral350: '#3D3F43',\n  DarkNeutral350A: '#E8EDFD2E',\n  DarkNeutral400: '#4B4D51',\n  DarkNeutral400A: '#E5E9F640',\n  DarkNeutral500: '#63666B',\n  DarkNeutral500A: '#E9F0FB5C',\n  DarkNeutral600: '#7E8188',\n  DarkNeutral700: '#96999E',\n  DarkNeutral800: '#A9ABAF',\n  DarkNeutral900: '#BFC1C4',\n  DarkNeutral1000: '#CECFD2',\n  DarkNeutral1100: '#E2E3E4',\n  Neutral0: '#FFFFFF',\n  Neutral100: '#F8F8F8',\n  Neutral100A: '#17171708',\n  Neutral200: '#F0F1F2',\n  Neutral200A: '#0515240F',\n  Neutral300: '#DDDEE1',\n  Neutral300A: '#0B120E24',\n  Neutral400: '#B7B9BE',\n  Neutral400A: '#080F214A',\n  Neutral500: '#8C8F97',\n  Neutral500A: '#050C1F75',\n  Neutral600: '#7D818A',\n  Neutral700: '#6B6E76',\n  Neutral800: '#505258',\n  Neutral900: '#3B3D42',\n  Neutral1000: '#292A2E',\n  Neutral1100: '#1E1F21'\n};\nexport var paletteRgba = {\n  DarkNeutral300A: {\n    r: 0xe3,\n    g: 0xe4,\n    b: 0xf2,\n    a: 0x1f / 255\n  },\n  Neutral300A: {\n    r: 0x0b,\n    g: 0x12,\n    b: 0x0e,\n    a: 0x24 / 255\n  }\n};", "import { themedButtonBackgroundHovered } from './button';\nimport { useHasCustomTheme } from './has-custom-theme-context';\nexport var themedSearchBorder = '--ds-top-bar-search-border';\nexport var themedSearchBorderFocused = '--ds-top-bar-search-border-focused';\n\n/**\n * Theme object intended for use with Search Platform components while transitioning to nav4.\n *\n * This is for backwards compatibility with the legacy theming API that was designed for nav3.\n *\n * As nav4 matures we will ideally evolve the theming solution inside Search Platform,\n * at which point this legacy theme object will not be needed.\n */\nvar legacySearchTheme = {\n  default: {\n    backgroundColor: 'transparent',\n    color: 'currentColor',\n    borderColor: \"var(\".concat(themedSearchBorder, \")\")\n  },\n  focus: {\n    /**\n     * When expanded the input ignores the custom theme,\n     * except for its border which is derived from the highlight color.\n     */\n    color: \"var(--ds-text, #172B4D)\",\n    backgroundColor: \"var(--ds-background-input-pressed, #FFFFFF)\",\n    borderColor: \"var(\".concat(themedSearchBorderFocused, \")\"),\n    boxShadow: \"inset 0px 0px 0px 1px var(\".concat(themedSearchBorderFocused, \")\")\n  },\n  hover: {\n    /**\n     * This is not actually used for the search bar input (at least by the Search Platform components).\n     *\n     * Instead it's used as the hover background color for a close button when on mobile.\n     */\n    backgroundColor: \"var(\".concat(themedButtonBackgroundHovered, \")\")\n  }\n};\n\n/**\n * We are just using the inferred type instead of declaring it as `SearchCSS` (the type `@atlassian/search-dialog` expects)\n *\n * Importing the type from `@atlassian/search-dialog` means we have to declare it as a full dependency,\n * rather than a dev dependency. Even though it's type-only, this is how local consumption is setup.\n *\n * This was failing typechecking in Post Office, presumably due to different versions of `@emotion/styled`.\n * It is also a code smell having an unnecessary dependency.\n *\n * We still have indirect type safety from our example + product integrations, so a PR that breaks the types won't be able to merge.\n */\n\n/**\n * Provides the `theme` value for Search Platform components.\n *\n * This may be a `SearchCSS` object or undefined,\n * depending on if the top bar is using custom theming.\n */\nexport function useLegacySearchTheme() {\n  var hasCustomTheme = useHasCustomTheme();\n  if (hasCustomTheme) {\n    return legacySearchTheme;\n  }\n  return undefined;\n}", "/* top-nav-start.tsx generated by @compiled/babel-plugin v0.36.1 */\nimport \"./top-nav-start.compiled.css\";\nimport { ax, ix } from \"@compiled/react/runtime\";\nimport React, { useContext, useEffect, useRef } from 'react';\nimport { fg } from '@atlaskit/platform-feature-flags';\nimport { TopNavStartAttachRef } from '../../../context/top-nav-start/top-nav-start-context';\nvar styles = {\n  root: \"_zulp1b66 _yyhykb7n _4t3i1osq _4cvr1h6o _1e0c1txw _glte1ris _15ri1mjv _1gs5usvi\"\n};\n\n/**\n * __TopNavStart__\n *\n * Wrapper for the top navigation actions on the inline-start (left) side of the top navigation.\n */\nexport function TopNavStart(_ref) {\n  var children = _ref.children,\n    testId = _ref.testId;\n  var ref = useContext(TopNavStartAttachRef);\n  var elementRef = useRef(null);\n  useEffect(function () {\n    if (fg('platform_fix_component_state_update_for_suspense')) {\n      ref(elementRef.current);\n    }\n  }, [elementRef, ref]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    ref: fg('platform_fix_component_state_update_for_suspense') ? elementRef : ref,\n    \"data-testid\": testId,\n    className: ax([styles.root])\n  }, children);\n}", "/* top-nav-middle.tsx generated by @compiled/babel-plugin v0.36.1 */\nimport \"./top-nav-middle.compiled.css\";\nimport { ax, ix } from \"@compiled/react/runtime\";\nimport React from 'react';\nvar styles = {\n  root: \"_zulpu2gc _yyhycs5v _1bsb1osq _4cvr1h6o _1e0c1txw _1bahh9n0 _181n11p5 _1j8b15b0 _lagd1bp4 _1t4c1ris _12e8h9n0\"\n};\n\n/**\n * __TopNavMiddle__\n *\n * Wrapper for the actions in the middle of the top navigation.\n *\n * Expects that the search bar is the first child.\n * If it is not, you might see unexpected layout behavior.\n */\nexport function TopNavMiddle(_ref) {\n  var children = _ref.children;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: ax([styles.root])\n  }, children);\n}", "/* top-nav-end.tsx generated by @compiled/babel-plugin v0.36.1 */\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport \"./top-nav-end.compiled.css\";\nimport { ax, ix } from \"@compiled/react/runtime\";\nimport React, { useState } from 'react';\nimport { cx } from '@compiled/react';\nimport { useLayoutEffect } from '@atlaskit/ds-lib/use-layout-effect';\nimport ShowMoreHorizontalIcon from '@atlaskit/icon/core/show-more-horizontal';\nimport Popup from '@atlaskit/popup';\nimport { UNSAFE_useMediaQuery as useMediaQuery } from '@atlaskit/primitives/compiled';\nimport { List } from '../../../components/list';\nimport { HasCustomThemeContext } from '../../top-nav-items/themed/has-custom-theme-context';\nimport { IconButton } from '../../top-nav-items/themed/migration';\nvar containerStyles = {\n  root: \"_yyhy11wp _1e0c1txw _1bahh9n0 _1ul9zwfg _1d2y1ris _glte1ris _15ri1mjv _1gs5usvi _ndwch9n0\"\n};\nvar listStyles = {\n  root: \"_zulp1b66 _4cvr1h6o _1e0c1txw\",\n  hideOnSmallViewport: \"_1e0cglyw _181n1txw\",\n  popupContainer: \"_1yt4u2gc\"\n};\n\n/**\n * __TopNavEnd__\n *\n * Wrapper for the top navigation actions on the inline-end (right) side of the top navigation.\n *\n * On small viewports, the children will be placed inside a popup, and a button will be rendered to open the popup.\n * This is to prevent the actions from overflowing the top navigation.\n */\nexport function TopNavEnd(_ref) {\n  var children = _ref.children,\n    _ref$label = _ref.label,\n    label = _ref$label === void 0 ? 'Actions' : _ref$label,\n    _ref$showMoreButtonLa = _ref.showMoreButtonLabel,\n    showMoreButtonLabel = _ref$showMoreButtonLa === void 0 ? 'Show more' : _ref$showMoreButtonLa;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isOpen = _useState2[0],\n    setIsOpen = _useState2[1];\n  // Always setting to `false` for the initial render (will flip in an effect for mobile)\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isMobile = _useState4[0],\n    setIsMobile = _useState4[1];\n  // Note: `query` is a stable value between renders\n  var query = useMediaQuery('below.sm', function onChange(event) {\n    setIsMobile(event.matches);\n    // Any time we shift between mobile and desktop\n    // We always close the popup\n    setIsOpen(false);\n  });\n  useLayoutEffect(function () {\n    var _query$matches;\n    // The default is `false`, and desktop will remain as `false` (no re-render).\n    // Mobile will flip from `false` to `true`.\n    setIsMobile((_query$matches = query === null || query === void 0 ? void 0 : query.matches) !== null && _query$matches !== void 0 ? _query$matches : false);\n  }, [query]);\n  return /*#__PURE__*/React.createElement(\"nav\", {\n    \"aria-label\": label,\n    className: ax([containerStyles.root])\n  }, isMobile ? /*#__PURE__*/React.createElement(Popup, {\n    isOpen: isOpen,\n    onClose: function onClose() {\n      return setIsOpen(false);\n    },\n    placement: \"bottom-start\",\n    shouldRenderToParent: true,\n    content: function content() {\n      return /*#__PURE__*/React.createElement(HasCustomThemeContext.Provider, {\n        value: false\n      }, /*#__PURE__*/React.createElement(List, {\n        xcss: cx(listStyles.root, listStyles.popupContainer)\n      }, children));\n    },\n    trigger: function trigger(triggerProps) {\n      return /*#__PURE__*/React.createElement(IconButton, _extends({}, triggerProps, {\n        label: showMoreButtonLabel,\n        isSelected: isOpen,\n        onClick: function onClick() {\n          return setIsOpen(!isOpen);\n        },\n        icon: ShowMoreHorizontalIcon,\n        isTooltipDisabled: false\n      }));\n    }\n  }) : /*#__PURE__*/React.createElement(List, {\n    xcss: cx(listStyles.root, listStyles.hideOnSmallViewport)\n  }, children));\n}"],
  "mappings": "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",
  "names": ["import_react", "isValidHex", "r", "textColor", "value", "import_react", "styles", "React", "import_react", "styles", "React", "import_react", "React", "ShowMoreHorizontalIcon"]
}
