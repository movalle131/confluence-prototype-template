import {
  useHasCustomTheme
} from "./chunk-54HUSBMH.js";
import {
  init_runtime
} from "./chunk-XC7QRLB3.js";
import {
  fg,
  init_esm
} from "./chunk-WFA677R7.js";
import {
  require_react
} from "./chunk-QJTFJ6OV.js";
import {
  __toESM
} from "./chunk-V4OQ3NZ2.js";

// node_modules/@atlaskit/navigation-system/dist/esm/ui/top-nav-items/nav-logo/logo-renderer.js
init_runtime();
var import_react = __toESM(require_react());
init_esm();
var themedLogoIcon = "--ds-top-bar-logo-icon";
var themedLogoText = "--ds-top-bar-logo-text";
function LogoRenderer(_ref) {
  var logoOrIcon = _ref.logoOrIcon, shouldUseNewLogoDesign = _ref.shouldUseNewLogoDesign;
  return fg("jiv-20710-fix-nav-rerender") ? import_react.default.createElement(LogoRendererMemo, {
    logoOrIcon,
    shouldUseNewLogoDesign
  }) : import_react.default.createElement(LogoRendererNoMemo, {
    logoOrIcon,
    shouldUseNewLogoDesign
  });
}
var LogoRendererMemo = (0, import_react.memo)(LogoRendererNoMemo);
function LogoRendererNoMemo(_ref2) {
  var LogoOrIcon = _ref2.logoOrIcon, shouldUseNewLogoDesign = _ref2.shouldUseNewLogoDesign;
  var hasCustomTheme = useHasCustomTheme();
  if (hasCustomTheme) {
    return import_react.default.createElement(LogoOrIcon, {
      label: "",
      size: "small",
      shouldUseNewLogoDesign,
      iconColor: "var(".concat(themedLogoIcon, ")"),
      textColor: "var(".concat(themedLogoText, ")")
    });
  }
  return import_react.default.createElement(LogoOrIcon, {
    size: "small",
    shouldUseNewLogoDesign,
    label: "",
    appearance: "brand"
  });
}

export {
  themedLogoIcon,
  themedLogoText,
  LogoRenderer
};
//# sourceMappingURL=chunk-N2BKMIOS.js.map
