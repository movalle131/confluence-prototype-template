{
  "version": 3,
  "sources": ["../../@atlaskit/navigation-system/dist/esm/ui/page-layout/root.js", "../../@atlaskit/navigation-system/dist/esm/components/skip-links/skip-links-container.js", "../../@atlaskit/navigation-system/dist/esm/context/skip-links/skip-links-data-context.js", "../../@atlaskit/navigation-system/dist/esm/components/skip-links/skip-link.js", "../../@atlaskit/navigation-system/dist/esm/context/skip-links/skip-links-provider.js", "../../@atlaskit/navigation-system/dist/esm/context/top-nav-start/top-nav-start-context-provider.js", "../../@atlaskit/navigation-system/dist/esm/context/top-nav-start/top-nav-start-context.js", "../../@atlaskit/navigation-system/dist/esm/ui/page-layout/hoist-slot-sizes-context.js", "../../@atlaskit/navigation-system/dist/esm/ui/page-layout/side-nav/element-context.js", "../../@atlaskit/navigation-system/dist/esm/ui/page-layout/side-nav/toggle-button-provider.js", "../../@atlaskit/navigation-system/dist/esm/ui/page-layout/side-nav/toggle-button-context.js", "../../@atlaskit/navigation-system/dist/esm/ui/page-layout/side-nav/visibility-provider.js", "../../@atlaskit/navigation-system/dist/esm/ui/page-layout/side-nav/visibility-context.js"],
  "sourcesContent": ["/* root.tsx generated by @compiled/babel-plugin v0.36.1 */\nimport \"./root.compiled.css\";\nimport { ax, ix } from \"@compiled/react/runtime\";\nimport React, { useEffect, useRef } from 'react';\nimport { OpenLayerObserver } from '@atlaskit/layering/experimental/open-layer-observer';\nimport { SkipLinksContainer } from '../../components/skip-links/skip-links-container';\nimport { SkipLinksProvider } from '../../context/skip-links/skip-links-provider';\nimport { TopNavStartProvider } from '../../context/top-nav-start/top-nav-start-context-provider';\nimport { DangerouslyHoistSlotSizes } from './hoist-slot-sizes-context';\nimport { SideNavElementProvider } from './side-nav/element-context';\nimport { SideNavToggleButtonProvider } from './side-nav/toggle-button-provider';\nimport { SideNavVisibilityProvider } from './side-nav/visibility-provider';\n\n// ID of the root element that the banner and top bar slots hoist their sizes to. Only internally exported.\nexport var gridRootId = 'unsafe-design-system-page-layout-root';\nvar styles = {\n  root: \"_1e0c11p5 _1tke1kxc _1lmcq9em _yv0ei47z _2z0516ab _1ciragmp _12fkuz0r _12qzrxre _1rqt70if _xkmgbaui _jbc7rxre _tyve1jg8\"\n};\n\n/**\n * The root component of the navigation system. It wraps the underlying components with the necessary contexts allowing to use certain data and hooks\n * @param skipLinksLabel - The very first element of the layout is a skip links container that can be accessed by pressing Tab button and holds the links to the other sections of the layout thus improving accessibility. This parameter defines the header text for this container\n */\nexport function Root(_ref) {\n  var children = _ref.children,\n    xcss = _ref.xcss,\n    _ref$UNSAFE_dangerous = _ref.UNSAFE_dangerouslyHoistSlotSizes,\n    UNSAFE_dangerouslyHoistSlotSizes = _ref$UNSAFE_dangerous === void 0 ? false : _ref$UNSAFE_dangerous,\n    _ref$skipLinksLabel = _ref.skipLinksLabel,\n    skipLinksLabel = _ref$skipLinksLabel === void 0 ? 'Skip to:' : _ref$skipLinksLabel,\n    testId = _ref.testId;\n  var ref = useRef(null);\n  useEffect(function () {\n    if (process.env.NODE_ENV !== 'production') {\n      var IGNORED_ELEMENTS = ['SCRIPT', 'STYLE'];\n      if (ref.current) {\n        Array.from(ref.current.children).forEach(function (child) {\n          if (!IGNORED_ELEMENTS.includes(child.tagName) && !child.hasAttribute('data-layout-slot')) {\n            // eslint-disable-next-line no-console\n            console.error(\"Page Layout Error\\n\\nThis element has been forcibly hidden:\\n\\n\", child, \"\\n\\nAn element was rendered as a child of the page layout root that isn't a page layout component! Resolve this error by moving it into a page layout component.\\n\\nThis message will not be displayed in production.\\n\");\n          }\n        });\n      }\n    }\n  }, []);\n  return /*#__PURE__*/React.createElement(SideNavVisibilityProvider, null, /*#__PURE__*/React.createElement(SideNavToggleButtonProvider, null, /*#__PURE__*/React.createElement(SideNavElementProvider, null, /*#__PURE__*/React.createElement(TopNavStartProvider, null, /*#__PURE__*/React.createElement(OpenLayerObserver, null, /*#__PURE__*/React.createElement(DangerouslyHoistSlotSizes.Provider, {\n    value: UNSAFE_dangerouslyHoistSlotSizes\n  }, /*#__PURE__*/React.createElement(SkipLinksProvider, null, /*#__PURE__*/React.createElement(SkipLinksContainer, {\n    label: skipLinksLabel,\n    testId: testId\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    ref: ref,\n    className: ax([styles.root, xcss]),\n    id: gridRootId,\n    \"data-testid\": testId\n  }, children))))))));\n}", "/* skip-links-container.tsx generated by @compiled/babel-plugin v0.36.1 */\n// eslint-disable-next-line @atlaskit/design-system/no-emotion-primitives -- to be migrated to @atlaskit/primitives/compiled â€“ go/akcss\nimport \"./skip-links-container.compiled.css\";\nimport * as React from 'react';\nimport { ax, ix } from \"@compiled/react/runtime\";\nimport { Text } from '@atlaskit/primitives';\nimport { useSortedSkipLinks } from '../../context/skip-links/skip-links-data-context';\nimport { SkipLink } from './skip-link';\nvar styles = {\n  root: \"_zulp1b66 _2rkoglpi _1rjcutpp _18zrutpp _1e0c1txw _2lx21bp4 _kqsw1n9t _1e02v47k _152tv47k _bfhk1bhr _16qs1cd0 _1pby1mrw _tzy4idpf _lcxvglyw _1digjh3g _1mygkb7n _18eu1wug\",\n  skipLinkList: \"_zulp1b66 _1e0c1txw _2lx21bp4 _1x8w11lx _2mzuglyw _1pfhze3t _bozgze3t\"\n};\n\n/**\n * Keydown handler to hide the skip links when escape is pressed.\n *\n * TODO: consider removing this, it doesn't make a lot of sense.\n * The skip links look like a popup but in reality they aren't.\n * Even though we hide them if you press TAB it will reopen the list and move to the next one...\n */\nvar closeOnEscape = function closeOnEscape(event) {\n  if (event.key !== 'Escape') {\n    return;\n  }\n  var activeElement = document.activeElement;\n  if (activeElement instanceof HTMLElement) {\n    activeElement.blur();\n  }\n};\nvar isOnlyWhitespaceRegex = /^\\s*$/;\n\n/**\n * A container element for the skip links\n * The default label will be used when the `skipLinksLabel` attribute is not\n * provided or the attribute is an empty string. If a string comprised only of\n * spaces is provided, the skip link heading element will be removed, but the\n * default label will still be used in `title` attribute of the skip links\n * themselves.\n */\nexport var SkipLinksContainer = function SkipLinksContainer(_ref) {\n  var label = _ref.label,\n    testId = _ref.testId;\n  var sortedSkipLinks = useSortedSkipLinks();\n  if (sortedSkipLinks.length === 0) {\n    return null;\n  }\n  var isEmptyLabel = isOnlyWhitespaceRegex.test(label);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    onKeyDown: closeOnEscape,\n    \"data-testid\": testId ? \"\".concat(testId, \"--skip-links-container\") : undefined,\n    className: ax([styles.root])\n  }, !isEmptyLabel && /*#__PURE__*/React.createElement(Text, {\n    weight: \"bold\",\n    testId: testId ? \"\".concat(testId, \"--skip-links-container--label\") : undefined\n  }, label), /*#__PURE__*/React.createElement(\"ol\", {\n    className: ax([styles.skipLinkList])\n  }, sortedSkipLinks.map(function (_ref2) {\n    var id = _ref2.id,\n      label = _ref2.label,\n      onBeforeNavigate = _ref2.onBeforeNavigate;\n    return /*#__PURE__*/React.createElement(SkipLink, {\n      key: id,\n      id: id,\n      onBeforeNavigate: onBeforeNavigate\n    }, label);\n  })));\n};", "import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { createContext, useContext, useMemo } from 'react';\n/**\n * Provides a way to store skip links\n */\nexport var SkipLinksDataContext = /*#__PURE__*/createContext([]);\nvar _assignIndex = function assignIndex(num, arr) {\n  if (!arr.includes(num)) {\n    return num;\n  }\n  return _assignIndex(num + 1, arr);\n};\nvar sortSkipLinks = function sortSkipLinks(arr) {\n  var customLinks = arr.filter(function (link) {\n    return Number.isInteger(link.listIndex);\n  });\n  if (customLinks.length === 0) {\n    return arr;\n  }\n  var usedIndexes = customLinks.map(function (a) {\n    return a.listIndex;\n  });\n  var regularLinksWithIdx = arr.filter(function (link) {\n    return link.listIndex === undefined;\n  }).map(function (link, idx) {\n    var listIndex = _assignIndex(idx, usedIndexes);\n    usedIndexes.push(listIndex);\n    return _objectSpread(_objectSpread({}, link), {}, {\n      listIndex: listIndex\n    });\n  });\n  return [].concat(_toConsumableArray(customLinks), _toConsumableArray(regularLinksWithIdx)).sort(function (a, b) {\n    return a.listIndex - b.listIndex;\n  });\n};\nexport var useSortedSkipLinks = function useSortedSkipLinks() {\n  var skipLinksData = useContext(SkipLinksDataContext);\n  return useMemo(function () {\n    return sortSkipLinks(skipLinksData);\n  }, [skipLinksData]);\n};", "/* skip-link.tsx generated by @compiled/babel-plugin v0.36.1 */\nimport \"./skip-link.compiled.css\";\nimport { ax, ix } from \"@compiled/react/runtime\";\nimport React, { useCallback } from 'react';\nimport { bind } from 'bind-event-listener';\n// eslint-disable-next-line @atlaskit/design-system/no-emotion-primitives -- to be migrated to @atlaskit/primitives/compiled â€“ go/akcss\nimport { Anchor } from '@atlaskit/primitives';\nvar styles = {\n  skipLinkListItem: \"_1pfhze3t\"\n};\n\n/**\n * Used for moving focus to the corresponding slot or custom target after clicking on a skip link.\n */\nfunction focusElement(element) {\n  /**\n   * Elements without an explicit `tabindex` attribute are not guaranteed to be focusable:\n   * https://html.spec.whatwg.org/multipage/interaction.html#attr-tabindex\n   *\n   * Our slots are not interactive, so this is required.\n   *\n   * In the future we may want to check if there is an existing `tabindex` attribute,\n   * as custom skip linked elements might already have one.\n   */\n  element.setAttribute('tabindex', '-1');\n\n  /**\n   * Cleanup the `tabindex` attribute we set when the slot or custom target loses focus.\n   *\n   * This is preferable to always having `tabindex=\"-1\"` because always applying the tab index can:\n   *\n   * - mess with click events\n   * - potentially cause a focus ring to be always visible\n   */\n  bind(element, {\n    type: 'blur',\n    listener: function listener() {\n      element.removeAttribute('tabindex');\n    },\n    options: {\n      // Using a one-time listener so it cleans itself up\n      once: true\n    }\n  });\n\n  /**\n   * Move focus to the slot or custom target.\n   *\n   * Calling `.focus()` will also scroll the element into view:\n   * https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/focus\n   */\n  element.focus({\n    // Forces the focus ring to appear after moving focus to the slot\n    // https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/focus#focusvisible\n    // @ts-expect-error - new and not in types yet\n    focusVisible: true\n  });\n}\n\n/**\n * A link that moves current tab position to a different element\n *\n * This component is rendered internally and is not exported publicly.\n */\nexport var SkipLink = function SkipLink(_ref) {\n  var id = _ref.id,\n    children = _ref.children,\n    onBeforeNavigate = _ref.onBeforeNavigate;\n  var href = \"#\".concat(id);\n  var onClick = useCallback(function (event) {\n    event.preventDefault();\n\n    // Intentionally not using `document.querySelector` because many valid IDs are not valid selectors.\n    var target = document.getElementById(id);\n    if (!target) {\n      return;\n    }\n\n    /**\n     * Internal slots can attach an `onBeforeNavigate` callback.\n     *\n     * Side nav uses this to ensure it is expanded.\n     */\n    onBeforeNavigate === null || onBeforeNavigate === void 0 || onBeforeNavigate();\n    focusElement(target);\n\n    /**\n     * We should look into removing this, or only calling it in specific cases.\n     *\n     * It means if the skip link element is in the window scroll container\n     * then it might not get scrolled into view properly.\n     *\n     * This is not an issue for the default slots on desktop, but could break custom skip links or\n     * even `Aside` on mobile.\n     *\n     * Keeping existing behavior for now because resetting the window scroll is actually good for some cases.\n     * E.g. jumping to main / aside it makes sense to look at the start of the content.\n     */\n    window.scrollTo(0, 0);\n  }, [id, onBeforeNavigate]);\n  return /*#__PURE__*/React.createElement(\"li\", {\n    className: ax([styles.skipLinkListItem])\n  }, /*#__PURE__*/React.createElement(Anchor\n  /**\n   * It looks like Safari handles link clicks during `pointerdown` unless it has an explicit `tabIndex={0}` :/\n   *\n   * Adding this explicitly makes the behavior consistent between browsers and lets us `event.preventDefault()`\n   * in the `onClick` handler.\n   */, {\n    tabIndex: 0,\n    href: href,\n    onClick: onClick\n  }, children));\n};", "import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useCallback, useMemo, useState } from 'react';\nimport { SkipLinksContext } from './skip-links-context';\nimport { SkipLinksDataContext } from './skip-links-data-context';\nvar getByDomOrderSortFunction = function getByDomOrderSortFunction() {\n  var layoutSlots = Array.from(document.querySelectorAll(\"[data-layout-slot]\"));\n  return function (a, b) {\n    var _a$listIndex, _b$listIndex;\n    var indexA = (_a$listIndex = a.listIndex) !== null && _a$listIndex !== void 0 ? _a$listIndex : layoutSlots.indexOf(document.getElementById(a.id));\n    var indexB = (_b$listIndex = b.listIndex) !== null && _b$listIndex !== void 0 ? _b$listIndex : layoutSlots.indexOf(document.getElementById(b.id));\n\n    /**\n     * If they are tied it is because one (or both) is\n     * a custom skiplink with a set index.\n     *\n     * Give the custom skiplink priority.\n     */\n    if (indexA === indexB) {\n      if (a.listIndex !== undefined) {\n        return -1;\n      } else {\n        return 1;\n      }\n    }\n    return indexA - indexB;\n  };\n};\n\n/**\n * Provides a way to store and use skip links by combining SkipLinksContext and SkipLinksDataContext\n */\nexport var SkipLinksProvider = function SkipLinksProvider(_ref) {\n  var children = _ref.children;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    links = _useState2[0],\n    setLinks = _useState2[1];\n  var registerSkipLink = useCallback(function (skipLinkData) {\n    // Don't add duplicate skip links\n    setLinks(function (oldLinks) {\n      if (oldLinks.some(function (_ref2) {\n        var id = _ref2.id;\n        return id === skipLinkData.id;\n      })) {\n        if (process.env.NODE_ENV !== 'production') {\n          // eslint-disable-next-line no-console\n          console.warn(\"Tried registering duplicate skip link for ID '\".concat(skipLinkData.id, \"'.\\n\\nIf you're trying to override a slot skip link label, then use the `skipLinkLabel` prop instead.\\n\\nThis error will not be shown in production, and the duplicate skip link will be ignored.\"));\n        }\n        return oldLinks;\n      }\n      return [].concat(_toConsumableArray(oldLinks), [skipLinkData]).sort(getByDomOrderSortFunction());\n    });\n  }, []);\n  var unregisterSkipLink = useCallback(function (id) {\n    setLinks(function (links) {\n      return links.filter(function (link) {\n        return link.id !== id;\n      });\n    });\n  }, []);\n  var contextValue = useMemo(function () {\n    var data = {\n      registerSkipLink: registerSkipLink,\n      unregisterSkipLink: unregisterSkipLink\n    };\n    return data;\n  }, [registerSkipLink, unregisterSkipLink]);\n  return /*#__PURE__*/React.createElement(SkipLinksContext.Provider, {\n    value: contextValue\n  }, /*#__PURE__*/React.createElement(SkipLinksDataContext.Provider, {\n    value: links\n  }, children));\n};", "import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport { TopNavStartAttachRef, TopNavStartElement } from './top-nav-start-context';\n\n/**\n * Provider for the TopNavStart container element contexts.\n *\n * We are using a [ref callback](https://react.dev/reference/react-dom/components/common#ref-callback) along with a state\n * for storing the element once it has mounted, so that the side nav can bind event listeners to the element\n * once it is mounted.\n *\n * Otherwise, the side nav can be mounted before the element (e.g. if the element is lazy loaded), which would prevent the\n * event listeners from being set up.\n *\n * State is required as opposed to just a ref so that the effects in the side nav can react to the element actually being mounted,\n * as ref values cannot be added as effect dependencies.\n */\nexport var TopNavStartProvider = function TopNavStartProvider(_ref) {\n  var children = _ref.children;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    element = _useState2[0],\n    setElement = _useState2[1];\n  return /*#__PURE__*/React.createElement(TopNavStartElement.Provider, {\n    value: element\n  }, /*#__PURE__*/React.createElement(TopNavStartAttachRef.Provider, {\n    value: setElement\n  }, children));\n};", "import { createContext } from 'react';\nimport __noop from '@atlaskit/ds-lib/noop';\n\n/**\n * Context for the TopNavStart container element\n * Used to power the side nav flyout by allowing the side nav to bind event listeners to the element, so we can\n * keep the flyout open while the user mouses from the top bar to the side nav.\n */\nexport var TopNavStartElement = /*#__PURE__*/createContext(null);\n\n/**\n * Context for the callback ref used to respond to the TopNavStart element ref being attached. It is used to update the\n * `TopNavStartElement` state so consumers can react to the ref being attached.\n *\n * e.g. Once the TopNavStart element has been mounted, the side nav can bind mouse event listeners to it.\n *\n * A callback ref is needed because the side nav can be mounted before elements in the top bar (e.g. if the element is lazy loaded),\n * which happens in Jira and Confluence), which would prevent the event listeners from being set up.\n */\nexport var TopNavStartAttachRef = /*#__PURE__*/createContext(__noop);", "import { createContext } from 'react';\n\n/**\n * Context for whether the slot sizes are to be hoisted to the document root.\n * It is set by consumers using a prop on the page layout `Root` element.\n */\nexport var DangerouslyHoistSlotSizes = /*#__PURE__*/createContext(false);", "import React, { createContext, useContext, useRef } from 'react';\nvar SideNavRefContext = /*#__PURE__*/createContext({\n  current: null\n});\nexport function SideNavElementProvider(_ref) {\n  var children = _ref.children;\n  var sideNavRef = useRef(null);\n  return /*#__PURE__*/React.createElement(SideNavRefContext.Provider, {\n    value: sideNavRef\n  }, children);\n}\n\n/**\n * Returns a ref for the side navigation that is accessible to other Page Layout slots.\n *\n * Used by the Panel to measure the SideNav when it is calculating its resize bounds.\n */\nexport function useSideNavRef() {\n  return useContext(SideNavRefContext);\n}", "import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport { SideNavToggleButtonAttachRef, SideNavToggleButtonElement } from './toggle-button-context';\n\n/**\n * Provider for the side nav toggle button contexts.\n *\n * We are using a [ref callback](https://react.dev/reference/react-dom/components/common#ref-callback) along with a state\n * for storing the button element once it has mounted, so that the side nav can bind event listeners to the button\n * once it is mounted.\n *\n * Otherwise, the side nav can be mounted before the button (e.g. if the button is lazy loaded), which would prevent the\n * event listeners from being set up.\n *\n * State is required as opposed to just a ref so that the effects in the side nav can react the element actually being mounted,\n * as ref values cannot be added as effect dependencies.\n */\nexport var SideNavToggleButtonProvider = function SideNavToggleButtonProvider(_ref) {\n  var children = _ref.children;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    element = _useState2[0],\n    setElement = _useState2[1];\n  return /*#__PURE__*/React.createElement(SideNavToggleButtonElement.Provider, {\n    value: element\n  }, /*#__PURE__*/React.createElement(SideNavToggleButtonAttachRef.Provider, {\n    value: setElement\n  }, children));\n};", "import { createContext } from 'react';\nimport __noop from '@atlaskit/ds-lib/noop';\n/**\n * Context for the side nav toggle button element.\n * Used to power the side nav flyout by allowing the side nav to bind event listeners to the button element.\n */\nexport var SideNavToggleButtonElement = /*#__PURE__*/createContext(null);\n\n/**\n * Context for the callback ref used to respond to toggle button ref being attached. It is used to update the\n * `SideNavToggleButtonRef` state so consumers can react to the ref being attached.\n *\n * e.g. Once the side nav toggle button has been mounted, the side nav can bind mouse event listeners to it\n * to power the sidenav flyout.\n *\n * A callback ref is needed because the side nav can be mounted before the elements in the top bar (e.g. if the element\n *  is lazy loaded, which happens in Jira and Confluence), which would prevent the event listeners from being set up.\n */\nexport var SideNavToggleButtonAttachRef = /*#__PURE__*/createContext(__noop);", "import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport { SetSideNavVisibilityState, SideNavVisibilityState } from './visibility-context';\n\n/**\n * Manages the side nav visibility state and provides the context.\n */\nexport var SideNavVisibilityProvider = function SideNavVisibilityProvider(_ref) {\n  var children = _ref.children;\n  // Defaults to null so we can determine if the value has been set yet (for SSR)\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    sideNavState = _useState2[0],\n    setSideNavState = _useState2[1];\n  return /*#__PURE__*/React.createElement(SideNavVisibilityState.Provider, {\n    value: sideNavState\n  }, /*#__PURE__*/React.createElement(SetSideNavVisibilityState.Provider, {\n    value: setSideNavState\n  }, children));\n};", "import { createContext } from 'react';\nimport __noop from '@atlaskit/ds-lib/noop';\n/**\n * Context for the visibility of the side nav.\n * State is initialised as null. This is used when the value has not been set yet - which is important to know for SSR.\n */\nexport var SideNavVisibilityState = /*#__PURE__*/createContext(null);\n\n/**\n * Sets the visibility of the side nav.\n */\nexport var SetSideNavVisibilityState = /*#__PURE__*/createContext(__noop);"],
  "mappings": "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",
  "names": ["import_react", "React", "r", "sortSkipLinks", "useSortedSkipLinks", "import_react", "SkipLink", "React", "styles", "closeOnEscape", "SkipLinksContainer", "label", "import_react", "getByDomOrderSortFunction", "SkipLinksProvider", "links", "React", "import_react", "import_react", "TopNavStartProvider", "React", "import_react", "import_react", "React", "import_react", "import_react", "SideNavToggleButtonProvider", "React", "import_react", "import_react", "SideNavVisibilityProvider", "React", "styles", "React"]
}
