{
  "version": 3,
  "sources": ["../../@atlaskit/popup/dist/esm/popup.js", "../../@atlaskit/popup/dist/esm/use-get-memoized-merged-trigger-ref-new.js", "../../@atlaskit/popup/dist/esm/index.js"],
  "sourcesContent": ["/* popup.tsx generated by @compiled/babel-plugin v0.36.1 */\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport \"./popup.compiled.css\";\nimport * as React from 'react';\nimport { ax, ix } from \"@compiled/react/runtime\";\n/* eslint-disable @repo/internal/react/require-jsdoc */\n\nimport { memo, useCallback, useState } from 'react';\nimport { useId } from '@atlaskit/ds-lib/use-id';\nimport { Layering } from '@atlaskit/layering';\nimport { useNotifyOpenLayerObserver } from '@atlaskit/layering/experimental/open-layer-observer';\nimport { fg } from '@atlaskit/platform-feature-flags';\nimport { Manager, Reference } from '@atlaskit/popper';\nimport Portal from '@atlaskit/portal';\nimport { Box } from '@atlaskit/primitives/compiled';\nimport PopperWrapper from './popper-wrapper';\nimport { usePopupAppearance } from './use-appearance';\nimport { useGetMemoizedMergedTriggerRef } from './use-get-memoized-merged-trigger-ref';\nimport { useGetMemoizedMergedTriggerRefNew } from './use-get-memoized-merged-trigger-ref-new';\nvar defaultLayer = 400;\nvar wrapperStyles = {\n  root: \"_kqswh2mm\"\n};\nexport var Popup = /*#__PURE__*/memo(function (_ref) {\n  var xcss = _ref.xcss,\n    _ref$appearance = _ref.appearance,\n    inAppearance = _ref$appearance === void 0 ? 'default' : _ref$appearance,\n    isOpen = _ref.isOpen,\n    providedId = _ref.id,\n    offset = _ref.offset,\n    testId = _ref.testId,\n    trigger = _ref.trigger,\n    content = _ref.content,\n    onClose = _ref.onClose,\n    boundary = _ref.boundary,\n    _ref$rootBoundary = _ref.rootBoundary,\n    rootBoundary = _ref$rootBoundary === void 0 ? 'viewport' : _ref$rootBoundary,\n    _ref$shouldFlip = _ref.shouldFlip,\n    shouldFlip = _ref$shouldFlip === void 0 ? true : _ref$shouldFlip,\n    _ref$placement = _ref.placement,\n    placement = _ref$placement === void 0 ? 'auto' : _ref$placement,\n    fallbackPlacements = _ref.fallbackPlacements,\n    PopupContainer = _ref.popupComponent,\n    _ref$autoFocus = _ref.autoFocus,\n    autoFocus = _ref$autoFocus === void 0 ? true : _ref$autoFocus,\n    _ref$zIndex = _ref.zIndex,\n    zIndex = _ref$zIndex === void 0 ? defaultLayer : _ref$zIndex,\n    _ref$shouldUseCapture = _ref.shouldUseCaptureOnOutsideClick,\n    shouldUseCaptureOnOutsideClick = _ref$shouldUseCapture === void 0 ? false : _ref$shouldUseCapture,\n    _ref$shouldRenderToPa = _ref.shouldRenderToParent,\n    inShouldRenderToParent = _ref$shouldRenderToPa === void 0 ? false : _ref$shouldRenderToPa,\n    _ref$shouldFitContain = _ref.shouldFitContainer,\n    shouldFitContainer = _ref$shouldFitContain === void 0 ? false : _ref$shouldFitContain,\n    _ref$shouldDisableFoc = _ref.shouldDisableFocusLock,\n    shouldDisableFocusLock = _ref$shouldDisableFoc === void 0 ? false : _ref$shouldDisableFoc,\n    _ref$shouldReturnFocu = _ref.shouldReturnFocus,\n    shouldReturnFocus = _ref$shouldReturnFocu === void 0 ? true : _ref$shouldReturnFocu,\n    strategy = _ref.strategy,\n    role = _ref.role,\n    label = _ref.label,\n    titleId = _ref.titleId,\n    modifiers = _ref.modifiers,\n    shouldFitViewport = _ref.shouldFitViewport;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    triggerRef = _useState2[0],\n    setTriggerRef = _useState2[1];\n  var getMergedTriggerRef = useGetMemoizedMergedTriggerRef();\n  var getMergedTriggerRefNew = useGetMemoizedMergedTriggerRefNew();\n  var generatedId = useId();\n  var _usePopupAppearance = usePopupAppearance({\n      appearance: inAppearance,\n      shouldRenderToParent: inShouldRenderToParent\n    }),\n    appearance = _usePopupAppearance.appearance,\n    shouldRenderToParent = _usePopupAppearance.shouldRenderToParent;\n  var id = providedId || generatedId;\n  var handleOpenLayerObserverCloseSignal = useCallback(function () {\n    onClose === null || onClose === void 0 || onClose(null);\n  }, [onClose]);\n  useNotifyOpenLayerObserver({\n    isOpen: isOpen,\n    onClose: handleOpenLayerObserverCloseSignal\n  });\n  var renderPopperWrapper = /*#__PURE__*/React.createElement(Layering, {\n    isDisabled: false\n  }, /*#__PURE__*/React.createElement(PopperWrapper, {\n    xcss: xcss,\n    appearance: appearance,\n    content: content,\n    isOpen: isOpen,\n    placement: placement,\n    fallbackPlacements: fallbackPlacements,\n    boundary: boundary,\n    rootBoundary: rootBoundary,\n    shouldFlip: shouldFlip,\n    offset: offset,\n    popupComponent: PopupContainer,\n    id: id,\n    testId: testId,\n    onClose: onClose,\n    autoFocus: autoFocus,\n    shouldUseCaptureOnOutsideClick: shouldUseCaptureOnOutsideClick,\n    shouldRenderToParent: shouldRenderToParent || shouldFitContainer,\n    shouldFitContainer: shouldFitContainer,\n    shouldDisableFocusLock: shouldDisableFocusLock,\n    shouldReturnFocus: shouldReturnFocus,\n    triggerRef: triggerRef,\n    strategy: shouldFitContainer ? 'absolute' : strategy,\n    role: role,\n    label: label,\n    titleId: titleId,\n    modifiers: modifiers,\n    shouldFitViewport: shouldFitViewport\n  }));\n  var popupContent = /*#__PURE__*/React.createElement(Manager, null, /*#__PURE__*/React.createElement(Reference, null, function (_ref2) {\n    var ref = _ref2.ref;\n    return trigger({\n      ref: !fg('platform-design-system-popup-ref') ? getMergedTriggerRef(ref, setTriggerRef, isOpen) : getMergedTriggerRefNew(ref, setTriggerRef),\n      'aria-controls': isOpen ? id : undefined,\n      'aria-expanded': isOpen,\n      'aria-haspopup': role === 'dialog' && fg('platform_dst_popup-disable-focuslock') ? 'dialog' : true\n    });\n  }), isOpen && (shouldRenderToParent || shouldFitContainer ? renderPopperWrapper : /*#__PURE__*/React.createElement(Portal, {\n    zIndex: zIndex\n  }, renderPopperWrapper)));\n  if (shouldFitContainer) {\n    return /*#__PURE__*/React.createElement(Box, {\n      xcss: wrapperStyles.root\n    }, popupContent);\n  }\n  return popupContent;\n});", "import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState } from 'react';\nimport memoizeOne from 'memoize-one';\n\n/**\n * Here setting ref is not dependent on isOpen flag which is failing in React 18 strict mode\n * Implemented behind ff `platform-design-system-popup-ref`\n * @returns Function to set trigger ref\n */\nexport var useGetMemoizedMergedTriggerRefNew = function useGetMemoizedMergedTriggerRefNew() {\n  var _useState = useState(function () {\n      return memoizeOne(function (ref, setTriggerRef) {\n        return function (node) {\n          if (node) {\n            if (typeof ref === 'function') {\n              ref(node);\n            } else if (ref) {\n              ref.current = node;\n            }\n            setTriggerRef(node);\n          }\n        };\n      });\n    }),\n    _useState2 = _slicedToArray(_useState, 1),\n    getMemoizedMergedTriggerRefNew = _useState2[0];\n  return getMemoizedMergedTriggerRefNew;\n};", "import { Popup } from './popup';\nexport { Popup };\n// eslint-disable-next-line @repo/internal/react/require-jsdoc\nexport default Popup;"],
  "mappings": "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",
  "names": ["import_react", "useGetMemoizedMergedTriggerRefNew"]
}
