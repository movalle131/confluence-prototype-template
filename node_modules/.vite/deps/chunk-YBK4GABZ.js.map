{
  "version": 3,
  "sources": ["../../@atlaskit/icon/core/chevron-right.js", "../../@atlaskit/navigation-system/dist/esm/ui/menu-item/flyout-menu-item/flyout-menu-item.js", "../../@atlaskit/popup/dist/esm/compositional/popup.js", "../../@atlaskit/navigation-system/dist/esm/ui/menu-item/flyout-menu-item/flyout-menu-item-content.js", "../../@atlaskit/navigation-system/dist/esm/ui/menu-item/flyout-menu-item/flyout-menu-item-trigger.js"],
  "sourcesContent": ["/**\n * THIS FILE WAS CREATED VIA CODEGEN DO NOT MODIFY {@see http://go/af-codegen}\n * @codegen <<SignedSource::dc9b5ca0894f9a89607a0f553a633e25>>\n * @codegenCommand yarn build:icon-glyphs\n */\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _baseNew = _interopRequireDefault(require(\"@atlaskit/icon/base-new\"));\nfunction _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }\n/**\n * Icon: \"ChevronRight\".\n * Category: multi-purpose\n * Location: @atlaskit/icon\n * Usage guidance: Do not use 16px chevrons within buttons, icon buttons, or dropdowns to maintain visual cohesion with ADS which uses 12px chevrons.\nKnown uses: Next page of pagination results, collapsed tree item, expand tree item\n * - [Examples](https://atlaskit.atlassian.com/packages/design-system/icon)\n * - [Code](https://atlaskit.atlassian.com/packages/design-system/icon/docs/custom-icons)\n */\nconst ChevronRightIcon = props => /*#__PURE__*/_react.default.createElement(_baseNew.default, Object.assign({\n  dangerouslySetGlyph: `<path fill=\"currentcolor\" d=\"m6.03 1.47 6 6a.75.75 0 0 1 .052 1.004l-.052.056-6 6-1.06-1.06L10.44 8 4.97 2.53z\"/>`\n  // eslint-disable-next-line @repo/internal/react/no-unsafe-spread-props\n}, props));\nChevronRightIcon.displayName = 'ChevronRightIcon';\nvar _default = exports.default = ChevronRightIcon;", "import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { forwardRef, useEffect } from 'react';\nimport useControlled from '@atlaskit/ds-lib/use-controlled';\nimport usePreviousValue from '@atlaskit/ds-lib/use-previous-value';\nimport { Popup } from '@atlaskit/popup/experimental';\nimport { MenuListItem } from '../menu-list-item';\nimport { IsOpenContext, SetIsOpenContext } from './flyout-menu-item-context';\n/**\n * __FlyoutMenuItem__\n *\n * Displays content in a flyout menu, triggered by a button.\n *\n * The top-level component that contains the trigger and content of a flyout menu.\n *\n * Usage example:\n * ```tsx\n * <FlyoutMenuItem>\n *   <FlyoutMenuItemTrigger>Trigger</FlyoutMenuItemTrigger>\n *   <FlyoutMenuItemContent>\n *     <MenuList>\n *       <ButtonMenuItem>Item 1</ButtonMenuItem>\n *       <ButtonMenuItem>Item 2</ButtonMenuItem>\n *     </MenuList>\n *   </FlyoutMenuItemContent>\n * </FlyoutMenuItem>\n * ```\n */\nexport var FlyoutMenuItem = /*#__PURE__*/forwardRef(function (_ref, forwardedRef) {\n  var children = _ref.children,\n    id = _ref.id,\n    isOpenControlled = _ref.isOpen,\n    _ref$isDefaultOpen = _ref.isDefaultOpen,\n    isDefaultOpen = _ref$isDefaultOpen === void 0 ? false : _ref$isDefaultOpen,\n    onOpenChange = _ref.onOpenChange;\n  var _useControlled = useControlled(isOpenControlled, function () {\n      return isDefaultOpen;\n    }),\n    _useControlled2 = _slicedToArray(_useControlled, 2),\n    isOpen = _useControlled2[0],\n    setIsOpen = _useControlled2[1];\n  var previousIsOpen = usePreviousValue(isOpen);\n  useEffect(function () {\n    if (previousIsOpen === undefined || previousIsOpen === isOpen) {\n      /**\n       * The previous value is `undefined` on initialization, so if it is `undefined` then the value hasn't changed.\n       *\n       * The previous value can be equal to the current one if the component re-renders due to something else changing.\n       *\n       * In both cases the value hasn't changed and we don't want to notify consumers.\n       */\n      return;\n    }\n    onOpenChange === null || onOpenChange === void 0 || onOpenChange(isOpen);\n  }, [isOpen, onOpenChange, previousIsOpen]);\n  return /*#__PURE__*/React.createElement(IsOpenContext.Provider, {\n    value: isOpen\n  }, /*#__PURE__*/React.createElement(SetIsOpenContext.Provider, {\n    value: setIsOpen\n  }, /*#__PURE__*/React.createElement(MenuListItem, {\n    ref: forwardedRef\n  }, /*#__PURE__*/React.createElement(Popup, {\n    id: id,\n    isOpen: isOpen\n  }, children))));\n});", "import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { createContext, useCallback, useContext, useState } from 'react';\nimport invariant from 'tiny-invariant';\nimport noop from '@atlaskit/ds-lib/noop';\nimport { useId } from '@atlaskit/ds-lib/use-id';\nimport { Layering } from '@atlaskit/layering';\nimport { useNotifyOpenLayerObserver } from '@atlaskit/layering/experimental/open-layer-observer';\nimport { Manager, Reference } from '@atlaskit/popper';\nimport Portal from '@atlaskit/portal';\nimport PopperWrapper from '../popper-wrapper';\nimport { usePopupAppearance } from '../use-appearance';\nimport { useGetMemoizedMergedTriggerRef } from '../use-get-memoized-merged-trigger-ref';\nvar IsOpenContext = /*#__PURE__*/createContext(false);\nvar IdContext = /*#__PURE__*/createContext(undefined);\nvar TriggerRefContext = /*#__PURE__*/createContext(null);\nvar SetTriggerRefContext = /*#__PURE__*/createContext(noop);\nvar EnsureIsInsidePopupContext = /*#__PURE__*/createContext(false);\n\n// Used to ensure popup sub-components are used within a Popup\n// and provide a useful error message if not.\nvar useEnsureIsInsidePopup = function useEnsureIsInsidePopup() {\n  var context = useContext(EnsureIsInsidePopupContext);\n  invariant(context, 'PopupTrigger and PopupContent components must be used within a Popup');\n};\n/**\n * __Popup__\n *\n * Popup is a composable component that provides the context for the trigger and content components.\n *\n * Usage example:\n * ```jsx\n * <Popup>\n *   <PopupTrigger>\n *     {(props) => (\n *       <button type=\"button\" {...props}>Click me</button>\n *      )}\n *   </PopupTrigger>\n *   <PopupContent>\n *     {(props) => <div>Hello world</div>}\n *   </PopupContent>\n * </Popup>\n * ```\n */\nexport var Popup = function Popup(_ref) {\n  var children = _ref.children,\n    providedId = _ref.id,\n    _ref$isOpen = _ref.isOpen,\n    isOpen = _ref$isOpen === void 0 ? false : _ref$isOpen;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    triggerRef = _useState2[0],\n    setTriggerRef = _useState2[1];\n  var generatedId = useId();\n  var id = providedId || generatedId;\n  return /*#__PURE__*/React.createElement(EnsureIsInsidePopupContext.Provider, {\n    value: true\n  }, /*#__PURE__*/React.createElement(IdContext.Provider, {\n    value: id\n  }, /*#__PURE__*/React.createElement(TriggerRefContext.Provider, {\n    value: triggerRef\n  }, /*#__PURE__*/React.createElement(SetTriggerRefContext.Provider, {\n    value: setTriggerRef\n  }, /*#__PURE__*/React.createElement(IsOpenContext.Provider, {\n    value: isOpen\n  }, /*#__PURE__*/React.createElement(Manager, null, children))))));\n};\n/**\n * __Popup trigger__\n *\n * Popup trigger is the component that renders the trigger for the popup.\n *\n * It must be a child of the Popup component.\n */\nexport var PopupTrigger = function PopupTrigger(_ref2) {\n  var children = _ref2.children;\n  useEnsureIsInsidePopup();\n  var isOpen = useContext(IsOpenContext);\n  var id = useContext(IdContext);\n  var setTriggerRef = useContext(SetTriggerRefContext);\n  var getMergedTriggerRef = useGetMemoizedMergedTriggerRef();\n  return /*#__PURE__*/React.createElement(Reference, null, function (_ref3) {\n    var ref = _ref3.ref;\n    return children({\n      ref: getMergedTriggerRef(ref, setTriggerRef, isOpen),\n      'aria-controls': id,\n      'aria-expanded': isOpen,\n      'aria-haspopup': true\n    });\n  });\n};\nvar defaultLayer = 400;\n/**\n * Disables popper.js GPU acceleration for this popup.\n * This means only positioning will be used, without any transforms.\n *\n * Performance will be degraded if the popup is expected to move.\n */\nvar shouldDisableGpuAccelerationModifiers = [{\n  name: 'computeStyles',\n  options: {\n    gpuAcceleration: false\n  }\n}];\n\n/**\n * __Popup content__\n *\n * Popup content is the component that renders the content of the popup.\n *\n * It must be a child of the Popup component.\n */\nexport var PopupContent = function PopupContent(_ref4) {\n  var xcss = _ref4.xcss,\n    _ref4$appearance = _ref4.appearance,\n    inAppearance = _ref4$appearance === void 0 ? 'default' : _ref4$appearance,\n    children = _ref4.children,\n    boundary = _ref4.boundary,\n    offset = _ref4.offset,\n    strategy = _ref4.strategy,\n    onClose = _ref4.onClose,\n    testId = _ref4.testId,\n    _ref4$rootBoundary = _ref4.rootBoundary,\n    rootBoundary = _ref4$rootBoundary === void 0 ? 'viewport' : _ref4$rootBoundary,\n    _ref4$shouldFlip = _ref4.shouldFlip,\n    shouldFlip = _ref4$shouldFlip === void 0 ? true : _ref4$shouldFlip,\n    _ref4$placement = _ref4.placement,\n    placement = _ref4$placement === void 0 ? 'auto' : _ref4$placement,\n    fallbackPlacements = _ref4.fallbackPlacements,\n    popupComponent = _ref4.popupComponent,\n    _ref4$autoFocus = _ref4.autoFocus,\n    autoFocus = _ref4$autoFocus === void 0 ? true : _ref4$autoFocus,\n    _ref4$zIndex = _ref4.zIndex,\n    zIndex = _ref4$zIndex === void 0 ? defaultLayer : _ref4$zIndex,\n    _ref4$shouldUseCaptur = _ref4.shouldUseCaptureOnOutsideClick,\n    shouldUseCaptureOnOutsideClick = _ref4$shouldUseCaptur === void 0 ? false : _ref4$shouldUseCaptur,\n    inShouldRenderToParent = _ref4.shouldRenderToParent,\n    _ref4$shouldDisableFo = _ref4.shouldDisableFocusLock,\n    shouldDisableFocusLock = _ref4$shouldDisableFo === void 0 ? false : _ref4$shouldDisableFo,\n    shouldFitContainer = _ref4.shouldFitContainer,\n    shouldFitViewport = _ref4.shouldFitViewport,\n    _ref4$shouldDisableGp = _ref4.shouldDisableGpuAcceleration,\n    shouldDisableGpuAcceleration = _ref4$shouldDisableGp === void 0 ? false : _ref4$shouldDisableGp;\n  useEnsureIsInsidePopup();\n  var isOpen = useContext(IsOpenContext);\n  var id = useContext(IdContext);\n  var triggerRef = useContext(TriggerRefContext);\n  var _usePopupAppearance = usePopupAppearance({\n      appearance: inAppearance,\n      shouldRenderToParent: inShouldRenderToParent\n    }),\n    appearance = _usePopupAppearance.appearance,\n    shouldRenderToParent = _usePopupAppearance.shouldRenderToParent;\n  var handleOpenLayerObserverCloseSignal = useCallback(function () {\n    onClose === null || onClose === void 0 || onClose(null);\n  }, [onClose]);\n  useNotifyOpenLayerObserver({\n    isOpen: isOpen,\n    onClose: handleOpenLayerObserverCloseSignal\n  });\n  if (!isOpen) {\n    return null;\n  }\n  var popperWrapper = /*#__PURE__*/React.createElement(Layering, {\n    isDisabled: false\n  }, /*#__PURE__*/React.createElement(PopperWrapper, {\n    xcss: xcss,\n    appearance: appearance,\n    content: children,\n    isOpen: isOpen,\n    placement: placement,\n    fallbackPlacements: fallbackPlacements,\n    boundary: boundary,\n    rootBoundary: rootBoundary,\n    shouldFlip: shouldFlip,\n    offset: offset,\n    popupComponent: popupComponent,\n    id: id,\n    testId: testId,\n    onClose: onClose,\n    autoFocus: autoFocus,\n    shouldFitContainer: shouldFitContainer,\n    shouldUseCaptureOnOutsideClick: shouldUseCaptureOnOutsideClick,\n    shouldRenderToParent: shouldRenderToParent,\n    shouldDisableFocusLock: shouldDisableFocusLock,\n    triggerRef: triggerRef,\n    strategy: strategy,\n    shouldFitViewport: shouldFitViewport,\n    modifiers: shouldDisableGpuAcceleration ? shouldDisableGpuAccelerationModifiers : undefined\n  }));\n  if (shouldRenderToParent) {\n    return popperWrapper;\n  }\n  return /*#__PURE__*/React.createElement(Portal, {\n    zIndex: zIndex\n  }, popperWrapper);\n};", "/* flyout-menu-item-content.tsx generated by @compiled/babel-plugin v0.36.1 */\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport \"./flyout-menu-item-content.compiled.css\";\nimport { ax, ix } from \"@compiled/react/runtime\";\nimport React, { forwardRef, useCallback, useContext, useEffect, useMemo, useRef, useState } from 'react';\nimport mergeRefs from '@atlaskit/ds-lib/merge-refs';\nimport { fg } from '@atlaskit/platform-feature-flags';\nimport { PopupContent } from '@atlaskit/popup/experimental';\nimport { SetIsOpenContext } from './flyout-menu-item-context';\nvar flyoutMenuItemContentStyles = {\n  root: \"_1q51u2gc _85i5u2gc _bozgu2gc _y4tiu2gc _14b51kdj\"\n};\n/**\n * __FlyoutMenuItemContent__\n *\n * The content that appears when the flyout menu is open.\n */\nexport var FlyoutMenuItemContent = /*#__PURE__*/forwardRef(function (_ref, forwardedRef) {\n  var children = _ref.children,\n    containerTestId = _ref.containerTestId,\n    onClose = _ref.onClose,\n    autoFocus = _ref.autoFocus;\n  var setIsOpen = useContext(SetIsOpenContext);\n  var handleClose = useCallback(function () {\n    onClose === null || onClose === void 0 || onClose();\n    setIsOpen(false);\n  }, [setIsOpen, onClose]);\n  return /*#__PURE__*/React.createElement(PopupContent, {\n    appearance: \"UNSAFE_modal-below-sm\",\n    onClose: handleClose,\n    placement: \"right-start\"\n    // Using a capture event listener so that we are more resilient against\n    // code that stops events. We _really_ want to close the flyout whenever\n    // user user clicks outside the flyout content\n    ,\n    shouldUseCaptureOnOutsideClick: fg('platform_dst_nav4_flyout_use_capture_outside'),\n    shouldFitViewport: true,\n    testId: containerTestId,\n    xcss: flyoutMenuItemContentStyles.root,\n    autoFocus: autoFocus\n    /**\n     * Disabling GPU acceleration removes the use of `transform` by popper.js for this popup.\n     *\n     * This allows makers to use popups with `shouldRenderToParent` inside the flyout.\n     *\n     * Without this, the `transform` makes the flyout the containing element for fixed positioning.\n     * Because the flyout is also a scroll container then any nested, layered element is unable to\n     * escape the flyout.\n     *\n     * Disabling the `transform` is the simplest way to resolve this layering issue,\n     * and should have negligible performance impacts, because the flyout menus should rarely\n     * need to be repositioned.\n     */,\n    shouldDisableGpuAcceleration: true\n  }, function (_ref2) {\n    var update = _ref2.update;\n    return /*#__PURE__*/React.createElement(UpdatePopperOnContentResize, {\n      ref: forwardedRef,\n      update: update\n    }, children);\n  });\n});\nfunction createResizeObserver(update) {\n  return new ResizeObserver(update);\n}\n\n/**\n * Will call the Popper.js `update()` method to recalculate positioning, when the flyout menu changes size.\n * This is the size of the scroll container, NOT the scroll content.\n *\n * We could potentially bake this into `@atlaskit/popup` or `@atlaskit/popper` but there are a few\n * reasons to keep it scoped to flyout menus for now:\n *\n * 1. It's easier to unwind\n * 2. We've only had bug reports for flyout menus\n * 3. Popup exposes the `update` function so consumers can already do this themselves if necessary\n * 4. Flyout menus are a lot more restricted to other popups, it might not make sense more generally\n */\nvar UpdatePopperOnContentResize = /*#__PURE__*/forwardRef(function (_ref3, forwardedRef) {\n  var update = _ref3.update,\n    children = _ref3.children;\n  /**\n   * Storing our `update` function in a ref so that we have a stable reference to it.\n   * We need this because our `ResizeObserver` callback cannot be changed after creating it.\n   */\n  var updateRef = useRef(update);\n  useEffect(function () {\n    updateRef.current = update;\n  }, [update]);\n\n  /**\n   * Stable function that calls the latest `update` function by calling it through the stable ref.\n   */\n  var triggerUpdate = useCallback(function () {\n    var _updateRef$current;\n    (_updateRef$current = updateRef.current) === null || _updateRef$current === void 0 || _updateRef$current.call(updateRef);\n  }, []);\n  var _useState = useState(function () {\n      return createResizeObserver(triggerUpdate);\n    }),\n    _useState2 = _slicedToArray(_useState, 1),\n    resizeObserver = _useState2[0];\n\n  /**\n   * This is a callback ref that will update which `HTMLElement` we are observing,\n   * if or when the underlying `HTMLElement` changes or unmounts.\n   */\n  var observeCallbackRef = useCallback(function (element) {\n    /**\n     * Unobserves all observed elements.\n     * Allows us to cleanup without needing to store a reference to the previous element.\n     */\n    resizeObserver.disconnect();\n    if (!element) {\n      return;\n    }\n    resizeObserver.observe(element);\n  }, [resizeObserver]);\n\n  /**\n   * We need to memoize the ref otherwise `triggerUpdate` is repeatedly called.\n   *\n   * This stems from ResizeObserver firing once after calling `.observe()` even if there\n   * was no resize.\n   *\n   * Without memoizing the ref, the update causes a rerender, which causes the ref to\n   * get recreated, which triggers an update and so on in a loop.\n   */\n  var ref = useMemo(function () {\n    return mergeRefs([forwardedRef, observeCallbackRef]);\n  }, [forwardedRef, observeCallbackRef]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    ref: ref\n  }, children);\n});", "/* flyout-menu-item-trigger.tsx generated by @compiled/babel-plugin v0.36.1 */\nimport \"./flyout-menu-item-trigger.compiled.css\";\nimport * as React from 'react';\nimport { ax, ix } from \"@compiled/react/runtime\";\nimport { forwardRef } from 'react';\nimport mergeRefs from '@atlaskit/ds-lib/merge-refs';\nimport ChevronRightIcon from '@atlaskit/icon/core/chevron-right';\nimport { PopupTrigger } from '@atlaskit/popup/experimental';\nimport { MenuItemBase } from '../menu-item';\nvar elemAfterStyles = {\n  root: \"_18zr12x7 _1tz3r0mg\"\n};\n/**\n * __FlyoutMenuItemTrigger__\n *\n * The button that toggles the flyout menu.\n */\nexport var FlyoutMenuItemTrigger = /*#__PURE__*/forwardRef(function (_ref, forwardedRef) {\n  var children = _ref.children,\n    elemBefore = _ref.elemBefore,\n    onClick = _ref.onClick,\n    isSelected = _ref.isSelected,\n    interactionName = _ref.interactionName,\n    testId = _ref.testId,\n    isContentTooltipDisabled = _ref.isContentTooltipDisabled,\n    visualContentRef = _ref.visualContentRef,\n    isDragging = _ref.isDragging,\n    hasDragIndicator = _ref.hasDragIndicator,\n    dropIndicator = _ref.dropIndicator;\n  return /*#__PURE__*/React.createElement(PopupTrigger, null, function (_ref2) {\n    var ref = _ref2.ref,\n      ariaControls = _ref2['aria-controls'],\n      ariaExpanded = _ref2['aria-expanded'],\n      ariaHasPopup = _ref2['aria-haspopup'];\n    return /*#__PURE__*/React.createElement(MenuItemBase, {\n      testId: testId,\n      ref: mergeRefs([ref, forwardedRef]),\n      visualContentRef: visualContentRef,\n      elemBefore: elemBefore,\n      elemAfter: /*#__PURE__*/React.createElement(\"div\", {\n        className: ax([elemAfterStyles.root])\n      }, /*#__PURE__*/React.createElement(ChevronRightIcon, {\n        label: \"\",\n        color: \"var(--ds-icon, #44546F)\",\n        size: \"small\"\n      })),\n      onClick: onClick,\n      ariaControls: ariaControls,\n      ariaExpanded: ariaExpanded,\n      ariaHasPopup: ariaHasPopup,\n      interactionName: interactionName,\n      isContentTooltipDisabled: isContentTooltipDisabled,\n      isSelected: isSelected,\n      isDragging: isDragging,\n      hasDragIndicator: hasDragIndicator,\n      dropIndicator: dropIndicator\n    }, children);\n  });\n});"],
  "mappings": "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",
  "names": ["ChevronRightIcon", "import_react", "IsOpenContext", "useEnsureIsInsidePopup", "Popup", "React", "PopupTrigger", "PopupContent", "React", "import_react", "React", "React", "import_react", "ChevronRightIcon"]
}
