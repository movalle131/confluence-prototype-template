import {
  ListItem
} from "./chunk-RNXQZLDM.js";
import {
  require_question_circle
} from "./chunk-DLZTHRDT.js";
import {
  LogoRenderer
} from "./chunk-N2BKMIOS.js";
import {
  require_settings
} from "./chunk-2QMOLFGZ.js";
import {
  require_app_switcher
} from "./chunk-M722CHCQ.js";
import {
  require_add
} from "./chunk-SFYP2GJ2.js";
import {
  require_notification
} from "./chunk-4PK344O7.js";
import {
  avatar_default
} from "./chunk-YQENXFTL.js";
import {
  Button,
  IconButton,
  LinkIconButton,
  useHasCustomTheme
} from "./chunk-54HUSBMH.js";
import {
  anchor_default,
  inline_default,
  text_default as text_default2
} from "./chunk-PJFXQFKG.js";
import {
  require_search
} from "./chunk-YMWXUMSA.js";
import {
  base_new_exports,
  init_base_new
} from "./chunk-ZJT24HX4.js";
import {
  tooltip_default
} from "./chunk-PA42JLCQ.js";
import {
  Show,
  cx,
  pressable_default,
  text_default
} from "./chunk-SKNBEIPO.js";
import {
  _extends,
  init_extends
} from "./chunk-TRLI7EVB.js";
import {
  ax,
  init_runtime
} from "./chunk-XC7QRLB3.js";
import {
  _objectWithoutProperties,
  fg,
  init_esm,
  init_objectWithoutProperties
} from "./chunk-WFA677R7.js";
import {
  require_react
} from "./chunk-QJTFJ6OV.js";
import {
  __commonJS,
  __toCommonJS,
  __toESM
} from "./chunk-V4OQ3NZ2.js";

// node_modules/@atlaskit/icon/core/ai-chat.js
var require_ai_chat = __commonJS({
  "node_modules/@atlaskit/icon/core/ai-chat.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _react = _interopRequireDefault(require_react());
    var _baseNew = _interopRequireDefault((init_base_new(), __toCommonJS(base_new_exports)));
    function _interopRequireDefault(e) {
      return e && e.__esModule ? e : { default: e };
    }
    var AiChatIcon = (props) => _react.default.createElement(_baseNew.default, Object.assign({
      dangerouslySetGlyph: `<path fill="currentcolor" d="M14.5 3.125C14.5 2.504 13.996 2 13.375 2H2.625C2.004 2 1.5 2.504 1.5 3.125v10.832L4.05 12.5h9.325c.621 0 1.125-.504 1.125-1.125zm1.5 8.25A2.625 2.625 0 0 1 13.375 14H4.449l-3.327 1.901A.75.75 0 0 1 0 15.25V3.125A2.625 2.625 0 0 1 2.625.5h10.75A2.625 2.625 0 0 1 16 3.125z"/><path fill="currentcolor" d="M5 6.25a1 1 0 1 1 0 2 1 1 0 0 1 0-2m3 0a1 1 0 1 1 0 2 1 1 0 0 1 0-2m3 0a1 1 0 1 1 0 2 1 1 0 0 1 0-2"/>`
      // eslint-disable-next-line @repo/internal/react/no-unsafe-spread-props
    }, props));
    AiChatIcon.displayName = "AiChatIcon";
    var _default = exports.default = AiChatIcon;
  }
});

// node_modules/@atlaskit/icon/core/log-in.js
var require_log_in = __commonJS({
  "node_modules/@atlaskit/icon/core/log-in.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _react = _interopRequireDefault(require_react());
    var _baseNew = _interopRequireDefault((init_base_new(), __toCommonJS(base_new_exports)));
    function _interopRequireDefault(e) {
      return e && e.__esModule ? e : { default: e };
    }
    var LogInIcon2 = (props) => _react.default.createElement(_baseNew.default, Object.assign({
      dangerouslySetGlyph: `<path fill="currentcolor" fill-rule="evenodd" d="M13 2.5H8V1h5a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2H8v-1.5h5a.5.5 0 0 0 .5-.5V3a.5.5 0 0 0-.5-.5M7.44 7.25 5.22 5.03l1.06-1.06 3.5 3.5a.75.75 0 0 1 0 1.06l-3.5 3.5-1.06-1.06 2.22-2.22H1v-1.5z" clip-rule="evenodd"/>`
      // eslint-disable-next-line @repo/internal/react/no-unsafe-spread-props
    }, props));
    LogInIcon2.displayName = "LogInIcon";
    var _default = exports.default = LogInIcon2;
  }
});

// node_modules/@atlaskit/navigation-system/dist/esm/ui/top-nav-items/app-switcher.js
var import_react = __toESM(require_react());
var import_app_switcher = __toESM(require_app_switcher());
var toggleButtonTooltipOptions = {
  // We're disabling pointer events on the tooltip to prevent it from blocking mouse events, so that the side nav flyout stays open
  // when moving the mouse from the top bar to the side nav.
  ignoreTooltipPointerEvents: true
};
var AppSwitcher = (0, import_react.forwardRef)(function(_ref, ref) {
  var label = _ref.label, onClick = _ref.onClick, onMouseEnter = _ref.onMouseEnter, interactionName = _ref.interactionName, isSelected = _ref.isSelected, ariaControls = _ref["aria-controls"], ariaExpanded = _ref["aria-expanded"], ariaHasPopup = _ref["aria-haspopup"];
  return import_react.default.createElement(IconButton, {
    ref,
    "aria-controls": ariaControls,
    "aria-expanded": ariaExpanded,
    "aria-haspopup": ariaHasPopup,
    icon: import_app_switcher.default,
    label,
    appearance: "subtle",
    onClick,
    onMouseEnter,
    interactionName,
    isTooltipDisabled: false,
    tooltip: toggleButtonTooltipOptions,
    isSelected
  });
});

// node_modules/@atlaskit/navigation-system/dist/esm/ui/top-nav-items/nav-logo/custom-logo.js
init_runtime();
var import_react2 = __toESM(require_react());
import "/Users/movalle/Documents/GitHub/test-enhanced-app/node_modules/@atlaskit/navigation-system/dist/esm/ui/top-nav-items/nav-logo/custom-logo.compiled.css";
init_esm();
var anchorStyles = {
  root: "_2rkosqtm _1e0c1txw _4cvr1h6o _4t3izwfg",
  customLogoBorderRadius: "_2rkosqtm",
  newMargin: "_ahbq1b66",
  newInteractionStates: "_irr3166n _1di61wwy",
  newInteractionStatesCustomTheming: "_irr31rps _1di6yhlj"
};
var sharedIconOrLogoContainerStyles = {
  root: "_1reo15vq _18m915vq _bna71tcg _rtys1kw7 _1jpx1f51",
  appIconTilePaddingFlagged: "_18zr1b66"
};
var iconContainerStyles = {
  root: "_18zr1b66 _1e0c1txw _p12f1tcg _vchh1ntv _10y4glyw"
};
var logoContainerStyles = {
  root: "_18zru2gc _1e0cglyw _p12fnklw _vchh1ntv _10y41txw"
};
var CustomLogo = function CustomLogo2(_ref) {
  var href = _ref.href, logo = _ref.logo, icon = _ref.icon, onClick = _ref.onClick, label = _ref.label;
  var ref = (0, import_react2.useRef)(null);
  (0, import_react2.useEffect)(function() {
    var _img$parentElement, _img$parentElement2;
    if (false) {
      return;
    }
    if (!ref.current) {
      return;
    }
    var img = ref.current.querySelector("img");
    if (!img) {
      return;
    }
    var hasExpectedStructure = ((_img$parentElement = img.parentElement) === null || _img$parentElement === void 0 ? void 0 : _img$parentElement.parentElement) === ref.current;
    var isOnlyChild = ((_img$parentElement2 = img.parentElement) === null || _img$parentElement2 === void 0 ? void 0 : _img$parentElement2.childElementCount) === 1;
    if (!hasExpectedStructure || !isOnlyChild) {
      console.error("Custom logos should render only a single image tag with no wrappers.");
    }
    if (img.getAttribute("width") !== null || img.getAttribute("height") !== null || img.style.width !== "" || img.style.height !== "") {
      console.error("Do not set explicit dimensions on custom logo images. The container will resize the image to fit.");
    }
  }, []);
  var hasCustomTheme = useHasCustomTheme();
  return import_react2.default.createElement(anchor_default, {
    ref,
    "aria-label": label,
    href,
    xcss: cx(anchorStyles.root, anchorStyles.customLogoBorderRadius, anchorStyles.newMargin, hasCustomTheme ? anchorStyles.newInteractionStatesCustomTheming : anchorStyles.newInteractionStates),
    onClick
  }, import_react2.default.createElement("div", {
    className: ax([sharedIconOrLogoContainerStyles.root, iconContainerStyles.root, fg("platform-team25-app-icon-tiles") && sharedIconOrLogoContainerStyles.appIconTilePaddingFlagged])
  }, import_react2.default.createElement(LogoRenderer, {
    logoOrIcon: icon
  })), import_react2.default.createElement("div", {
    className: ax([sharedIconOrLogoContainerStyles.root, logoContainerStyles.root, fg("platform-team25-app-icon-tiles") && sharedIconOrLogoContainerStyles.appIconTilePaddingFlagged])
  }, import_react2.default.createElement(LogoRenderer, {
    logoOrIcon: logo
  })));
};

// node_modules/@atlaskit/navigation-system/dist/esm/ui/top-nav-items/nav-logo/app-logo.js
init_runtime();
var import_react4 = __toESM(require_react());
import "/Users/movalle/Documents/GitHub/test-enhanced-app/node_modules/@atlaskit/navigation-system/dist/esm/ui/top-nav-items/nav-logo/app-logo.compiled.css";
var anchorStyles2 = {
  root: "_2rko19bv _1e0c1txw _4cvr1h6o _4t3izwfg _1o9zidpf _ahbq1b66 _1toh1r31 _5jyqglyw _mrqmnqa1 _1w901kw7",
  interactionStates: "_irr3166n _1di61wwy",
  interactionStatesCustomTheming: "_irr31rps _1di6yhlj"
};
var logoWrapperStyles = {
  root: "_18zr1b66"
};
var iconContainerStyles2 = {
  root: "_1reo15vq _18m915vq _1e0c1txw _p12f1tcg"
};
var logoTextStyles = {
  root: "_1bsb1ris _p12fnklw _uiztglyw _y4tiv77o _1e0cglyw _10y418uv"
};
function isTextClamped(element) {
  return element.scrollHeight > element.clientHeight;
}
var AppLogo = function AppLogo2(_ref) {
  var name = _ref.name, label = _ref.label, href = _ref.href, icon = _ref.icon, onClick = _ref.onClick;
  var ref = (0, import_react4.useRef)(null);
  var nameRef = (0, import_react4.useRef)(null);
  var hasCustomTheme = useHasCustomTheme();
  var canTooltipAppear = (0, import_react4.useCallback)(function() {
    var text = nameRef.current;
    return Boolean(text && isTextClamped(text));
  }, []);
  return import_react4.default.createElement(anchor_default, {
    ref,
    "aria-label": label,
    href,
    xcss: cx(anchorStyles2.root, hasCustomTheme ? anchorStyles2.interactionStatesCustomTheming : anchorStyles2.interactionStates),
    onClick
  }, import_react4.default.createElement(inline_default, {
    space: "space.075",
    alignBlock: "center",
    xcss: logoWrapperStyles.root
  }, import_react4.default.createElement("div", {
    className: ax([iconContainerStyles2.root])
  }, import_react4.default.createElement(
    LogoRenderer,
    {
      shouldUseNewLogoDesign: true,
      logoOrIcon: icon
    }
  )), import_react4.default.createElement("span", {
    className: ax([logoTextStyles.root])
  }, import_react4.default.createElement(tooltip_default, {
    content: name,
    position: "bottom",
    ignoreTooltipPointerEvents: true,
    hideTooltipOnMouseDown: true,
    isScreenReaderAnnouncementDisabled: true,
    canAppear: canTooltipAppear
  }, function(tooltipProps) {
    return import_react4.default.createElement("span", tooltipProps, import_react4.default.createElement(text_default2, {
      "aria-hidden": true,
      color: "inherit",
      weight: "semibold",
      maxLines: 1,
      ref: nameRef
    }, name));
  }))));
};

// node_modules/@atlaskit/navigation-system/dist/esm/ui/top-nav-items/search.js
init_runtime();
var import_react6 = __toESM(require_react());
var import_search = __toESM(require_search());
import "/Users/movalle/Documents/GitHub/test-enhanced-app/node_modules/@atlaskit/navigation-system/dist/esm/ui/top-nav-items/search.compiled.css";
var styles = {
  root: "_2rkoiti9 _1rjcze3t _18zr12x7 _yv0e1mfv _4cvr1h6o _bfhk1j9a _vchhusvi _80om1kdv _1e0cglyw _4t3izwfg _p12f1kvu _1bsb1osq _irr31d5g _1di6r01l _114b11p5",
  buttonText: "_yyhyjvu9 _1ii7kb7n",
  iconBefore: "_yyhykb7n _1ii7kb7n _1e0c1txw",
  elemAfter: "_yyhy11wp _1ii7kb7n _1e0c1txw"
};
var Search = function Search2(_ref) {
  var label = _ref.label, onClick = _ref.onClick, _ref$iconBefore = _ref.iconBefore, IconBefore = _ref$iconBefore === void 0 ? import_search.default : _ref$iconBefore, elemAfter = _ref.elemAfter, interactionName = _ref.interactionName, ariaHaspopup = _ref["aria-haspopup"];
  return import_react6.default.createElement(import_react6.Fragment, null, import_react6.default.createElement(pressable_default, {
    style: {
      // To win the specificity war against Emotion we move this into inline styles
      // When Emotion has been stripped from the Design System move this to Compiled.
      // eslint-disable-next-line @atlaskit/ui-styling-standard/enforce-style-prop
      cursor: "text",
      border: "var(--ds-border-width, 1px)".concat(" solid ", "var(--ds-border-input, #8590A2)")
    },
    onClick,
    xcss: styles.root,
    interactionName,
    "aria-haspopup": ariaHaspopup
  }, import_react6.default.createElement("span", {
    className: ax([styles.iconBefore])
  }, import_react6.default.createElement(IconBefore, {
    color: "var(--ds-icon-subtle, #626F86)",
    spacing: "spacious",
    label: ""
  })), import_react6.default.createElement("div", {
    className: ax([styles.buttonText])
  }, import_react6.default.createElement(text_default, {
    color: "color.text.subtlest"
  }, label)), elemAfter && import_react6.default.createElement("span", {
    className: ax([styles.elemAfter])
  }, elemAfter)), import_react6.default.createElement(Show, {
    below: "xs"
  }, import_react6.default.createElement(IconButton, {
    label,
    appearance: "subtle",
    icon: import_search.default,
    onClick,
    interactionName,
    "aria-haspopup": ariaHaspopup
  })));
};

// node_modules/@atlaskit/navigation-system/dist/esm/ui/top-nav-items/chat-button.js
var import_react7 = __toESM(require_react());
var import_ai_chat = __toESM(require_ai_chat());
var ChatButton = function ChatButton2(_ref) {
  var children = _ref.children, onClick = _ref.onClick, isSelected = _ref.isSelected, interactionName = _ref.interactionName;
  return import_react7.default.createElement(ListItem, null, import_react7.default.createElement(Button, {
    appearance: "default",
    iconBefore: import_ai_chat.default,
    onClick,
    isSelected,
    interactionName
  }, children));
};

// node_modules/@atlaskit/navigation-system/dist/esm/ui/top-nav-items/end-item.js
var import_react8 = __toESM(require_react());
var EndItem = (0, import_react8.forwardRef)(function(_ref, forwardedRef) {
  var label = _ref.label, icon = _ref.icon, onClick = _ref.onClick, onMouseEnter = _ref.onMouseEnter, isSelected = _ref.isSelected, testId = _ref.testId, interactionName = _ref.interactionName, ariaControls = _ref["aria-controls"], ariaExpanded = _ref["aria-expanded"], ariaHasPopup = _ref["aria-haspopup"], _ref$isListItem = _ref.isListItem, isListItem = _ref$isListItem === void 0 ? true : _ref$isListItem;
  var Wrapper = isListItem ? ListItem : import_react8.Fragment;
  return import_react8.default.createElement(Wrapper, null, import_react8.default.createElement(IconButton, {
    ref: forwardedRef,
    icon,
    label,
    onClick,
    onMouseEnter,
    appearance: "subtle",
    isSelected,
    isTooltipDisabled: false,
    testId,
    interactionName,
    "aria-controls": ariaControls,
    "aria-expanded": ariaExpanded,
    "aria-haspopup": ariaHasPopup
  }));
});

// node_modules/@atlaskit/navigation-system/dist/esm/ui/top-nav-items/notifications.js
var import_react9 = __toESM(require_react());
var import_notification = __toESM(require_notification());

// node_modules/@atlaskit/navigation-system/dist/esm/components/badge-container.js
var React7 = __toESM(require_react());
init_runtime();
import "/Users/movalle/Documents/GitHub/test-enhanced-app/node_modules/@atlaskit/navigation-system/dist/esm/components/badge-container.compiled.css";
var styles2 = {
  root: "_kqswh2mm _1e0c1txw",
  badgeContainer: "_kqswstnw _o5721q9c _152tr5cr _1e02utpp _lcxvglyw"
};
var BadgeContainer = function BadgeContainer2(_ref) {
  var children = _ref.children, badgeId = _ref.id, Badge = _ref.badge, _ref$isListItem = _ref.isListItem, isListItem = _ref$isListItem === void 0 ? true : _ref$isListItem;
  return React7.createElement("div", {
    role: isListItem ? "listitem" : void 0,
    className: ax([styles2.root])
  }, children, React7.createElement("div", {
    id: badgeId,
    "aria-hidden": true,
    className: ax([styles2.badgeContainer])
  }, React7.createElement(Badge, null)));
};

// node_modules/@atlaskit/navigation-system/dist/esm/ui/top-nav-items/notifications.js
var NOTIFICATIONS_BADGE_ID = "atlassian-navigation-notification-count";
var Notifications = (0, import_react9.forwardRef)(function Notifications2(_ref, ref) {
  var label = _ref.label, onClick = _ref.onClick, onMouseEnter = _ref.onMouseEnter, isSelected = _ref.isSelected, testId = _ref.testId, interactionName = _ref.interactionName, ariaControls = _ref["aria-controls"], ariaExpanded = _ref["aria-expanded"], ariaHasPopup = _ref["aria-haspopup"], isListItem = _ref.isListItem, badge = _ref.badge;
  return import_react9.default.createElement(BadgeContainer, {
    id: NOTIFICATIONS_BADGE_ID,
    badge,
    isListItem
  }, import_react9.default.createElement(EndItem, {
    label,
    onClick,
    onMouseEnter,
    isSelected,
    testId,
    interactionName,
    "aria-controls": ariaControls,
    "aria-expanded": ariaExpanded,
    "aria-haspopup": ariaHasPopup,
    ref,
    icon: import_notification.default,
    isListItem: false
  }));
});

// node_modules/@atlaskit/navigation-system/dist/esm/ui/top-nav-items/create-button.js
var import_react10 = __toESM(require_react());
var import_add = __toESM(require_add());
var CreateButton = (0, import_react10.forwardRef)(function(_ref, ref) {
  var children = _ref.children, onClick = _ref.onClick, testId = _ref.testId, interactionName = _ref.interactionName;
  return import_react10.default.createElement(Button, {
    ref,
    appearance: "primary",
    iconBefore: import_add.default,
    onClick,
    testId,
    interactionName
  }, children);
});

// node_modules/@atlaskit/navigation-system/dist/esm/ui/top-nav-items/help.js
init_extends();
var import_react11 = __toESM(require_react());
var import_question_circle = __toESM(require_question_circle());
var HELP_NOTIFICATION_BADGE_ID = "atlassian-navigation-help-notification-count";
var Help = (0, import_react11.forwardRef)(function Help2(_ref, ref) {
  var label = _ref.label, onClick = _ref.onClick, onMouseEnter = _ref.onMouseEnter, isSelected = _ref.isSelected, testId = _ref.testId, interactionName = _ref.interactionName, isListItem = _ref.isListItem, badge = _ref.badge;
  var sharedProps = {
    icon: import_question_circle.default,
    label,
    onClick,
    onMouseEnter,
    isSelected,
    testId,
    interactionName,
    ref
  };
  if (!badge) {
    return import_react11.default.createElement(EndItem, _extends({}, sharedProps, {
      isListItem
    }));
  }
  return import_react11.default.createElement(BadgeContainer, {
    id: HELP_NOTIFICATION_BADGE_ID,
    badge,
    isListItem
  }, import_react11.default.createElement(EndItem, _extends({}, sharedProps, {
    // We explicitly set the EndItem to not be a list item,
    // because the BadgeContainer already has a list item role (if `isListItem` is true)
    isListItem: false
  })));
});

// node_modules/@atlaskit/navigation-system/dist/esm/ui/top-nav-items/profile.js
init_extends();
init_objectWithoutProperties();
var import_react12 = __toESM(require_react());
var _excluded = ["src"];
var Profile = (0, import_react12.forwardRef)(function(_ref, ref) {
  var src = _ref.src, props = _objectWithoutProperties(_ref, _excluded);
  var ProfileAvatar = (0, import_react12.useCallback)(function() {
    return import_react12.default.createElement(avatar_default, {
      appearance: "circle",
      src,
      size: "small"
    });
  }, [src]);
  return import_react12.default.createElement(EndItem, _extends({}, props, {
    ref,
    icon: ProfileAvatar
  }));
});

// node_modules/@atlaskit/navigation-system/dist/esm/ui/top-nav-items/settings.js
init_extends();
var import_react13 = __toESM(require_react());
var import_settings = __toESM(require_settings());
var Settings = (0, import_react13.forwardRef)(function(props, ref) {
  return import_react13.default.createElement(EndItem, _extends({}, props, {
    ref,
    icon: import_settings.default
  }));
});

// node_modules/@atlaskit/navigation-system/dist/esm/ui/top-nav-items/log-in.js
var import_react14 = __toESM(require_react());
var import_log_in = __toESM(require_log_in());
var LogIn = (0, import_react14.forwardRef)(function(_ref, ref) {
  var onClick = _ref.onClick, onMouseEnter = _ref.onMouseEnter, testId = _ref.testId, interactionName = _ref.interactionName, href = _ref.href, label = _ref.label;
  return (
    /**
     * This component doesn't use `EndItem` internally because it renders a
     * `LinkIconButton` instead of an `IconButton`.
     *
     * We could make another abstraction, but this is the only top navigation item
     * that renders a link.
     */
    import_react14.default.createElement(ListItem, null, import_react14.default.createElement(LinkIconButton, {
      ref,
      label,
      href,
      onClick,
      onMouseEnter,
      testId,
      interactionName,
      icon: import_log_in.default,
      appearance: "subtle",
      isTooltipDisabled: false
    }))
  );
});

export {
  AppSwitcher,
  CustomLogo,
  AppLogo,
  Search,
  ChatButton,
  EndItem,
  Notifications,
  CreateButton,
  Help,
  Profile,
  Settings,
  LogIn
};
//# sourceMappingURL=chunk-SDLHJUEK.js.map
