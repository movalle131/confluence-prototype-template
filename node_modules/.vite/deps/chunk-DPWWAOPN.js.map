{
  "version": 3,
  "sources": ["../../@atlaskit/navigation-system/dist/esm/ui/menu-item/expandable-menu-item/expandable-menu-item-context.js", "../../@atlaskit/navigation-system/dist/esm/ui/menu-item/expandable-menu-item/expandable-menu-item-level-context.js", "../../@atlaskit/navigation-system/dist/esm/ui/menu-item/menu-item-signals.js", "../../@atlaskit/navigation-system/dist/esm/ui/menu-item/constants.js", "../../@atlaskit/navigation-system/dist/esm/ui/menu-item/flyout-menu-item/flyout-menu-item-context.js", "../../@atlaskit/navigation-system/dist/esm/ui/menu-item/menu-item.js"],
  "sourcesContent": ["import { createContext, useContext } from 'react';\nimport invariant from 'tiny-invariant';\nimport { ExpandableMenuItemLevelContext } from './expandable-menu-item-level-context';\n/**\n * Whether all ancestor menu items of the current menu item are expanded. Used to know if the current menu item is\n * shown within the menu item tree.\n */\nexport var AreAllAncestorsExpandedContext = /*#__PURE__*/createContext(null);\n\n/**\n * A context for storing the isExpanded value of the ExpandableMenuItem.\n */\nexport var IsExpandedContext = /*#__PURE__*/createContext(null);\n\n/**\n * A context for storing a function that sets isExpanded value of the ExpandableMenuItem.\n */\nexport var SetIsExpandedContext = /*#__PURE__*/createContext(null);\n\n/**\n * A context for storing a function that triggers when isExpanded value of the ExpandableMenuItem is changed.\n */\nexport var OnExpansionToggleContext = /*#__PURE__*/createContext(null);\n\n/**\n * A context for storing the level value of the ExpandableMenuItem.\n */\nexport var LevelContext = ExpandableMenuItemLevelContext;\nexport var useIsExpanded = function useIsExpanded() {\n  var context = useContext(IsExpandedContext);\n  invariant(context !== null, 'useIsExpanded must be used within an ExpandableMenuItem');\n  return context;\n};\nexport var useSetIsExpanded = function useSetIsExpanded() {\n  var context = useContext(SetIsExpandedContext);\n  invariant(context !== null, 'useSetIsExpanded must be used within an ExpandableMenuItem');\n  return context;\n};\nexport var useOnExpansionToggle = function useOnExpansionToggle() {\n  return useContext(OnExpansionToggleContext);\n};\nexport var useLevel = function useLevel() {\n  return useContext(LevelContext);\n};\n\n/**\n * Whether all ancestor menu items of the current menu item are expanded. Used to know if the current menu item is\n * shown within the menu item tree.\n *\n * It works by combining (using &&) all the expansion states of the current menu item's ancestors.\n *\n * Using `true` as the fallback for cases when the menu item does not have ancestors.\n */\nexport var useAreAllAncestorsExpanded = function useAreAllAncestorsExpanded() {\n  var _useContext;\n  return (_useContext = useContext(AreAllAncestorsExpandedContext)) !== null && _useContext !== void 0 ? _useContext : true;\n};", "import { createContext } from 'react';\n\n// Note: this context value is in a seperate file as it is consumed\n// by our drag and drop drag preview\n\n/**\n * A context for storing the level value of the ExpandableMenuItem.\n */\nexport var ExpandableMenuItemLevelContext = /*#__PURE__*/createContext(0);", "/**\n * A symbol to collapse the `elemBefore` slot.\n * This should be placed in the `elemBefore` prop of supported menu items.\n */\nexport var COLLAPSE_ELEM_BEFORE = Symbol('collapse-elem-before');", "/**\n * _Internally_ shared value for the menu item indentation. Used in:\n * - Expandable menu item content, to add padding for each expandable level\n * - The base menu item, to set the negative inset to extend the clickable area of nested menu items\n * to the root level menu items.\n *\n * Internal to the package only. Should not be exported from the package.\n *\n * Note: We're unable to use a token() call here, as Compiled complains about function calls in imported\n * values - it requires statically defined values only.\n *\n * @private\n * @internal\n */\nexport var expandableMenuItemIndentation = '12px';", "import { createContext, useContext } from 'react';\nimport noop from '@atlaskit/ds-lib/noop';\n\n/**\n * __Is open context__\n *\n * A context for storing the isOpen value of the FlyoutMenuItem.\n */\nexport var IsOpenContext = /*#__PURE__*/createContext(false);\n\n/**\n * __Set is open context__\n *\n * A context for storing a function that sets isOpen value of the FlyoutMenuItem.\n */\nexport var SetIsOpenContext = /*#__PURE__*/createContext(noop);\nexport var useFlyoutMenuOpen = function useFlyoutMenuOpen() {\n  return useContext(IsOpenContext);\n};\nexport var useSetFlyoutMenuOpen = function useSetFlyoutMenuOpen() {\n  return useContext(SetIsOpenContext);\n};", "/* menu-item.tsx generated by @compiled/babel-plugin v0.36.1 */\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"children\", \"className\"];\nimport \"./menu-item.compiled.css\";\nimport { ax, ix } from \"@compiled/react/runtime\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { forwardRef, lazy, Suspense, useCallback, useRef } from 'react';\nimport { cx } from '@compiled/react';\nimport { AvatarContext } from '@atlaskit/avatar';\nimport mergeRefs from '@atlaskit/ds-lib/merge-refs';\nimport { Anchor, Pressable, Text } from '@atlaskit/primitives/compiled';\nimport Tooltip, { TooltipPrimitive } from '@atlaskit/tooltip';\nimport { forwardRefWithGeneric } from '../../components/forward-ref-with-generic';\nimport { expandableMenuItemIndentation } from './constants';\nimport { useLevel } from './expandable-menu-item/expandable-menu-item-context';\nimport { useFlyoutMenuOpen, useSetFlyoutMenuOpen } from './flyout-menu-item/flyout-menu-item-context';\nimport { COLLAPSE_ELEM_BEFORE } from './menu-item-signals';\n// Using `lazy` so that only consumers who want drag and drop\n// need to include code for the drag handle.\nvar LazyDragHandle = /*#__PURE__*/lazy(function () {\n  return import( /* webpackChunkName: \"@atlaskit-internal_nav4-menu-item-drag-handle\" */\n  './drag-handle');\n});\nvar tooltipStyles = {\n  root: \"_2rkoglpi _11c8dcr7 _1e0c1txw _2lx21bp4 _1bah1h6o _1tkezwfg _p12f1pna _vchhusvi _1q51v77o _y4ti12x7 _85i5v77o _bozg12x7 _bfhkcdhy _syaz15cr _152tze3t _1e02ze3t _1i4q1hna _slp31hna\"\n};\nvar MenuItemTooltip = /*#__PURE__*/forwardRef(function MenuItemTooltip(_ref, ref) {\n  var children = _ref.children,\n    className = _ref.className,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(TooltipPrimitive, _extends({}, rest, {\n    // Manually passing on `className` so it gets merged correctly in the build output.\n    // The passed classname is mostly used for integration testing (`.Tooltip`)\n    // eslint-disable-next-line @atlaskit/design-system/no-unsafe-style-overrides, @atlaskit/ui-styling-standard/no-classname-prop\n    className: ax([tooltipStyles.root, className])\n    // \"css\" does not \"exist\" - it gets transformed into \"className\" by compiled\n    ,\n\n    ref: ref\n  }), children);\n});\nfunction isTextClamped(element) {\n  // Checking for vertical height rather than horizontal height.\n  // When text is \"clamped\", it's technically being clamped vertically! 🤯\n  return element.scrollHeight > element.clientHeight;\n}\nvar defaultAvatarValues = {\n  size: 'small'\n};\nvar elemAfterDisplayVar = '--elem-after-display';\nvar actionsOnHoverDisplayVar = '--actions-on-hover-display';\nvar notchColorVar = '--notch-color';\n\n// Note: this is also used in `drag-handle.tsx`\nvar dragHandleDisplayVar = '--drag-handle-display';\nvar dragCursorAnimation = null;\n\n/**\n * ## 🤹 `position:relative`\n *\n * We need `position:relative` on an element that takes\n * up the full size of the interactive element so we\n * can correctly use `position:absolute` to place:\n * 1. the notch for links\n * 2. drop indicators for drag and drop\n * 3. a child of button / anchor to stretch it out to\n *    increase it's pressable area.\n *\n * ⛔️ We cannot add `position:relative` _only_ on the\n * button / anchor as that will cause sibling elements\n * to be rendered under the button / anchor when setting\n * a background color on the button / anchor.\n *\n * 📖 Note: `position:relative` elements are painted after\n * elements with `position:static` (the default)\n * https://drafts.csswg.org/css-position-4/#painting-order\n *\n * ⛔️ We cannot add `position:relative` to the container\n * element, as then the `:focus` ring styles on the\n * button / anchor can be cut off by the next sibling if it has\n * has a background color set (eg when selected)\n *\n * ✅ Add `position:relative` to all first level descendants\n * of the container element so that we don't impact DOM ordered\n * paint ordering within the item and the button / anchor focus\n * ring can still bleed over siblings\n *\n * 📖 We could use `> * { position: relative; }` on the container,\n * but that would violate our styling standard.\n */\nvar topLevelSiblingStyles = {\n  root: \"_kqswh2mm\"\n};\n\n/**\n * All slots on the menu item (eg `elemBefore`) are rendered as siblings\n * of our main button / anchor element and they are visually placed on\n * top of the main button / anchor.\n *\n * 📖 This is done so that we don't nest interactive elements in our markup.\n *\n * ✅ This is great when element in the slot is an interactive element\n * as we don't want the main menu item button / anchor to be triggered\n * when interacting with the element in the slot.\n *\n * ⛔️ When the element in the slot is static content (eg an `<Icon>`) it will\n * prevent the main button / anchor (that is visually behind the element in\n * the slot) from being clicked. The element in the slot is a sibling of our\n * main button / anchor (not a child of it) so clicking on the element in the\n * slot will not bubble up to the button / anchor.\n *\n * 🚀 We set `pointer-events:none` on a slot if it does not contain and interactive\n * element so that static content in a slot does not prevent clicking on the main\n * button / anchor.\n */\nvar onTopOfButtonOrAnchorStyles = {\n  root: \"_18ukglyw\"\n};\n\n/**\n * This is being _internally_ exported so it can be used in other menu item wrapper components, like\n * ExpandableMenuItemTrigger.\n *\n * This selector is used to apply hover styling on the menu item if it contains an open nested popup.\n * It's looking for a popup trigger with `aria-hasexpanded` and `aria-haspopup` attributes. The\n * reason for targeting the _trigger_ instead of the popup itself, is the popup might be rendered\n * outside the menu item, e.g. if rendered in a portal.\n *\n * An alternative solution might involve wrapping it with a popup context and listening to the popup\n * events through it (and applying the hover style when the popup is open). Exploring this has been\n * captured in [BLU-3354](https://jplat.atlassian.net/browse/BLU-3354).\n */\nexport var nestedOpenPopupCSSSelector = '&:has([aria-expanded=\"true\"][aria-haspopup=\"true\"])';\nvar containerStyles = {\n  root: \"_2rkoglpi _vchhusvi _1e0c11p5 _yv0e7dup _2z05hkll _1lmcu4vt _1ul9t9kd _4t3iviql _4cvr1h6o _uiztglyw _syaz1gjq _ek6gglyw _1yyu1j28 _91ju1txw _1swv108i _1ojv1txw _irr3108i _1brr1txw _109x1txw\",\n  removeElemAfter: \"_91juglyw\",\n  showHoverActions: \"_ek6g1txw\",\n  removeElemAfterOnHoverOrOpenNestedPopup: \"_1djyglyw _1mfcglyw _1sjuglyw\",\n  selected: \"_bfhkfg4m _syazaqb7 _1yyu1fvw _1swvi1yw _30l3aqb7 _irr3i1yw\",\n  disabled: \"_syaz1lh4 _irr3n7od\",\n  hasDescription: \"_4t3i1wto\",\n  dragging: \"_tzy41ou4\"\n};\nvar buttonOrAnchorStyles = {\n  root: \"_2rkoglpi _yyhyjvu9 _1ii7kb7n _1e0c11p5 _yv0enbh3 _2z05nbh3 _y4ti1b66 _bozg1b66 _1q511b66 _85i51b66 _bfhk1j28 _syaz1gjq _4cvr1h6o _y3gnv2br _14iu1ji5\",\n  selected: \"_syazaqb7 _14iu19ru\",\n  hasDragIndicator: \"_1ifmglyw _1cykglyw _x0kw1txw _7psyru3m _11om6b4r _1uy01amc _bir2q7pw\"\n};\nvar extendButtonOrAnchorStyles = {\n  root: \"_1r04ze3t _kqswstnw\"\n};\nvar notchStyles = {\n  root: \"_kqswstnw _152t1ssb _1e02ze3t _1bsbyh40 _4t3i1crf _t9ec1i34 _bfhk1o0g\"\n};\nvar actionStyles = {\n  root: \"_zulp1b66 _nd5lbc26 _1reo15vq _18m915vq _1e0c1txw _4cvr1h6o _y4ti1b66 _1guo18uv _12s918uv\"\n};\nvar actionsOnHoverStyles = {\n  root: \"_nd5l16dh _zulp1b66 _1reo15vq _18m915vq _1e0c1c3z _4cvr1h6o _y4ti1b66 _1guo18uv _12s918uv\"\n};\nvar textStyles = {\n  root: \"_zulpv77o _1reo15vq _18m915vq _y4ti1b66 _bozg1b66 _1e0c1txw _2lx21bp4 _1ul91c9m _1guo18uv _12s918uv\",\n  noElemBeforeIndent: \"_bozg12x7\"\n};\nvar elemBeforeStyles = {\n  root: \"_nd5l17zh _1reo15vq _18m915vq _1e0c1txw _1o9zidpf _1bsb1tcg _4t3i1tcg _4cvr1h6o _1bah1h6o _bozg1b66 _vchh1ntv _1guo18uv _12s918uv\"\n};\nvar elemAfterStyles = {\n  root: \"_nd5l16dh _1reo15vq _18m915vq _1e0c13yo _1o9zidpf _4t3i1tcg _4cvr1h6o _y4ti1b66 _1guo18uv _12s918uv\"\n};\n\n/**\n * We are using a wrapping element for our interactive content\n * even though only the `Text` element is the only thing not using `position:absolute`\n *\n * Rationale:\n * - Super clear that everything inside the interactive content should be in a specific slot in the grid\n * - To work around a browser bug in Safari where it does not work well with `position:absolute`\n *   on a subgrid child.\n *   Safari bug: https://bugs.webkit.org/show_bug.cgi?id=292516\n */\nvar interactiveContentStyles = {\n  root: \"_nd5l19l3 _1e0c1txw _2lx21bp4 _ae4v1h6o\"\n};\nfunction getTextColor(_ref2) {\n  var isDisabled = _ref2.isDisabled,\n    isSelected = _ref2.isSelected;\n  if (isDisabled) {\n    return 'color.text.disabled';\n  }\n  if (isSelected) {\n    return 'color.text.selected';\n  }\n  return 'color.text.subtle';\n}\n\n/**\n * Includes all props that are used by any menu item, as MenuItembase is the base component for all menu item components.\n *\n * We also include additional `aria` props to support the menu item being a trigger for the FlyoutMenuItem popup and for the\n * expanded content for ExpandableMenuItem.\n */\n\n/**\n * This is the internal version of the component, to be passed into `forwardRef`.\n *\n * It contains a type argument `<T>`, to specify the type of the interactive element (`button` or `a`).\n * This can be inferred from the type of the `onClick` prop.\n */\nvar MenuItemBaseNoRef = function MenuItemBaseNoRef(_ref3, forwardedRef) {\n  var id = _ref3.id,\n    testId = _ref3.testId,\n    actions = _ref3.actions,\n    actionsOnHover = _ref3.actionsOnHover,\n    children = _ref3.children,\n    description = _ref3.description,\n    elemAfter = _ref3.elemAfter,\n    elemBefore = _ref3.elemBefore,\n    href = _ref3.href,\n    target = _ref3.target,\n    isDisabled = _ref3.isDisabled,\n    isSelected = _ref3.isSelected,\n    onClick = _ref3.onClick,\n    ariaControls = _ref3.ariaControls,\n    ariaExpanded = _ref3.ariaExpanded,\n    ariaHasPopup = _ref3.ariaHasPopup,\n    interactionName = _ref3.interactionName,\n    isContentTooltipDisabled = _ref3.isContentTooltipDisabled,\n    visualContentRef = _ref3.visualContentRef,\n    isDragging = _ref3.isDragging,\n    hasDragIndicator = _ref3.hasDragIndicator,\n    dropIndicator = _ref3.dropIndicator;\n  var level = useLevel();\n  var setFlyoutMenuOpen = useSetFlyoutMenuOpen();\n  var isFlyoutMenuOpen = useFlyoutMenuOpen();\n  var isLink = typeof href !== 'undefined';\n  var labelRef = useRef(null);\n  var descriptionRef = useRef(null);\n  var tooltipOnClick = useRef(null);\n  var handleClick = useCallback(function (event, analyticsEvent) {\n    var _tooltipOnClick$curre;\n    onClick === null || onClick === void 0 || onClick(event, analyticsEvent);\n    // Toggle flyout menu open state when inside a flyout context provider\n    setFlyoutMenuOpen(!isFlyoutMenuOpen);\n    (_tooltipOnClick$curre = tooltipOnClick.current) === null || _tooltipOnClick$curre === void 0 || _tooltipOnClick$curre.call(tooltipOnClick, event);\n  }, [onClick, setFlyoutMenuOpen, isFlyoutMenuOpen]);\n\n  /**\n   * Show the tooltip if _either_ label or description is truncated\n   */\n  var canTooltipAppear = useCallback(function () {\n    if (isContentTooltipDisabled) {\n      return false;\n    }\n\n    // Show tooltip if _either_ label or description are clamped\n\n    var label = labelRef.current;\n    var description = descriptionRef.current;\n    if (label && isTextClamped(label)) {\n      return true;\n    }\n    return Boolean(description && isTextClamped(description));\n  }, [isContentTooltipDisabled]);\n\n  // By default provide the spacing for `elemBefore` to have good\n  // vertical alignment of labels and to give clear indentation between levels\n  // in the side navigation (even when items don't use elemBefore).\n  var showElemBefore = elemBefore !== COLLAPSE_ELEM_BEFORE;\n  var interactiveElemContent = /*#__PURE__*/React.createElement(\"div\", {\n    className: ax([interactiveContentStyles.root])\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    // This extends the clickable area of nested menu items to the width\n    // of the root level menu items, while being visually indented.\n    // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values\n    style: {\n      insetInlineStart: \"calc(-1 * \".concat(level, \" * \").concat(expandableMenuItemIndentation, \")\")\n    },\n    \"aria-hidden\": \"true\",\n    className: ax([extendButtonOrAnchorStyles.root])\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: ax([textStyles.root, !showElemBefore && textStyles.noElemBeforeIndent])\n  }, /*#__PURE__*/React.createElement(Text, {\n    weight: \"medium\",\n    maxLines: 1,\n    color: getTextColor({\n      isDisabled: isDisabled,\n      isSelected: isSelected\n    }),\n    ref: labelRef\n  }, children), description && /*#__PURE__*/React.createElement(Text, {\n    color: isDisabled ? 'color.text.disabled' : 'color.text.subtle',\n    size: \"small\",\n    maxLines: 1,\n    ref: descriptionRef\n  }, description)), hasDragIndicator ? /*#__PURE__*/React.createElement(Suspense, {\n    fallback: null\n  }, /*#__PURE__*/React.createElement(LazyDragHandle, null)) : null, dropIndicator);\n\n  /**\n   *  If the [expandable] menu item is expanded, show hover actions even when *not* hovered.\n   *\n   * Note: we also remove the `elemAfter` when showing `actionsOnHover`\n   */\n  var showHoverActionsWhenNotHovered = Boolean(ariaExpanded && actionsOnHover);\n  return /*#__PURE__*/React.createElement(AvatarContext.Provider, {\n    value: defaultAvatarValues\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    ref: visualContentRef,\n    \"data-testid\": testId ? \"\".concat(testId, \"-container\") : undefined,\n    \"data-selected\": isSelected,\n    className: ax([containerStyles.root, isSelected && containerStyles.selected, isDragging && containerStyles.dragging, description && containerStyles.hasDescription, showHoverActionsWhenNotHovered && containerStyles.showHoverActions, showHoverActionsWhenNotHovered && elemAfter && containerStyles.removeElemAfter, actionsOnHover && elemAfter && containerStyles.removeElemAfterOnHoverOrOpenNestedPopup, isDisabled && containerStyles.disabled])\n  }, /*#__PURE__*/React.createElement(Tooltip, {\n    content: function content() {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", null, children), description ? /*#__PURE__*/React.createElement(\"div\", null, description) : null);\n    },\n    position: \"right\"\n    // NOTE: Types in React 18 have changed and `forwardRef(() => <TooltipPrimitive>)` no longer appears to match 100%\n    ,\n    component: MenuItemTooltip,\n    ignoreTooltipPointerEvents: true,\n    hideTooltipOnMouseDown: true\n    // We don't need a duplicate hidden element containing tooltip content\n    // as the content of the tooltip matches what is rendered for the menu item.\n    ,\n    isScreenReaderAnnouncementDisabled: true,\n    canAppear: canTooltipAppear\n  }, function (tooltipProps) {\n    // Putting the tooltip onClick into a ref.\n    // This way we don't need to create a new `onClick` function on each\n    // render (as we would need to merge `tooltipProps.onClick` and our `handleClick`)\n    tooltipOnClick.current = tooltipProps.onClick;\n    var sharedProps = _objectSpread(_objectSpread({}, tooltipProps), {}, {\n      'aria-controls': ariaControls,\n      'aria-haspopup': ariaHasPopup,\n      ref: mergeRefs([forwardedRef, tooltipProps.ref]),\n      id: id,\n      testId: testId,\n      interactionName: interactionName\n    });\n    return isLink ? /*#__PURE__*/React.createElement(Anchor, _extends({}, sharedProps, {\n      onClick: handleClick,\n      xcss: cx(buttonOrAnchorStyles.root, topLevelSiblingStyles.root, isSelected && buttonOrAnchorStyles.selected, hasDragIndicator && buttonOrAnchorStyles.hasDragIndicator)\n      // Needed to override Anchor style due to a compiled/emotion conflict\n      // eslint-disable-next-line @atlaskit/ui-styling-standard/enforce-style-prop\n      ,\n      style: {\n        textDecoration: 'none'\n      },\n      \"aria-current\": isSelected ? 'page' : undefined,\n      href: href,\n      target: target\n      /**\n       * For anchors we don't want to have the standard drag and drop behaviour.\n       *\n       * Thinking on the topic:\n       *\n       * - Anchors look visually similar to buttons in the sidenav\n       * - Why should some menu items be natively draggable, while others are not?\n       * - A user cannot know which menu items are \"natively\" draggable (ie anchors)\n       * - If you wire up an anchor to be draggable using our standard affordances\n       *   it will have a different preview experience to native anchor dragging.\n       *\n       * To promote consistency, all elements need to use the same visual affordances.\n       *\n       * Anchor elements will automatically attach URL information\n       * to the native data store.\n       *\n       * When `hasDragIndicator` is `true` we are expecting consumers to register\n       * the element as draggable through the `draggable()` Pragmatic drag and drop function.\n       * The `draggable()` function will add `draggable=\"true\"` to the element.\n       */,\n      draggable: hasDragIndicator ? undefined : false\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      \"aria-hidden\": \"true\",\n      className: ax([notchStyles.root])\n    }), interactiveElemContent) : /*#__PURE__*/React.createElement(Pressable, _extends({}, sharedProps, {\n      onClick: handleClick,\n      xcss: cx(buttonOrAnchorStyles.root, topLevelSiblingStyles.root, isSelected && buttonOrAnchorStyles.selected, hasDragIndicator && buttonOrAnchorStyles.hasDragIndicator),\n      \"aria-expanded\": ariaExpanded,\n      isDisabled: isDisabled\n    }), interactiveElemContent);\n  }), showElemBefore && /*#__PURE__*/React.createElement(\"div\", {\n    className: ax([elemBeforeStyles.root, topLevelSiblingStyles.root, onTopOfButtonOrAnchorStyles.root])\n  }, elemBefore), actionsOnHover && /*#__PURE__*/React.createElement(\"div\", {\n    className: ax([actionsOnHoverStyles.root])\n  }, actionsOnHover), elemAfter && /*#__PURE__*/React.createElement(\"div\", {\n    className: ax([elemAfterStyles.root, topLevelSiblingStyles.root, onTopOfButtonOrAnchorStyles.root])\n  }, elemAfter), actions && /*#__PURE__*/React.createElement(\"div\", {\n    className: ax([actionStyles.root, topLevelSiblingStyles.root, onTopOfButtonOrAnchorStyles.root])\n  }, actions)));\n};\n\n/**\n * __MenuItemBase__\n *\n * The base menu item component used to compose ButtonMenuItem and LinkMenuItem.\n *\n * It contains a type argument `<T>`, to specify the type of the interactive element (`button` or `a`).\n * This can be inferred from the type of the `onClick` prop.\n */\nexport var MenuItemBase = forwardRefWithGeneric(MenuItemBaseNoRef);"],
  "mappings": "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",
  "names": ["import_react", "useIsExpanded", "useSetIsExpanded", "useOnExpansionToggle", "useLevel", "useAreAllAncestorsExpanded", "import_react", "useFlyoutMenuOpen", "useSetFlyoutMenuOpen", "import_react", "r", "MenuItemTooltip", "React", "MenuItemBaseNoRef", "description", "React"]
}
