import {
  forwardRefWithGeneric
} from "./chunk-OHIWJLUM.js";
import {
  button_default,
  button_default2,
  link_default,
  link_default2
} from "./chunk-D4H6CB3O.js";
import {
  tooltip_default
} from "./chunk-PA42JLCQ.js";
import {
  anchor_default,
  cx,
  pressable_default
} from "./chunk-SKNBEIPO.js";
import {
  visually_hidden_default
} from "./chunk-73JC3HDI.js";
import {
  mergeRefs
} from "./chunk-HDYTRULV.js";
import {
  _extends,
  init_extends
} from "./chunk-TRLI7EVB.js";
import {
  ax,
  init_runtime
} from "./chunk-XC7QRLB3.js";
import {
  _objectWithoutProperties,
  init_objectWithoutProperties
} from "./chunk-WFA677R7.js";
import {
  require_react
} from "./chunk-QJTFJ6OV.js";
import {
  __toESM
} from "./chunk-V4OQ3NZ2.js";

// node_modules/@atlaskit/navigation-system/dist/esm/ui/top-nav-items/themed/has-custom-theme-context.js
var import_react = __toESM(require_react());
var HasCustomThemeContext = (0, import_react.createContext)(false);
function useHasCustomTheme() {
  return (0, import_react.useContext)(HasCustomThemeContext);
}

// node_modules/@atlaskit/navigation-system/dist/esm/ui/top-nav-items/themed/migration.js
init_extends();
var import_react4 = __toESM(require_react());

// node_modules/@atlaskit/navigation-system/dist/esm/ui/top-nav-items/themed/button.js
init_extends();
init_objectWithoutProperties();
init_runtime();
var import_react2 = __toESM(require_react());
import "/Users/movalle/Documents/GitHub/test-enhanced-app/node_modules/@atlaskit/navigation-system/dist/esm/ui/top-nav-items/themed/button.compiled.css";
var _excluded = ["style", "xcss", "backgroundColor", "padding", "paddingBlock", "paddingBlockStart", "paddingBlockEnd", "paddingInline", "paddingInlineStart", "paddingInlineEnd"];
var _excluded2 = ["appearance", "shape", "isSelected", "isDisabled"];
var _excluded3 = ["appearance", "shape", "isSelected", "isDisabled"];
var _excluded4 = ["iconBefore", "children"];
var _excluded5 = ["iconBefore", "children"];
var _excluded6 = ["icon", "label", "tooltip"];
var _excluded7 = ["icon", "label", "tooltip"];
function getPrimitiveSpreadProps(_ref) {
  var style = _ref.style, xcss = _ref.xcss, backgroundColor = _ref.backgroundColor, padding = _ref.padding, paddingBlock = _ref.paddingBlock, paddingBlockStart = _ref.paddingBlockStart, paddingBlockEnd = _ref.paddingBlockEnd, paddingInline = _ref.paddingInline, paddingInlineStart = _ref.paddingInlineStart, paddingInlineEnd = _ref.paddingInlineEnd, props = _objectWithoutProperties(_ref, _excluded);
  return props;
}
var themedButtonBackground = "--ds-top-bar-button-background";
var themedButtonBackgroundHovered = "--ds-top-bar-button-background-hovered";
var themedButtonBackgroundPressed = "--ds-top-bar-button-background-pressed";
var themedButtonBorder = "--ds-top-bar-button-border";
var themedButtonPrimaryText = "--ds-top-bar-button-primary-text";
var themedButtonPrimaryBackground = "--ds-top-bar-button-primary-background";
var themedButtonPrimaryBackgroundHovered = "--ds-top-bar-button-primary-background-hovered";
var themedButtonPrimaryBackgroundPressed = "--ds-top-bar-button-primary-background-pressed";
var themedButtonSelectedText = "--ds-top-bar-button-selected-text";
var themedButtonSelectedBackground = "--ds-top-bar-button-selected-background";
var themedButtonSelectedBackgroundHovered = "--ds-top-bar-button-selected-background-hovered";
var themedButtonSelectedBackgroundPressed = "--ds-top-bar-button-selected-background-pressed";
var themedButtonSelectedBorder = "--ds-top-bar-button-selected-border";
var themedButtonDisabledText = "--ds-top-bar-button-disabled-text";
var themedButtonDisabledBackground = "--ds-top-bar-button-disabled-background";
var styles = {
  root: "_zulp12x7 _11c82smr _2rkosqtm _v5649dqc _4bfu1r31 _1hmsglyw _ajmmnqa1 _1rjcze3t _1e0c1txw _4cvr1h6o _1bah1h6o _4t3i5r7u _kqswh2mm _1nrm1r31 _1a3b1r31 _9oik1r31 _c2waglyw _4fprglyw _1bnxglyw _1iohnqa1 _5goinqa1 _jf4cnqa1",
  border: "_14mj1kw7 _9v7aze3t _1tv3nqa1 _39yqe4h9 _aetrb3bt _18postnw",
  selected: "_11q71qds _syazw5ct _8l3m15jn _f8pjw5ct _1053w5ct _19lcjrv1 _30l3w5ct _j6xtnh62 _9h8hw5ct",
  disabled: "_11q71c9b _syaz1i3i _8l3m1j28 _f8pj1i3i _10531i3i _19lc1c9b _30l31i3i _j6xt1c9b _9h8h1i3i"
};
var shapeStyles = {
  default: "_18zrutpp",
  square: "_18zrze3t _1bsb5r7u _vwz4idpf"
};
var appearanceStyles = {
  default: "_11q7pkxg _syaz1r31 _8l3maykr _f8pj1r31 _10531r31 _19lc1rps _30l31r31 _j6xtqtgh _9h8h1r31",
  subtle: "_11q7pkxg _syaz1r31 _f8pj1r31 _10531r31 _19lc1rps _30l31r31 _j6xtqtgh _9h8h1r31",
  primary: "_11q7esko _syaz15o7 _f8pj15o7 _105315o7 _19lcp6hf _30l315o7 _j6xt5sko _9h8h15o7"
};
var ThemedPressable = (0, import_react2.forwardRef)(function ThemedPressable2(_ref2, ref) {
  var _ref2$appearance = _ref2.appearance, appearance = _ref2$appearance === void 0 ? "default" : _ref2$appearance, _ref2$shape = _ref2.shape, shape = _ref2$shape === void 0 ? "default" : _ref2$shape, isSelected = _ref2.isSelected, isDisabled = _ref2.isDisabled, props = _objectWithoutProperties(_ref2, _excluded2);
  var hasBorder = appearance === "default" || isSelected;
  return import_react2.default.createElement(pressable_default, _extends({}, getPrimitiveSpreadProps(props), {
    ref,
    type: "button",
    xcss: cx(styles.root, shapeStyles[shape], hasBorder && styles.border, appearanceStyles[appearance], isSelected && styles.selected, isDisabled && styles.disabled),
    isDisabled
  }));
});
var ThemedAnchor = forwardRefWithGeneric(function ThemedAnchor2(_ref3, ref) {
  var _ref3$appearance = _ref3.appearance, appearance = _ref3$appearance === void 0 ? "default" : _ref3$appearance, _ref3$shape = _ref3.shape, shape = _ref3$shape === void 0 ? "default" : _ref3$shape, isSelected = _ref3.isSelected, isDisabled = _ref3.isDisabled, props = _objectWithoutProperties(_ref3, _excluded3);
  var hasBorder = appearance === "default" || isSelected;
  return import_react2.default.createElement(anchor_default, _extends({}, getPrimitiveSpreadProps(props), {
    ref,
    xcss: cx(styles.root, shapeStyles[shape], hasBorder && styles.border, appearanceStyles[appearance], isSelected && styles.selected, isDisabled && styles.disabled)
  }));
});
var textButtonStyles = {
  iconBefore: "_vwz4idpf",
  text: "_k48p1wq8"
};
var ThemedButton = (0, import_react2.forwardRef)(function ThemedButton2(_ref4, ref) {
  var IconBefore = _ref4.iconBefore, children = _ref4.children, props = _objectWithoutProperties(_ref4, _excluded4);
  return import_react2.default.createElement(ThemedPressable, _extends({}, props, {
    ref
  }), IconBefore && import_react2.default.createElement("span", {
    className: ax([textButtonStyles.iconBefore])
  }, import_react2.default.createElement(IconBefore, {
    label: "",
    color: "currentColor"
  })), import_react2.default.createElement("span", {
    className: ax([textButtonStyles.text])
  }, children));
});
var ThemedLinkButton = forwardRefWithGeneric(function ThemedLinkButton2(_ref5, ref) {
  var IconBefore = _ref5.iconBefore, children = _ref5.children, props = _objectWithoutProperties(_ref5, _excluded5);
  return import_react2.default.createElement(ThemedAnchor, _extends({}, props, {
    ref
  }), IconBefore && import_react2.default.createElement("span", {
    className: ax([textButtonStyles.iconBefore])
  }, import_react2.default.createElement(IconBefore, {
    label: "",
    color: "currentColor"
  })), import_react2.default.createElement("span", {
    className: ax([textButtonStyles.text])
  }, children));
});
var ThemedIconButton = (0, import_react2.forwardRef)(function ThemedIconButton2(_ref6, ref) {
  var _tooltip$content;
  var Icon = _ref6.icon, label = _ref6.label, tooltip = _ref6.tooltip, props = _objectWithoutProperties(_ref6, _excluded6);
  return import_react2.default.createElement(tooltip_default, _extends({}, tooltip, {
    content: (_tooltip$content = tooltip === null || tooltip === void 0 ? void 0 : tooltip.content) !== null && _tooltip$content !== void 0 ? _tooltip$content : label
  }), function(triggerProps) {
    return (
      /**
       * The `aria-describedby` from `triggerProps` is intentionally not passed down,
       * because it would cause double announcements with the `VisuallyHidden` label.
       *
       * The `@atlaskit/button` IconButton uses the same approach.
       */
      import_react2.default.createElement(ThemedPressable, _extends({}, props, {
        shape: "square",
        ref: mergeRefs([ref, triggerProps.ref]),
        onClick: function onClick(event, analyticsEvent) {
          var _props$onClick, _triggerProps$onClick;
          (_props$onClick = props.onClick) === null || _props$onClick === void 0 || _props$onClick.call(props, event, analyticsEvent);
          triggerProps === null || triggerProps === void 0 || (_triggerProps$onClick = triggerProps.onClick) === null || _triggerProps$onClick === void 0 || _triggerProps$onClick.call(triggerProps, event);
        },
        onMouseOver: function onMouseOver(e) {
          var _triggerProps$onMouse, _props$onMouseOver;
          (_triggerProps$onMouse = triggerProps.onMouseOver) === null || _triggerProps$onMouse === void 0 || _triggerProps$onMouse.call(triggerProps, e);
          (_props$onMouseOver = props.onMouseOver) === null || _props$onMouseOver === void 0 || _props$onMouseOver.call(props, e);
        },
        onMouseOut: function onMouseOut(e) {
          var _triggerProps$onMouse2, _props$onMouseOut;
          (_triggerProps$onMouse2 = triggerProps.onMouseOut) === null || _triggerProps$onMouse2 === void 0 || _triggerProps$onMouse2.call(triggerProps, e);
          (_props$onMouseOut = props.onMouseOut) === null || _props$onMouseOut === void 0 || _props$onMouseOut.call(props, e);
        },
        onMouseMove: function onMouseMove(e) {
          var _triggerProps$onMouse3, _props$onMouseMove;
          (_triggerProps$onMouse3 = triggerProps.onMouseMove) === null || _triggerProps$onMouse3 === void 0 || _triggerProps$onMouse3.call(triggerProps, e);
          (_props$onMouseMove = props.onMouseMove) === null || _props$onMouseMove === void 0 || _props$onMouseMove.call(props, e);
        },
        onMouseDown: function onMouseDown(e) {
          var _triggerProps$onMouse4, _props$onMouseDown;
          (_triggerProps$onMouse4 = triggerProps.onMouseDown) === null || _triggerProps$onMouse4 === void 0 || _triggerProps$onMouse4.call(triggerProps, e);
          (_props$onMouseDown = props.onMouseDown) === null || _props$onMouseDown === void 0 || _props$onMouseDown.call(props, e);
        },
        onFocus: function onFocus(e) {
          var _triggerProps$onFocus, _props$onFocus;
          (_triggerProps$onFocus = triggerProps.onFocus) === null || _triggerProps$onFocus === void 0 || _triggerProps$onFocus.call(triggerProps, e);
          (_props$onFocus = props.onFocus) === null || _props$onFocus === void 0 || _props$onFocus.call(props, e);
        },
        onBlur: function onBlur(e) {
          var _triggerProps$onBlur, _props$onBlur;
          (_triggerProps$onBlur = triggerProps.onBlur) === null || _triggerProps$onBlur === void 0 || _triggerProps$onBlur.call(triggerProps, e);
          (_props$onBlur = props.onBlur) === null || _props$onBlur === void 0 || _props$onBlur.call(props, e);
        }
      }), import_react2.default.createElement(Icon, {
        label: "",
        color: "currentColor"
      }), import_react2.default.createElement(visually_hidden_default, null, label))
    );
  });
});
var ThemedLinkIconButton = forwardRefWithGeneric(function ThemedLinkIconButton2(_ref7, ref) {
  var _tooltip$content2;
  var Icon = _ref7.icon, label = _ref7.label, tooltip = _ref7.tooltip, props = _objectWithoutProperties(_ref7, _excluded7);
  return import_react2.default.createElement(tooltip_default, _extends({}, tooltip, {
    content: (_tooltip$content2 = tooltip === null || tooltip === void 0 ? void 0 : tooltip.content) !== null && _tooltip$content2 !== void 0 ? _tooltip$content2 : label
  }), function(triggerProps) {
    return (
      /**
       * The `aria-describedby` from `triggerProps` is intentionally not passed down,
       * because it would cause double announcements with the `VisuallyHidden` label.
       *
       * The `@atlaskit/button` IconButton uses the same approach.
       */
      import_react2.default.createElement(ThemedAnchor, _extends({}, props, {
        shape: "square",
        ref: mergeRefs([ref, triggerProps.ref]),
        onClick: function onClick(event, analyticsEvent) {
          var _props$onClick2, _triggerProps$onClick2;
          (_props$onClick2 = props.onClick) === null || _props$onClick2 === void 0 || _props$onClick2.call(props, event, analyticsEvent);
          triggerProps === null || triggerProps === void 0 || (_triggerProps$onClick2 = triggerProps.onClick) === null || _triggerProps$onClick2 === void 0 || _triggerProps$onClick2.call(triggerProps, event);
        },
        onMouseOver: function onMouseOver(e) {
          var _triggerProps$onMouse5, _props$onMouseOver2;
          (_triggerProps$onMouse5 = triggerProps.onMouseOver) === null || _triggerProps$onMouse5 === void 0 || _triggerProps$onMouse5.call(triggerProps, e);
          (_props$onMouseOver2 = props.onMouseOver) === null || _props$onMouseOver2 === void 0 || _props$onMouseOver2.call(props, e);
        },
        onMouseOut: function onMouseOut(e) {
          var _triggerProps$onMouse6, _props$onMouseOut2;
          (_triggerProps$onMouse6 = triggerProps.onMouseOut) === null || _triggerProps$onMouse6 === void 0 || _triggerProps$onMouse6.call(triggerProps, e);
          (_props$onMouseOut2 = props.onMouseOut) === null || _props$onMouseOut2 === void 0 || _props$onMouseOut2.call(props, e);
        },
        onMouseMove: function onMouseMove(e) {
          var _triggerProps$onMouse7, _props$onMouseMove2;
          (_triggerProps$onMouse7 = triggerProps.onMouseMove) === null || _triggerProps$onMouse7 === void 0 || _triggerProps$onMouse7.call(triggerProps, e);
          (_props$onMouseMove2 = props.onMouseMove) === null || _props$onMouseMove2 === void 0 || _props$onMouseMove2.call(props, e);
        },
        onMouseDown: function onMouseDown(e) {
          var _triggerProps$onMouse8, _props$onMouseDown2;
          (_triggerProps$onMouse8 = triggerProps.onMouseDown) === null || _triggerProps$onMouse8 === void 0 || _triggerProps$onMouse8.call(triggerProps, e);
          (_props$onMouseDown2 = props.onMouseDown) === null || _props$onMouseDown2 === void 0 || _props$onMouseDown2.call(props, e);
        },
        onFocus: function onFocus(e) {
          var _triggerProps$onFocus2, _props$onFocus2;
          (_triggerProps$onFocus2 = triggerProps.onFocus) === null || _triggerProps$onFocus2 === void 0 || _triggerProps$onFocus2.call(triggerProps, e);
          (_props$onFocus2 = props.onFocus) === null || _props$onFocus2 === void 0 || _props$onFocus2.call(props, e);
        },
        onBlur: function onBlur(e) {
          var _triggerProps$onBlur2, _props$onBlur2;
          (_triggerProps$onBlur2 = triggerProps.onBlur) === null || _triggerProps$onBlur2 === void 0 || _triggerProps$onBlur2.call(triggerProps, e);
          (_props$onBlur2 = props.onBlur) === null || _props$onBlur2 === void 0 || _props$onBlur2.call(props, e);
        }
      }), import_react2.default.createElement(Icon, {
        label: "",
        color: "currentColor"
      }), import_react2.default.createElement(visually_hidden_default, null, label))
    );
  });
});

// node_modules/@atlaskit/navigation-system/dist/esm/ui/top-nav-items/themed/migration.js
var IconButton = (0, import_react4.forwardRef)(function(props, ref) {
  var hasCustomTheme = useHasCustomTheme();
  var Component = hasCustomTheme ? ThemedIconButton : button_default2;
  return import_react4.default.createElement(Component, _extends({
    ref
  }, props));
});
var LinkIconButton = (0, import_react4.forwardRef)(function(props, ref) {
  var hasCustomTheme = useHasCustomTheme();
  var Component = hasCustomTheme ? ThemedLinkIconButton : link_default2;
  return import_react4.default.createElement(Component, _extends({
    ref
  }, props));
});
var Button = (0, import_react4.forwardRef)(function(props, ref) {
  var hasCustomTheme = useHasCustomTheme();
  var Component = hasCustomTheme ? ThemedButton : button_default;
  return import_react4.default.createElement(Component, _extends({
    ref
  }, props));
});
var LinkButton = (0, import_react4.forwardRef)(function(props, ref) {
  var hasCustomTheme = useHasCustomTheme();
  var Component = hasCustomTheme ? ThemedLinkButton : link_default;
  return import_react4.default.createElement(Component, _extends({
    ref
  }, props));
});

export {
  themedButtonBackground,
  themedButtonBackgroundHovered,
  themedButtonBackgroundPressed,
  themedButtonBorder,
  themedButtonPrimaryText,
  themedButtonPrimaryBackground,
  themedButtonPrimaryBackgroundHovered,
  themedButtonPrimaryBackgroundPressed,
  themedButtonSelectedText,
  themedButtonSelectedBackground,
  themedButtonSelectedBackgroundHovered,
  themedButtonSelectedBackgroundPressed,
  themedButtonSelectedBorder,
  themedButtonDisabledText,
  themedButtonDisabledBackground,
  HasCustomThemeContext,
  useHasCustomTheme,
  IconButton,
  LinkIconButton,
  Button
};
//# sourceMappingURL=chunk-54HUSBMH.js.map
