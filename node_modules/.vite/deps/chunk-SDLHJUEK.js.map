{
  "version": 3,
  "sources": ["../../@atlaskit/icon/core/ai-chat.js", "../../@atlaskit/icon/core/log-in.js", "../../@atlaskit/navigation-system/dist/esm/ui/top-nav-items/app-switcher.js", "../../@atlaskit/navigation-system/dist/esm/ui/top-nav-items/nav-logo/custom-logo.js", "../../@atlaskit/navigation-system/dist/esm/ui/top-nav-items/nav-logo/app-logo.js", "../../@atlaskit/navigation-system/dist/esm/ui/top-nav-items/search.js", "../../@atlaskit/navigation-system/dist/esm/ui/top-nav-items/chat-button.js", "../../@atlaskit/navigation-system/dist/esm/ui/top-nav-items/end-item.js", "../../@atlaskit/navigation-system/dist/esm/ui/top-nav-items/notifications.js", "../../@atlaskit/navigation-system/dist/esm/components/badge-container.js", "../../@atlaskit/navigation-system/dist/esm/ui/top-nav-items/create-button.js", "../../@atlaskit/navigation-system/dist/esm/ui/top-nav-items/help.js", "../../@atlaskit/navigation-system/dist/esm/ui/top-nav-items/profile.js", "../../@atlaskit/navigation-system/dist/esm/ui/top-nav-items/settings.js", "../../@atlaskit/navigation-system/dist/esm/ui/top-nav-items/log-in.js"],
  "sourcesContent": ["/**\n * THIS FILE WAS CREATED VIA CODEGEN DO NOT MODIFY {@see http://go/af-codegen}\n * @codegen <<SignedSource::21c7c38467d82a38f61fac3c4f24f045>>\n * @codegenCommand yarn build:icon-glyphs\n */\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _baseNew = _interopRequireDefault(require(\"@atlaskit/icon/base-new\"));\nfunction _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }\n/**\n * Icon: \"AiChat\".\n * Category: single-purpose\n * Location: @atlaskit/icon\n * Usage guidance: Reserved for white label Rovo experiences.\n * - [Examples](https://atlaskit.atlassian.com/packages/design-system/icon)\n * - [Code](https://atlaskit.atlassian.com/packages/design-system/icon/docs/custom-icons)\n */\nconst AiChatIcon = props => /*#__PURE__*/_react.default.createElement(_baseNew.default, Object.assign({\n  dangerouslySetGlyph: `<path fill=\"currentcolor\" d=\"M14.5 3.125C14.5 2.504 13.996 2 13.375 2H2.625C2.004 2 1.5 2.504 1.5 3.125v10.832L4.05 12.5h9.325c.621 0 1.125-.504 1.125-1.125zm1.5 8.25A2.625 2.625 0 0 1 13.375 14H4.449l-3.327 1.901A.75.75 0 0 1 0 15.25V3.125A2.625 2.625 0 0 1 2.625.5h10.75A2.625 2.625 0 0 1 16 3.125z\"/><path fill=\"currentcolor\" d=\"M5 6.25a1 1 0 1 1 0 2 1 1 0 0 1 0-2m3 0a1 1 0 1 1 0 2 1 1 0 0 1 0-2m3 0a1 1 0 1 1 0 2 1 1 0 0 1 0-2\"/>`\n  // eslint-disable-next-line @repo/internal/react/no-unsafe-spread-props\n}, props));\nAiChatIcon.displayName = 'AiChatIcon';\nvar _default = exports.default = AiChatIcon;", "/**\n * THIS FILE WAS CREATED VIA CODEGEN DO NOT MODIFY {@see http://go/af-codegen}\n * @codegen <<SignedSource::cd6da84e11aa1d5b6e9ca710faf282a3>>\n * @codegenCommand yarn build:icon-glyphs\n */\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _baseNew = _interopRequireDefault(require(\"@atlaskit/icon/base-new\"));\nfunction _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }\n/**\n * Icon: \"LogIn\".\n * Category: single-purpose\n * Location: @atlaskit/icon\n * Usage guidance: Single purpose - Reserved for log in.\n * - [Examples](https://atlaskit.atlassian.com/packages/design-system/icon)\n * - [Code](https://atlaskit.atlassian.com/packages/design-system/icon/docs/custom-icons)\n */\nconst LogInIcon = props => /*#__PURE__*/_react.default.createElement(_baseNew.default, Object.assign({\n  dangerouslySetGlyph: `<path fill=\"currentcolor\" fill-rule=\"evenodd\" d=\"M13 2.5H8V1h5a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2H8v-1.5h5a.5.5 0 0 0 .5-.5V3a.5.5 0 0 0-.5-.5M7.44 7.25 5.22 5.03l1.06-1.06 3.5 3.5a.75.75 0 0 1 0 1.06l-3.5 3.5-1.06-1.06 2.22-2.22H1v-1.5z\" clip-rule=\"evenodd\"/>`\n  // eslint-disable-next-line @repo/internal/react/no-unsafe-spread-props\n}, props));\nLogInIcon.displayName = 'LogInIcon';\nvar _default = exports.default = LogInIcon;", "import React, { forwardRef } from 'react';\nimport AppSwitcherIcon from '@atlaskit/icon/core/app-switcher';\nimport { IconButton } from './themed/migration';\nvar toggleButtonTooltipOptions = {\n  // We're disabling pointer events on the tooltip to prevent it from blocking mouse events, so that the side nav flyout stays open\n  // when moving the mouse from the top bar to the side nav.\n  ignoreTooltipPointerEvents: true\n};\n\n/**\n * __App switcher__\n *\n * The trigger button for the app switcher. Allows users to switch between Atlassian products.\n */\nexport var AppSwitcher = /*#__PURE__*/forwardRef(function (_ref, ref) {\n  var label = _ref.label,\n    onClick = _ref.onClick,\n    onMouseEnter = _ref.onMouseEnter,\n    interactionName = _ref.interactionName,\n    isSelected = _ref.isSelected,\n    ariaControls = _ref['aria-controls'],\n    ariaExpanded = _ref['aria-expanded'],\n    ariaHasPopup = _ref['aria-haspopup'];\n  return /*#__PURE__*/React.createElement(IconButton, {\n    ref: ref,\n    \"aria-controls\": ariaControls,\n    \"aria-expanded\": ariaExpanded,\n    \"aria-haspopup\": ariaHasPopup,\n    icon: AppSwitcherIcon,\n    label: label,\n    appearance: \"subtle\",\n    onClick: onClick,\n    onMouseEnter: onMouseEnter,\n    interactionName: interactionName,\n    isTooltipDisabled: false,\n    tooltip: toggleButtonTooltipOptions,\n    isSelected: isSelected\n  });\n});", "/* custom-logo.tsx generated by @compiled/babel-plugin v0.36.1 */\nimport \"./custom-logo.compiled.css\";\nimport { ax, ix } from \"@compiled/react/runtime\";\nimport React, { useEffect, useRef } from 'react';\nimport { cx } from '@compiled/react';\nimport { fg } from '@atlaskit/platform-feature-flags';\n// eslint-disable-next-line @atlaskit/design-system/no-emotion-primitives -- to be migrated to @atlaskit/primitives/compiled â€“ go/akcss\nimport { Anchor } from '@atlaskit/primitives';\nimport { useHasCustomTheme } from '../themed/has-custom-theme-context';\nimport { LogoRenderer } from './logo-renderer';\nvar anchorStyles = {\n  root: \"_2rkosqtm _1e0c1txw _4cvr1h6o _4t3izwfg\",\n  customLogoBorderRadius: \"_2rkosqtm\",\n  newMargin: \"_ahbq1b66\",\n  newInteractionStates: \"_irr3166n _1di61wwy\",\n  newInteractionStatesCustomTheming: \"_irr31rps _1di6yhlj\"\n};\nvar sharedIconOrLogoContainerStyles = {\n  root: \"_1reo15vq _18m915vq _bna71tcg _rtys1kw7 _1jpx1f51\",\n  appIconTilePaddingFlagged: \"_18zr1b66\"\n};\nvar iconContainerStyles = {\n  root: \"_18zr1b66 _1e0c1txw _p12f1tcg _vchh1ntv _10y4glyw\"\n};\nvar logoContainerStyles = {\n  root: \"_18zru2gc _1e0cglyw _p12fnklw _vchh1ntv _10y41txw\"\n};\n\n/**\n * __Custom logo__\n *\n * Custom logo for the top navigation.\n *\n * To provide a responsive experience, it requires both a logo and an icon component.\n * The logo component will be used for large viewports, and the icon component will be used for small viewports.\n */\nexport var CustomLogo = function CustomLogo(_ref) {\n  var href = _ref.href,\n    logo = _ref.logo,\n    icon = _ref.icon,\n    onClick = _ref.onClick,\n    label = _ref.label;\n  var ref = useRef(null);\n  useEffect(function () {\n    var _img$parentElement, _img$parentElement2;\n    if (process.env.NODE_ENV === 'production') {\n      return;\n    }\n    if (!ref.current) {\n      return;\n    }\n    var img = ref.current.querySelector('img');\n    if (!img) {\n      return;\n    }\n\n    /**\n     * We want custom logo components to render the image as the immediate child\n     */\n    var hasExpectedStructure = ((_img$parentElement = img.parentElement) === null || _img$parentElement === void 0 ? void 0 : _img$parentElement.parentElement) === ref.current;\n    /**\n     * We want custom logo components to render only one image\n     */\n    var isOnlyChild = ((_img$parentElement2 = img.parentElement) === null || _img$parentElement2 === void 0 ? void 0 : _img$parentElement2.childElementCount) === 1;\n    if (!hasExpectedStructure || !isOnlyChild) {\n      // eslint-disable-next-line no-console\n      console.error('Custom logos should render only a single image tag with no wrappers.');\n    }\n    if (img.getAttribute('width') !== null || img.getAttribute('height') !== null || img.style.width !== '' || img.style.height !== '') {\n      // eslint-disable-next-line no-console\n      console.error('Do not set explicit dimensions on custom logo images. The container will resize the image to fit.');\n    }\n  }, []);\n  var hasCustomTheme = useHasCustomTheme();\n  return /*#__PURE__*/React.createElement(Anchor, {\n    ref: ref,\n    \"aria-label\": label,\n    href: href\n    // @ts-expect-error - non-standard values for `borderRadius` and the custom theming interaction states\n    // eslint-disable-next-line @compiled/no-suppress-xcss\n    ,\n    xcss: cx(anchorStyles.root, anchorStyles.customLogoBorderRadius, anchorStyles.newMargin, hasCustomTheme ? anchorStyles.newInteractionStatesCustomTheming : anchorStyles.newInteractionStates),\n    onClick: onClick\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: ax([sharedIconOrLogoContainerStyles.root, iconContainerStyles.root, fg('platform-team25-app-icon-tiles') && sharedIconOrLogoContainerStyles.appIconTilePaddingFlagged])\n  }, /*#__PURE__*/React.createElement(LogoRenderer, {\n    logoOrIcon: icon\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: ax([sharedIconOrLogoContainerStyles.root, logoContainerStyles.root, fg('platform-team25-app-icon-tiles') && sharedIconOrLogoContainerStyles.appIconTilePaddingFlagged])\n  }, /*#__PURE__*/React.createElement(LogoRenderer, {\n    logoOrIcon: logo\n  })));\n};", "/* app-logo.tsx generated by @compiled/babel-plugin v0.36.1 */\nimport \"./app-logo.compiled.css\";\nimport { ax, ix } from \"@compiled/react/runtime\";\nimport React, { useCallback, useRef } from 'react';\nimport { cx } from '@compiled/react';\n// eslint-disable-next-line @atlaskit/design-system/no-emotion-primitives -- to be migrated to @atlaskit/primitives/compiled â€“ go/akcss\nimport { Anchor, Inline, Text } from '@atlaskit/primitives';\nimport Tooltip from '@atlaskit/tooltip';\nimport { useHasCustomTheme } from '../themed/has-custom-theme-context';\nimport { LogoRenderer } from './logo-renderer';\nvar anchorStyles = {\n  root: \"_2rko19bv _1e0c1txw _4cvr1h6o _4t3izwfg _1o9zidpf _ahbq1b66 _1toh1r31 _5jyqglyw _mrqmnqa1 _1w901kw7\",\n  interactionStates: \"_irr3166n _1di61wwy\",\n  interactionStatesCustomTheming: \"_irr31rps _1di6yhlj\"\n};\nvar logoWrapperStyles = {\n  root: \"_18zr1b66\"\n};\nvar iconContainerStyles = {\n  root: \"_1reo15vq _18m915vq _1e0c1txw _p12f1tcg\"\n};\nvar logoTextStyles = {\n  root: \"_1bsb1ris _p12fnklw _uiztglyw _y4tiv77o _1e0cglyw _10y418uv\"\n};\nfunction isTextClamped(element) {\n  // Checking for vertical height rather than horizontal height.\n  // When text is \"clamped\", it's technically being clamped vertically! ðŸ¤¯\n  return element.scrollHeight > element.clientHeight;\n}\n\n/**\n * __App logo__\n *\n * The app logo for the top navigation.\n *\n * To provide a responsive experience, label text will render next to an icon at larger viewports.\n */\nexport var AppLogo = function AppLogo(_ref) {\n  var name = _ref.name,\n    label = _ref.label,\n    href = _ref.href,\n    icon = _ref.icon,\n    onClick = _ref.onClick;\n  var ref = useRef(null);\n  var nameRef = useRef(null);\n  var hasCustomTheme = useHasCustomTheme();\n\n  /**\n   * Show the tooltip if the name is truncated\n   */\n  var canTooltipAppear = useCallback(function () {\n    var text = nameRef.current;\n    return Boolean(text && isTextClamped(text));\n  }, []);\n  return /*#__PURE__*/React.createElement(Anchor, {\n    ref: ref,\n    \"aria-label\": label,\n    href: href\n    // @ts-expect-error - non-standard values for `borderRadius` and the custom theming interaction states\n    // eslint-disable-next-line @compiled/no-suppress-xcss\n    ,\n    xcss: cx(anchorStyles.root, hasCustomTheme ? anchorStyles.interactionStatesCustomTheming : anchorStyles.interactionStates),\n    onClick: onClick\n  }, /*#__PURE__*/React.createElement(Inline, {\n    space: \"space.075\",\n    alignBlock: \"center\",\n    xcss: logoWrapperStyles.root\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: ax([iconContainerStyles.root])\n  }, /*#__PURE__*/React.createElement(LogoRenderer\n  // Top nav always uses the new logo design\n  , {\n    shouldUseNewLogoDesign: true,\n    logoOrIcon: icon\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    className: ax([logoTextStyles.root])\n  }, /*#__PURE__*/React.createElement(Tooltip, {\n    content: name,\n    position: \"bottom\",\n    ignoreTooltipPointerEvents: true,\n    hideTooltipOnMouseDown: true\n    // We don't need a duplicate hidden element containing tooltip content\n    // as the content of the tooltip matches what is rendered in the nav item.\n    ,\n    isScreenReaderAnnouncementDisabled: true,\n    canAppear: canTooltipAppear\n  }, function (tooltipProps) {\n    return /*#__PURE__*/React.createElement(\"span\", tooltipProps, /*#__PURE__*/React.createElement(Text, {\n      \"aria-hidden\": true,\n      color: \"inherit\",\n      weight: \"semibold\",\n      maxLines: 1,\n      ref: nameRef\n    }, name));\n  }))));\n};", "/* search.tsx generated by @compiled/babel-plugin v0.36.1 */\nimport \"./search.compiled.css\";\nimport { ax, ix } from \"@compiled/react/runtime\";\nimport React, { Fragment } from 'react';\nimport SearchIcon from '@atlaskit/icon/core/search';\nimport { Pressable, Show, Text } from '@atlaskit/primitives/compiled';\nimport { IconButton } from './themed/migration';\nvar styles = {\n  root: \"_2rkoiti9 _1rjcze3t _18zr12x7 _yv0e1mfv _4cvr1h6o _bfhk1j9a _vchhusvi _80om1kdv _1e0cglyw _4t3izwfg _p12f1kvu _1bsb1osq _irr31d5g _1di6r01l _114b11p5\",\n  buttonText: \"_yyhyjvu9 _1ii7kb7n\",\n  iconBefore: \"_yyhykb7n _1ii7kb7n _1e0c1txw\",\n  elemAfter: \"_yyhy11wp _1ii7kb7n _1e0c1txw\"\n};\n\n/**\n * __Search__\n *\n * The search element for the top navigation.\n */\nexport var Search = function Search(_ref) {\n  var label = _ref.label,\n    onClick = _ref.onClick,\n    _ref$iconBefore = _ref.iconBefore,\n    IconBefore = _ref$iconBefore === void 0 ? SearchIcon : _ref$iconBefore,\n    elemAfter = _ref.elemAfter,\n    interactionName = _ref.interactionName,\n    ariaHaspopup = _ref['aria-haspopup'];\n  return /*#__PURE__*/React.createElement(Fragment, null, /*#__PURE__*/React.createElement(Pressable, {\n    style: {\n      // To win the specificity war against Emotion we move this into inline styles\n      // When Emotion has been stripped from the Design System move this to Compiled.\n      // eslint-disable-next-line @atlaskit/ui-styling-standard/enforce-style-prop\n      cursor: 'text',\n      border: \"var(--ds-border-width, 1px)\".concat(\" solid \", \"var(--ds-border-input, #8590A2)\")\n    },\n    onClick: onClick,\n    xcss: styles.root,\n    interactionName: interactionName,\n    \"aria-haspopup\": ariaHaspopup\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: ax([styles.iconBefore])\n  }, /*#__PURE__*/React.createElement(IconBefore, {\n    color: \"var(--ds-icon-subtle, #626F86)\",\n    spacing: \"spacious\",\n    label: \"\"\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: ax([styles.buttonText])\n  }, /*#__PURE__*/React.createElement(Text, {\n    color: \"color.text.subtlest\"\n  }, label)), elemAfter && /*#__PURE__*/React.createElement(\"span\", {\n    className: ax([styles.elemAfter])\n  }, elemAfter)), /*#__PURE__*/React.createElement(Show, {\n    below: \"xs\"\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    label: label,\n    appearance: \"subtle\",\n    icon: SearchIcon,\n    onClick: onClick,\n    interactionName: interactionName,\n    \"aria-haspopup\": ariaHaspopup\n  })));\n};", "import React from 'react';\nimport ChatIcon from '@atlaskit/icon/core/ai-chat';\nimport { ListItem } from '../../components/list-item';\nimport { Button } from './themed/migration';\n\n/**\n * __Chat button__\n *\n * The chat button for the top navigation.\n * TODO: check if this is still needed and remove. Jira doesn't use it - there's a separate button for ConversationAssistant\n */\nexport var ChatButton = function ChatButton(_ref) {\n  var children = _ref.children,\n    onClick = _ref.onClick,\n    isSelected = _ref.isSelected,\n    interactionName = _ref.interactionName;\n  return /*#__PURE__*/React.createElement(ListItem, null, /*#__PURE__*/React.createElement(Button, {\n    appearance: \"default\",\n    iconBefore: ChatIcon,\n    onClick: onClick,\n    isSelected: isSelected,\n    interactionName: interactionName\n  }, children));\n};", "import React, { forwardRef, Fragment } from 'react';\nimport { ListItem } from '../../components/list-item';\nimport { IconButton } from './themed/migration';\n/**\n * __EndItem__\n *\n * An icon button for the `TopNavEnd` layout area of the top navigation. Used for adding custom actions that are not already provided.\n *\n * For common actions, like `Notifications`, `Help`, `Profile`, `Settings`, use the provided components as appropriate.\n */\nexport var EndItem = /*#__PURE__*/forwardRef(function (_ref, forwardedRef) {\n  var label = _ref.label,\n    icon = _ref.icon,\n    onClick = _ref.onClick,\n    onMouseEnter = _ref.onMouseEnter,\n    isSelected = _ref.isSelected,\n    testId = _ref.testId,\n    interactionName = _ref.interactionName,\n    ariaControls = _ref['aria-controls'],\n    ariaExpanded = _ref['aria-expanded'],\n    ariaHasPopup = _ref['aria-haspopup'],\n    _ref$isListItem = _ref.isListItem,\n    isListItem = _ref$isListItem === void 0 ? true : _ref$isListItem;\n  var Wrapper = isListItem ? ListItem : Fragment;\n  return /*#__PURE__*/React.createElement(Wrapper, null, /*#__PURE__*/React.createElement(IconButton, {\n    ref: forwardedRef,\n    icon: icon,\n    label: label,\n    onClick: onClick,\n    onMouseEnter: onMouseEnter,\n    appearance: \"subtle\",\n    isSelected: isSelected,\n    isTooltipDisabled: false,\n    testId: testId,\n    interactionName: interactionName,\n    \"aria-controls\": ariaControls,\n    \"aria-expanded\": ariaExpanded,\n    \"aria-haspopup\": ariaHasPopup\n  }));\n});", "import React, { forwardRef } from 'react';\nimport NotificationsIcon from '@atlaskit/icon/core/notification';\nimport { BadgeContainer } from '../../components/badge-container';\nimport { EndItem } from './end-item';\nvar NOTIFICATIONS_BADGE_ID = 'atlassian-navigation-notification-count';\n/**\n * __Notifications__\n *\n * The trigger button for the notifications menu in the top navigation bar.\n */\nexport var Notifications = /*#__PURE__*/forwardRef(function Notifications(_ref, ref) {\n  var label = _ref.label,\n    onClick = _ref.onClick,\n    onMouseEnter = _ref.onMouseEnter,\n    isSelected = _ref.isSelected,\n    testId = _ref.testId,\n    interactionName = _ref.interactionName,\n    ariaControls = _ref['aria-controls'],\n    ariaExpanded = _ref['aria-expanded'],\n    ariaHasPopup = _ref['aria-haspopup'],\n    isListItem = _ref.isListItem,\n    badge = _ref.badge;\n  return /*#__PURE__*/React.createElement(BadgeContainer, {\n    id: NOTIFICATIONS_BADGE_ID,\n    badge: badge\n    // We only need to set the list item role on the top level element (BadgeContainer)\n    ,\n    isListItem: isListItem\n  }, /*#__PURE__*/React.createElement(EndItem, {\n    label: label,\n    onClick: onClick,\n    onMouseEnter: onMouseEnter,\n    isSelected: isSelected,\n    testId: testId,\n    interactionName: interactionName,\n    \"aria-controls\": ariaControls,\n    \"aria-expanded\": ariaExpanded,\n    \"aria-haspopup\": ariaHasPopup,\n    ref: ref,\n    icon: NotificationsIcon\n    // We explicitly set the EndItem to not be a list item,\n    // because the BadgeContainer already has a list item role (if `isListItem` is true)\n    ,\n    isListItem: false\n  }));\n});", "/* badge-container.tsx generated by @compiled/babel-plugin v0.36.1 */\nimport \"./badge-container.compiled.css\";\nimport * as React from 'react';\nimport { ax, ix } from \"@compiled/react/runtime\";\nvar styles = {\n  root: \"_kqswh2mm _1e0c1txw\",\n  badgeContainer: \"_kqswstnw _o5721q9c _152tr5cr _1e02utpp _lcxvglyw\"\n};\n/**\n * __Badge container__\n *\n * Adds a badge to the top right corner of the child element.\n * Example of usage is showing the number of notifications in the top navigation bar.\n */\nexport var BadgeContainer = function BadgeContainer(_ref) {\n  var children = _ref.children,\n    badgeId = _ref.id,\n    Badge = _ref.badge,\n    _ref$isListItem = _ref.isListItem,\n    isListItem = _ref$isListItem === void 0 ? true : _ref$isListItem;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    role: isListItem ? 'listitem' : undefined,\n    className: ax([styles.root])\n  }, children, /*#__PURE__*/React.createElement(\"div\", {\n    id: badgeId,\n    \"aria-hidden\": true,\n    className: ax([styles.badgeContainer])\n  }, /*#__PURE__*/React.createElement(Badge, null)));\n};", "import React, { forwardRef } from 'react';\nimport AddIcon from '@atlaskit/icon/core/add';\nimport { Button } from './themed/migration';\n/**\n * __Create button__\n *\n * The create button for the top navigation.\n */\nexport var CreateButton = /*#__PURE__*/forwardRef(function (_ref, ref) {\n  var children = _ref.children,\n    onClick = _ref.onClick,\n    testId = _ref.testId,\n    interactionName = _ref.interactionName;\n  return /*#__PURE__*/React.createElement(Button, {\n    ref: ref,\n    appearance: \"primary\",\n    iconBefore: AddIcon,\n    onClick: onClick,\n    testId: testId,\n    interactionName: interactionName\n  }, children);\n});", "import _extends from \"@babel/runtime/helpers/extends\";\n/**\n * @jsxRuntime classic\n */\nimport React, { forwardRef } from 'react';\nimport HelpIcon from '@atlaskit/icon/core/question-circle';\nimport { BadgeContainer } from '../../components/badge-container';\nimport { EndItem } from './end-item';\nvar HELP_NOTIFICATION_BADGE_ID = 'atlassian-navigation-help-notification-count';\n/**\n * __Help__\n *\n * The trigger button for the help menu in the top navigation bar.\n */\nexport var Help = /*#__PURE__*/forwardRef(function Help(_ref, ref) {\n  var label = _ref.label,\n    onClick = _ref.onClick,\n    onMouseEnter = _ref.onMouseEnter,\n    isSelected = _ref.isSelected,\n    testId = _ref.testId,\n    interactionName = _ref.interactionName,\n    isListItem = _ref.isListItem,\n    badge = _ref.badge;\n  var sharedProps = {\n    icon: HelpIcon,\n    label: label,\n    onClick: onClick,\n    onMouseEnter: onMouseEnter,\n    isSelected: isSelected,\n    testId: testId,\n    interactionName: interactionName,\n    ref: ref\n  };\n  if (!badge) {\n    return /*#__PURE__*/React.createElement(EndItem, _extends({}, sharedProps, {\n      isListItem: isListItem\n    }));\n  }\n  return /*#__PURE__*/React.createElement(BadgeContainer, {\n    id: HELP_NOTIFICATION_BADGE_ID,\n    badge: badge\n    // We only need to set the list item role on the top level element (BadgeContainer)\n    ,\n    isListItem: isListItem\n  }, /*#__PURE__*/React.createElement(EndItem, _extends({}, sharedProps, {\n    // We explicitly set the EndItem to not be a list item,\n    // because the BadgeContainer already has a list item role (if `isListItem` is true)\n    isListItem: false\n  })));\n});", "import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"src\"];\nimport React, { forwardRef, useCallback } from 'react';\nimport Avatar from '@atlaskit/avatar';\nimport { EndItem } from './end-item';\n/**\n * __Profile__\n *\n * The Profile button for the top navigation.\n */\nexport var Profile = /*#__PURE__*/forwardRef(function (_ref, ref) {\n  var src = _ref.src,\n    props = _objectWithoutProperties(_ref, _excluded);\n  var ProfileAvatar = useCallback(function () {\n    return /*#__PURE__*/React.createElement(Avatar, {\n      appearance: \"circle\",\n      src: src,\n      size: \"small\"\n    });\n  }, [src]);\n  return /*#__PURE__*/React.createElement(EndItem, _extends({}, props, {\n    ref: ref,\n    icon: ProfileAvatar\n  }));\n});", "import _extends from \"@babel/runtime/helpers/extends\";\nimport React, { forwardRef } from 'react';\nimport SettingsIcon from '@atlaskit/icon/core/settings';\nimport { EndItem } from './end-item';\n/**\n * __Settings__\n *\n * The Settings button for the top navigation.\n */\nexport var Settings = /*#__PURE__*/forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(EndItem, _extends({}, props, {\n    ref: ref,\n    icon: SettingsIcon\n  }));\n});", "import React, { forwardRef } from 'react';\nimport LogInIcon from '@atlaskit/icon/core/log-in';\nimport { ListItem } from '../../components/list-item';\nimport { LinkIconButton } from './themed/migration';\n/**\n * __Log in__\n *\n * The Log in button for the top navigation.\n */\nexport var LogIn = /*#__PURE__*/forwardRef(function (_ref, ref) {\n  var onClick = _ref.onClick,\n    onMouseEnter = _ref.onMouseEnter,\n    testId = _ref.testId,\n    interactionName = _ref.interactionName,\n    href = _ref.href,\n    label = _ref.label;\n  return (\n    /*#__PURE__*/\n    /**\n     * This component doesn't use `EndItem` internally because it renders a\n     * `LinkIconButton` instead of an `IconButton`.\n     *\n     * We could make another abstraction, but this is the only top navigation item\n     * that renders a link.\n     */\n    React.createElement(ListItem, null, /*#__PURE__*/React.createElement(LinkIconButton, {\n      ref: ref,\n      label: label,\n      href: href,\n      onClick: onClick,\n      onMouseEnter: onMouseEnter,\n      testId: testId,\n      interactionName: interactionName,\n      icon: LogInIcon,\n      appearance: \"subtle\",\n      isTooltipDisabled: false\n    }))\n  );\n});"],
  "mappings": "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",
  "names": ["LogInIcon", "React", "AppSwitcherIcon", "import_react", "CustomLogo", "React", "import_react", "anchorStyles", "iconContainerStyles", "AppLogo", "React", "text_default", "import_react", "Search", "SearchIcon", "React", "import_react", "ChatButton", "React", "ChatIcon", "import_react", "React", "import_react", "React", "styles", "BadgeContainer", "Notifications", "React", "NotificationsIcon", "import_react", "React", "AddIcon", "import_react", "Help", "HelpIcon", "React", "import_react", "React", "import_react", "React", "SettingsIcon", "import_react", "React", "LogInIcon"]
}
