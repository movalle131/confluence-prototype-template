{
  "version": 3,
  "sources": ["../../@atlaskit/navigation-system/dist/esm/ui/menu-item/expandable-menu-item/expandable-menu-item.js", "../../@atlaskit/navigation-system/dist/esm/ui/menu-item/expandable-menu-item/expandable-menu-item-trigger.js", "../../@atlaskit/navigation-system/dist/esm/ui/menu-item/expandable-menu-item/expandable-menu-item-content.js", "../../@atlaskit/navigation-system/dist/esm/ui/menu-item/top-level-spacer.js", "../../@atlaskit/navigation-system/dist/esm/ui/page-layout/aside.js", "../../@atlaskit/navigation-system/dist/esm/ui/page-layout/banner.js", "../../@atlaskit/navigation-system/dist/esm/ui/page-layout/panel.js"],
  "sourcesContent": ["/* expandable-menu-item.tsx generated by @compiled/babel-plugin v0.36.1 */\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport \"./expandable-menu-item.compiled.css\";\nimport * as React from 'react';\nimport { ax, ix } from \"@compiled/react/runtime\";\nimport { forwardRef } from 'react';\nimport useControlled from '@atlaskit/ds-lib/use-controlled';\nimport { MenuListItem } from '../menu-list-item';\nimport { IsExpandedContext, OnExpansionToggleContext, SetIsExpandedContext } from './expandable-menu-item-context';\nvar relativeStyles = {\n  root: \"_kqswh2mm\"\n};\n\n/**\n * __ExpandableMenuItem__\n *\n * A composable component for nested menu items that can be revealed and hidden by interacting witih the parent menu item.\n *\n * Follows the [disclosure pattern](https://www.w3.org/WAI/ARIA/apg/patterns/disclosure/).\n *\n * Should be used with `ExpandableMenuItemTrigger` as the parent menu item, and children menu items should be wrapped in a `ExpandableMenuItemContent`.\n *\n * Usage example:\n * ```jsx\n * <ExpandableMenuItem>\n *   <ExpandableMenuItemTrigger>Parent menu item</ExpandableMenuItemTrigger>\n *   <ExpandableMenuItemContent>\n *     <ButtonMenuItem>Item 1</ButtonMenuItem>\n *     <ButtonMenuItem>Item 2</ButtonMenuItem>\n *   </ExpandableMenuItemContent>\n * </ExpandableMenuItem>\n * ```\n */\nexport var ExpandableMenuItem = /*#__PURE__*/forwardRef(function (_ref, forwardedRef) {\n  var isExpandedControlled = _ref.isExpanded,\n    _ref$isDefaultExpande = _ref.isDefaultExpanded,\n    isDefaultExpanded = _ref$isDefaultExpande === void 0 ? false : _ref$isDefaultExpande,\n    onExpansionToggle = _ref.onExpansionToggle,\n    children = _ref.children,\n    dropIndicator = _ref.dropIndicator;\n  var _useControlled = useControlled(isExpandedControlled, function () {\n      return isDefaultExpanded;\n    }),\n    _useControlled2 = _slicedToArray(_useControlled, 2),\n    isExpanded = _useControlled2[0],\n    setIsExpanded = _useControlled2[1];\n  return /*#__PURE__*/React.createElement(IsExpandedContext.Provider, {\n    value: isExpanded\n  }, /*#__PURE__*/React.createElement(SetIsExpandedContext.Provider, {\n    value: setIsExpanded\n  }, /*#__PURE__*/React.createElement(OnExpansionToggleContext.Provider, {\n    value: onExpansionToggle !== null && onExpansionToggle !== void 0 ? onExpansionToggle : null\n  }, /*#__PURE__*/React.createElement(MenuListItem, {\n    ref: forwardedRef\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: ax([dropIndicator && relativeStyles.root])\n  }, children, dropIndicator)))));\n});", "/* expandable-menu-item-trigger.tsx generated by @compiled/babel-plugin v0.36.1 */\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport \"./expandable-menu-item-trigger.compiled.css\";\nimport { ax, ix } from \"@compiled/react/runtime\";\nimport React, { forwardRef, useCallback, useId, useRef } from 'react';\nimport { IconButton } from '@atlaskit/button/new';\nimport ChevronDownIcon from '@atlaskit/icon/core/chevron-down';\nimport ChevronRightIcon from '@atlaskit/icon/core/chevron-right';\nimport { fg } from '@atlaskit/platform-feature-flags';\nimport { MenuItemBase, nestedOpenPopupCSSSelector } from '../menu-item';\nimport { useScrollMenuItemIntoView } from '../use-scroll-menu-item-into-view';\nimport { useIsExpanded, useOnExpansionToggle, useSetIsExpanded } from './expandable-menu-item-context';\n// Widening type to `string` to side-step Compiled cssMap typescript warnings with unknown properties\nvar chevronDisplayCssVar = '--expandable-chevron-display';\nvar providedElemBeforeDisplayCssVar = '--expandable-provided-elembefore-display';\nvar wrapperStyles = {\n  root: \"_1mmi1txw _165nglyw\",\n  showProvidedElemBefore: \"_1mmiglyw _165n1bgi _v9u71txw _1hl9glyw _b31z1txw _1vnl1txw _12xsglyw _p8btglyw\"\n};\nvar iconStyles = {\n  chevron: \"_1e0ciw0t _1tz3r0mg\",\n  providedElemBefore: \"_1e0c1xb2\",\n  providedElemBeforeSelected: \"_syaz1qo3\"\n};\nvar ExpandableMenuItemIcon = function ExpandableMenuItemIcon(_ref) {\n  var iconProps = _ref.iconProps,\n    isExpanded = _ref.isExpanded,\n    isSelected = _ref.isSelected,\n    providedElemBefore = _ref.providedElemBefore;\n  var ChevronIcon = isExpanded ? ChevronDownIcon : ChevronRightIcon;\n  var chevronElem = /*#__PURE__*/React.createElement(ChevronIcon, _extends({}, iconProps, {\n    label: \"\",\n    color: isSelected ? \"var(--ds-icon-selected, #0C66E4)\" : undefined,\n    size: \"small\"\n  }));\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: ax([iconStyles.chevron])\n  }, chevronElem), providedElemBefore && /*#__PURE__*/React.createElement(\"div\", {\n    className: ax([iconStyles.providedElemBefore, isSelected && iconStyles.providedElemBeforeSelected])\n  }, providedElemBefore));\n};\n/**\n * __ExpandableMenuItemTrigger__\n *\n * The trigger component for an `ExpandableMenuItem`. Interacting with it will expand or collapse the expandable.\n */\nexport var ExpandableMenuItemTrigger = /*#__PURE__*/forwardRef(function (_ref2, forwardedRef) {\n  var actions = _ref2.actions,\n    isSelected = _ref2.isSelected,\n    href = _ref2.href,\n    providedElemBefore = _ref2.elemBefore,\n    elemAfter = _ref2.elemAfter,\n    actionsOnHover = _ref2.actionsOnHover,\n    onClick = _ref2.onClick,\n    children = _ref2.children,\n    testId = _ref2.testId,\n    interactionName = _ref2.interactionName,\n    isContentTooltipDisabled = _ref2.isContentTooltipDisabled,\n    visualContentRef = _ref2.visualContentRef,\n    isDragging = _ref2.isDragging,\n    hasDragIndicator = _ref2.hasDragIndicator,\n    dropIndicator = _ref2.dropIndicator;\n  var id = useId();\n  var onExpansionToggle = useOnExpansionToggle();\n  var isExpanded = useIsExpanded();\n  var setIsExpanded = useSetIsExpanded();\n  var itemRef = useRef(null);\n  var handleIconClick = useCallback(function () {\n    onExpansionToggle === null || onExpansionToggle === void 0 || onExpansionToggle(!isExpanded);\n    setIsExpanded(!isExpanded);\n  }, [isExpanded, onExpansionToggle, setIsExpanded]);\n  var handleMenuContentClick = useCallback(function (event, analyticsEvent) {\n    var newValue = !isExpanded;\n    onClick === null || onClick === void 0 || onClick(event, analyticsEvent, {\n      isExpanded: newValue\n    });\n    onExpansionToggle === null || onExpansionToggle === void 0 || onExpansionToggle(newValue);\n    setIsExpanded(newValue);\n  }, [onClick, onExpansionToggle, isExpanded, setIsExpanded]);\n  var isSelectable = typeof href !== 'undefined';\n  useScrollMenuItemIntoView({\n    elementRef: itemRef,\n    isSelected: Boolean(isSelectable && isSelected)\n  });\n\n  // Wrapped in an IconButton if the expandable menu item trigger is selectable\n  var elemBefore = isSelectable ? /*#__PURE__*/React.createElement(IconButton, {\n    icon: function icon(iconProps) {\n      return /*#__PURE__*/React.createElement(ExpandableMenuItemIcon, {\n        iconProps: iconProps,\n        isExpanded: isExpanded,\n        isSelected: isSelected,\n        providedElemBefore: providedElemBefore\n      });\n    },\n    \"aria-expanded\": isExpanded\n    // We are labelling the icon button using the containing menu item's content, to provide context to\n    // screen readers on what will actually be expanded or collapsed. Screen readers will also use the\n    // `aria-expanded` attribute to indicate the expanded state of the menu item.\n    // We are not using the `aria-label` attribute here as it is not supported by the `IconButton` component.\n    ,\n    \"aria-labelledby\": fg('platform_dst_expandable_menu_item_elembefore_label') ? id : undefined\n    // IconButton requires a label prop, however it will not be used by screen readers as we are setting\n    // `aria-labelledby`, which will be used instead.\n    ,\n    label: fg('platform_dst_expandable_menu_item_elembefore_label') ? '' : isExpanded ? 'Collapse' : 'Expand',\n    appearance: \"subtle\",\n    spacing: \"compact\",\n    onClick: handleIconClick,\n    interactionName: interactionName,\n    testId: testId ? \"\".concat(testId, \"--elem-before-button\") : undefined\n  }) : /*#__PURE__*/React.createElement(ExpandableMenuItemIcon, {\n    isExpanded: isExpanded,\n    isSelected: isSelected,\n    providedElemBefore: providedElemBefore\n  });\n\n  // For expandable menu items, we shouldn't wrap in a `li` here. The `li` is instead at a higher level (`ExpandableMenuItem`), grouping the expandable menu item trigger and its content\n  return /*#__PURE__*/React.createElement(\"div\", {\n    ref: itemRef,\n    className: ax([wrapperStyles.root, providedElemBefore && wrapperStyles.showProvidedElemBefore])\n  }, /*#__PURE__*/React.createElement(MenuItemBase, {\n    id: id,\n    actions: actions,\n    actionsOnHover: actionsOnHover,\n    elemBefore: elemBefore,\n    ariaExpanded: isExpanded,\n    elemAfter: elemAfter,\n    href: href,\n    isSelected: isSelected,\n    onClick: handleMenuContentClick,\n    ref: forwardedRef,\n    visualContentRef: visualContentRef,\n    testId: testId,\n    interactionName: interactionName,\n    isContentTooltipDisabled: isContentTooltipDisabled,\n    isDragging: isDragging,\n    hasDragIndicator: hasDragIndicator,\n    dropIndicator: dropIndicator\n  }, children));\n});", "/* expandable-menu-item-content.tsx generated by @compiled/babel-plugin v0.36.1 */\nimport \"./expandable-menu-item-content.compiled.css\";\nimport * as React from 'react';\nimport { ax, ix } from \"@compiled/react/runtime\";\nimport { forwardRef, useRef } from 'react';\nimport { cx } from '@compiled/react';\nimport { List } from '../../../components/list';\nimport { expandableMenuItemIndentation } from '../constants';\nimport { AreAllAncestorsExpandedContext, LevelContext, useAreAllAncestorsExpanded, useIsExpanded, useLevel } from './expandable-menu-item-context';\nvar styles = {\n  content: \"_bozg1crf\",\n  collapsedContent: \"_1e0cglyw\"\n};\n/**\n * __ExpandableMenuItemContent__\n *\n * The expandable and collapsable section of the expandable menu item. It should contain the nested menu items.\n */\nexport var ExpandableMenuItemContent = /*#__PURE__*/forwardRef(function (_ref, forwardedRef) {\n  var children = _ref.children;\n  var isExpanded = useIsExpanded();\n  var level = useLevel();\n  var hasExpanded = useRef(false);\n  var areAllAncestorsExpanded = useAreAllAncestorsExpanded();\n  if (!isExpanded && !hasExpanded.current) {\n    return null;\n  }\n  hasExpanded.current = true;\n  return /*#__PURE__*/React.createElement(LevelContext.Provider, {\n    value: level + 1\n  }, /*#__PURE__*/React.createElement(AreAllAncestorsExpandedContext.Provider, {\n    value:\n    /**\n     * By combining the current ancestor and with the current menu item's state, all nested menu items will know if their\n     * ancestor menu items are all expanded.\n     */\n    areAllAncestorsExpanded && isExpanded\n  }, /*#__PURE__*/React.createElement(List, {\n    ref: forwardedRef,\n    xcss: cx(styles.content, !isExpanded && styles.collapsedContent)\n  }, children)));\n});", "/* top-level-spacer.tsx generated by @compiled/babel-plugin v0.36.1 */\nimport \"./top-level-spacer.compiled.css\";\nimport * as React from 'react';\nimport { ax, ix } from \"@compiled/react/runtime\";\nimport { useEffect } from 'react';\nimport { useLevel } from './expandable-menu-item/expandable-menu-item-context';\nvar styles = {\n  root: \"_4t3iutpp\"\n};\n\n/**\n * Use this component to create visual separation between the:\n *\n * - global app shortcut section\n * - 'more' button menu item\n * - starred spaces (in Confluence)\n *\n * Only use this component in the top level of the menu,\n * and exercise caution when using it in new situations.\n *\n * This component exists to fulfil product design requirements but has not yet\n * been consolidated into the wider navigation system.\n *\n * It may not exist in the future when global apps are no longer in the side navigation.\n */\nexport function TopLevelSpacer() {\n  var level = useLevel();\n  useEffect(function () {\n    if (process.env.NODE_ENV !== 'production') {\n      if (level !== 0) {\n        throw new Error('TopLevelSpacer should only be used in the top level of the menu. Please speak with DST if you have a novel use case.');\n      }\n    }\n  }, [level]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: ax([styles.root])\n  });\n}", "/* aside.tsx generated by @compiled/babel-plugin v0.36.1 */\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport \"./aside.compiled.css\";\nimport * as React from 'react';\nimport { ax, ix } from \"@compiled/react/runtime\";\nimport { useContext, useEffect, useRef, useState } from 'react';\nimport usePreviousValue from '@atlaskit/ds-lib/use-previous-value';\nimport { media } from '@atlaskit/primitives/responsive';\nimport { useSkipLinkInternal } from '../../context/skip-links/skip-links-context';\nimport { asidePanelSplitterId, asideVar, contentHeightWhenFixed, contentInsetBlockStart, UNSAFE_asideLayoutVar } from './constants';\nimport { DangerouslyHoistSlotSizes } from './hoist-slot-sizes-context';\nimport { DangerouslyHoistCssVarToDocumentRoot } from './hoist-utils';\nimport { useLayoutId } from './id-utils';\nimport { PanelSplitterProvider } from './panel-splitter/provider';\nimport { useResizingWidthCssVarOnRootElement } from './use-resizing-width-css-var-on-root-element';\nvar panelSplitterResizingVar = '--n_asdRsz';\n/**\n * The bounds for Aside and Panel are purposely set to support the current usage in Jira.\n *\n * Jira sets the slot's width to `0px` when there is no active content to display in it.\n *   - This means the min width needs to support `0px`.\n * The Conversation Assistant component in Jira (rendered in a nav3 RightSidebar, or a nav4 Aside) has a custom resizing\n * implementation, which has a maximum width of `50vw`.\n *   - This means the max width needs to support `50vw`.\n *\n * This is not the final implementation and will be updated once Jira's usage has been fixed.\n * Ticket to track this is: https://jplat.atlassian.net/browse/BLU-3951\n *\n * We're using two different bounds for each slot here, to support the `0px` min width when programatically set using the\n * `defaultWidth` prop, and another one that is used when resizing the slots which has a sensible min width.\n */\nvar asideWidthSlotBounds = {\n  min: '0px',\n  max: '50vw'\n};\nvar asideWidthResizeBounds = {\n  min: '120px',\n  max: '50vw'\n};\nfunction getResizeBounds() {\n  return asideWidthResizeBounds;\n}\nvar styles = {\n  root: \"_nd5lns35 _vchhusvi _kqswh2mm _glte1kzp _ndwch9n0\",\n  inner: \"_1reo1wug _18m91wug _152timx3 _4t3i1osq _165teqxy _13wn1if8\"\n};\n\n/**\n * The Aside is rendered to the right (inline end) of the Main area.\n *\n * You can optionally render a `PanelSplitter` as a child to make the aside area resizable.\n */\nexport function Aside(_ref) {\n  var children = _ref.children,\n    xcss = _ref.xcss,\n    _ref$defaultWidth = _ref.defaultWidth,\n    defaultWidth = _ref$defaultWidth === void 0 ? 330 : _ref$defaultWidth,\n    _ref$label = _ref.label,\n    label = _ref$label === void 0 ? 'Aside' : _ref$label,\n    _ref$skipLinkLabel = _ref.skipLinkLabel,\n    skipLinkLabel = _ref$skipLinkLabel === void 0 ? label : _ref$skipLinkLabel,\n    testId = _ref.testId,\n    providedId = _ref.id;\n  var dangerouslyHoistSlotSizes = useContext(DangerouslyHoistSlotSizes);\n  var id = useLayoutId({\n    providedId: providedId\n  });\n\n  /**\n   * Don't show the skip link if the slot has 0 width.\n   *\n   * Remove `isHidden` usage after https://jplat.atlassian.net/browse/BLU-3951\n   */\n  useSkipLinkInternal({\n    id: id,\n    label: skipLinkLabel,\n    isHidden: defaultWidth === 0\n  });\n  var ref = useRef(null);\n  var _useState = useState(defaultWidth),\n    _useState2 = _slicedToArray(_useState, 2),\n    width = _useState2[0],\n    setWidth = _useState2[1];\n  // Used to track the previous value of the `defaultWidth` prop, for logging dev warnings when it changes.\n  var previousWidthProp = usePreviousValue(defaultWidth);\n\n  /**\n   * Updates the width state based on changes to `defaultWidth`.\n   * This is temporary and needed to support the current usage in Jira, and will be removed once it is no longer needed.\n   * https://jplat.atlassian.net/browse/BLU-3951\n   */\n  useEffect(function () {\n    setWidth(defaultWidth);\n  }, [defaultWidth]);\n\n  // Putting the warning in a separate effect to avoid adding `previousWidthProp` as an effect dependency when updating width.\n  useEffect(function () {\n    if (process.env.NODE_ENV !== 'production') {\n      if (previousWidthProp !== undefined && defaultWidth !== previousWidthProp) {\n        // eslint-disable-next-line no-console\n        console.warn('Page Layout warning\\n\\n', 'The value of the `defaultWidth` prop on the `Aside` layout slot component has changed. This should not be changed after the component has been mounted.\\n\\n', 'In the future, changes to the `defaultWidth` prop will not be respected. It is only supported as a stopgap to enable migration from Nav3 to Nav4.\\n\\n');\n      }\n    }\n  }, [defaultWidth, previousWidthProp]);\n  var asideVariableWidth = \"clamp(\".concat(asideWidthSlotBounds.min, \", \").concat(width, \"px, \").concat(asideWidthSlotBounds.max, \")\");\n  useResizingWidthCssVarOnRootElement({\n    isEnabled: dangerouslyHoistSlotSizes,\n    panelId: asidePanelSplitterId,\n    cssVar: panelSplitterResizingVar\n  });\n  return /*#__PURE__*/React.createElement(\"aside\", {\n    id: id,\n    \"data-layout-slot\": true,\n    \"aria-label\": label,\n    className: ax([styles.root, xcss])\n    // eslint-disable-next-line @atlaskit/ui-styling-standard/enforce-style-prop, @atlaskit/ui-styling-standard/no-imported-style-values\n    ,\n    style: _defineProperty({}, asideVar, asideVariableWidth),\n    \"data-testid\": testId,\n    ref: ref\n  }, dangerouslyHoistSlotSizes &&\n  /*#__PURE__*/\n  // ------ START UNSAFE STYLES ------\n  // These styles are only needed for the UNSAFE legacy use case for Jira + Confluence.\n  // When they aren't needed anymore we can delete them wholesale.\n  React.createElement(DangerouslyHoistCssVarToDocumentRoot, {\n    variableName: UNSAFE_asideLayoutVar,\n    value: \"0px\",\n    mediaQuery: media.above.md,\n    responsiveValue: \"var(\".concat(panelSplitterResizingVar, \", \").concat(asideVariableWidth, \")\")\n  })\n  // ------ END UNSAFE STYLES ------\n  , /*#__PURE__*/React.createElement(PanelSplitterProvider, {\n    panelId: asidePanelSplitterId,\n    panelRef: ref,\n    panelWidth: width,\n    onCompleteResize: setWidth,\n    getResizeBounds: getResizeBounds,\n    resizingCssVar: panelSplitterResizingVar,\n    position: \"start\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    \"data-testid\": testId ? \"\".concat(testId, \"--inner\") : undefined,\n    className: ax([styles.inner])\n  }, children)));\n}", "/* banner.tsx generated by @compiled/babel-plugin v0.36.1 */\nimport \"./banner.compiled.css\";\nimport * as React from 'react';\nimport { ax, ix } from \"@compiled/react/runtime\";\nimport { useContext } from 'react';\nimport { useSkipLinkInternal } from '../../context/skip-links/skip-links-context';\nimport { bannerMountedVar, localSlotLayers, UNSAFE_bannerVar } from './constants';\nimport { DangerouslyHoistSlotSizes } from './hoist-slot-sizes-context';\nimport { DangerouslyHoistCssVarToDocumentRoot, HoistCssVarToLocalGrid } from './hoist-utils';\nimport { useLayoutId } from './id-utils';\nvar styles = {\n  root: \"_nd5ldkfm _1reo15vq _18m915vq _4t3iutvi _152tidpf _kqsw1if8 _1pbyegat\"\n};\n\n/**\n * The banner layout area. It will always be displayed at the top of the screen.\n *\n * Should be used to render a `Banner` component from `@atlaskit/banner`.\n */\nexport function Banner(_ref) {\n  var children = _ref.children,\n    xcss = _ref.xcss,\n    _ref$height = _ref.height,\n    height = _ref$height === void 0 ? 48 : _ref$height,\n    _ref$skipLinkLabel = _ref.skipLinkLabel,\n    skipLinkLabel = _ref$skipLinkLabel === void 0 ? 'Banner' : _ref$skipLinkLabel,\n    testId = _ref.testId,\n    providedId = _ref.id;\n  var dangerouslyHoistSlotSizes = useContext(DangerouslyHoistSlotSizes);\n  var id = useLayoutId({\n    providedId: providedId\n  });\n\n  /**\n   * Don't show the skip link if the slot has 0 height.\n   */\n  useSkipLinkInternal({\n    id: id,\n    label: skipLinkLabel,\n    isHidden: height === 0\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: id,\n    \"data-layout-slot\": true,\n    className: ax([styles.root, xcss]),\n    \"data-testid\": testId\n  }, /*#__PURE__*/React.createElement(HoistCssVarToLocalGrid, {\n    variableName: bannerMountedVar,\n    value: height\n  }), dangerouslyHoistSlotSizes &&\n  /*#__PURE__*/\n  // ------ START UNSAFE STYLES ------\n  // These styles are only needed for the UNSAFE legacy use case for Jira + Confluence.\n  // When they aren't needed anymore we can delete them wholesale.\n  React.createElement(DangerouslyHoistCssVarToDocumentRoot, {\n    variableName: UNSAFE_bannerVar,\n    value: height\n  })\n  // ------ END UNSAFE STYLES ------\n  , children);\n}", "/* panel.tsx generated by @compiled/babel-plugin v0.36.1 */\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport \"./panel.compiled.css\";\nimport * as React from 'react';\nimport { ax, ix } from \"@compiled/react/runtime\";\nimport { useCallback, useContext, useEffect, useRef, useState } from 'react';\nimport { fg } from '@atlaskit/platform-feature-flags';\nimport { media } from '@atlaskit/primitives/responsive';\nimport { useSkipLinkInternal } from '../../context/skip-links/skip-links-context';\nimport { contentHeightWhenFixed, contentInsetBlockStart, localSlotLayers, panelPanelSplitterId, panelVar, sideNavLiveWidthVar, UNSAFE_panelLayoutVar } from './constants';\nimport { DangerouslyHoistSlotSizes } from './hoist-slot-sizes-context';\nimport { DangerouslyHoistCssVarToDocumentRoot } from './hoist-utils';\nimport { useLayoutId } from './id-utils';\nimport { PanelSplitterProvider } from './panel-splitter/provider';\nimport { useSideNavRef } from './side-nav/element-context';\nimport { useResizingWidthCssVarOnRootElement } from './use-resizing-width-css-var-on-root-element';\nvar panelSplitterResizingVar = '--n_pnlRsz';\n\n/**\n * We typically use the `defaultWidth` as the minimum resizing width,\n * but for large default widths we fallback to a standard value.\n *\n * This standard value of `400px` is to align with the Global Preview Panels.\n */\nvar fallbackResizeMinWidth = 400;\nvar styles = {\n  root: \"_nd5l1b6c _10fph9n0 _vchhusvi _1pbykb7n _4t3ieqxy _kqsw1if8 _152timx3 _bfhk1bhr _14b54rrg _4ap3vuon _1dhy1c6w _9sns1wug\",\n  border: \"_191wglyw _16qs1cd0 _1w6ezgxb _scbpglyw\",\n  scrollContainer: \"_1reo1wug _18m91wug _4t3i1osq\",\n  hidden: \"_1e0cglyw\",\n  oldMobileWidth: \"_1bsb1adv\",\n  newMobileWidth: \"_1bsb1dxx\"\n};\n\n/**\n * The Panel layout area is rendered to the right (inline end) of the Main area, or the Aside area if it is present.\n *\n * On small viewports (below 64rem, or 1024px), the Panel slot will become an overlay.\n *\n * You can optionally render a `PanelSplitter` as a child to make the panel area resizable.\n */\nexport function Panel(_ref) {\n  var children = _ref.children,\n    _ref$defaultWidth = _ref.defaultWidth,\n    defaultWidth = _ref$defaultWidth === void 0 ? 365 : _ref$defaultWidth,\n    _ref$label = _ref.label,\n    label = _ref$label === void 0 ? 'Panel' : _ref$label,\n    _ref$skipLinkLabel = _ref.skipLinkLabel,\n    skipLinkLabel = _ref$skipLinkLabel === void 0 ? label : _ref$skipLinkLabel,\n    testId = _ref.testId,\n    providedId = _ref.id,\n    xcss = _ref.xcss,\n    _ref$hasBorder = _ref.hasBorder,\n    hasBorder = _ref$hasBorder === void 0 ? fg('platform_design_system_nav4_panel_default_border') : _ref$hasBorder;\n  var dangerouslyHoistSlotSizes = useContext(DangerouslyHoistSlotSizes);\n  var id = useLayoutId({\n    providedId: providedId\n  });\n  /**\n   * Don't show the skip link if the slot has 0 width.\n   *\n   * Remove `isHidden` usage after https://jplat.atlassian.net/browse/BLU-3951\n   */\n  useSkipLinkInternal({\n    id: id,\n    label: skipLinkLabel,\n    isHidden: defaultWidth === 0\n  });\n  var ref = useRef(null);\n  var _useState = useState(defaultWidth),\n    _useState2 = _slicedToArray(_useState, 2),\n    width = _useState2[0],\n    setWidth = _useState2[1];\n  // Used to track the previous value of the `defaultWidth` prop, for logging dev warnings when it changes.\n  var defaultWidthRef = useRef(defaultWidth);\n\n  /**\n   * TODO: Remove this useEffect once the `width: 0` usage is removed from Jira.\n   * It updates the width state based on changes to `defaultWidth`, as a temporary stopgap to support Jira's current usage.\n   * https://jplat.atlassian.net/browse/BLU-3951\n   */\n  useEffect(function () {\n    if (defaultWidthRef.current === defaultWidth) {\n      return;\n    }\n    defaultWidthRef.current = defaultWidth;\n    setWidth(defaultWidth);\n    if (process.env.NODE_ENV !== 'production') {\n      // eslint-disable-next-line no-console\n      console.warn('Page Layout warning\\n\\n', 'The value of the `defaultWidth` prop on the `Panel` layout slot component has changed. This should not be changed after the component has been mounted.\\n\\n', 'In the future, changes to the `defaultWidth` prop will not be respected. It is only supported as a stopgap to enable migration from Nav3 to Nav4.\\n\\n');\n    }\n  }, [defaultWidth]);\n  var sideNavRef = useSideNavRef();\n\n  /**\n   * The minimum width that the panel can be resized to by the user.\n   *\n   * We only use the `defaultWidth` up to a point to avoid huge panels.\n   */\n  var minWidth = Math.min(defaultWidth, fallbackResizeMinWidth);\n\n  /**\n   * Returns the bounds for resizing, evaluated lazily when needed.\n   *\n   * Defined separately to the slot bounds because the resizing bounds need to be resolvable to a pixel value,\n   * and the panel's slot bounds use a complex CSS expression.\n   */\n  var getResizeBounds = useCallback(function () {\n    var _sideNavRef$current$o, _sideNavRef$current;\n    var sideNavWidth = (_sideNavRef$current$o = (_sideNavRef$current = sideNavRef.current) === null || _sideNavRef$current === void 0 ? void 0 : _sideNavRef$current.offsetWidth) !== null && _sideNavRef$current$o !== void 0 ? _sideNavRef$current$o : 0;\n    /**\n     * The panel should not resize larger than the page content, equivalent to the `Main` + `Aside` slots.\n     *\n     * This maximum width is equivalent to half the viewport width, after removing the sidebar width.\n     */\n    var maxWidth = Math.round((window.innerWidth - sideNavWidth) / 2);\n    return {\n      min: \"\".concat(minWidth, \"px\"),\n      max: \"\".concat(maxWidth, \"px\")\n    };\n  }, [minWidth, sideNavRef]);\n  var panelWidthSlotBounds = {\n    min: \"\".concat(minWidth, \"px\"),\n    // `sideNavLiveWidthVar` is not defined if the `SideNav` is not mounted, so we fallback to `0px`.\n    max: \"round(nearest, calc((100vw - var(\".concat(sideNavLiveWidthVar, \", 0px)) / 2), 1px)\")\n  };\n  var panelVariableWidth = \"clamp(\".concat(panelWidthSlotBounds.min, \", \").concat(width, \"px, \").concat(panelWidthSlotBounds.max, \")\");\n  useResizingWidthCssVarOnRootElement({\n    isEnabled: dangerouslyHoistSlotSizes,\n    cssVar: panelSplitterResizingVar,\n    panelId: panelPanelSplitterId\n  });\n  return /*#__PURE__*/React.createElement(\"section\", {\n    id: id,\n    \"data-layout-slot\": true,\n    \"aria-label\": label,\n    className: ax([styles.root, defaultWidth === 0 && styles.hidden, hasBorder && styles.border, fg('platform_design_system_nav4_panel_mobile_width_fix') ? styles.newMobileWidth : styles.oldMobileWidth, xcss]),\n    style: _defineProperty(_defineProperty({}, panelVar, panelVariableWidth), '--minWidth', fg('platform_design_system_nav4_panel_mobile_width_fix') ? \"\".concat(minWidth, \"px\") : undefined),\n    \"data-testid\": testId,\n    ref: ref\n  }, dangerouslyHoistSlotSizes &&\n  /*#__PURE__*/\n  // ------ START UNSAFE STYLES ------\n  // These styles are only needed for the UNSAFE legacy use case for Jira + Confluence.\n  // When they aren't needed anymore we can delete them wholesale.\n  React.createElement(DangerouslyHoistCssVarToDocumentRoot, {\n    variableName: UNSAFE_panelLayoutVar,\n    value: \"0px\",\n    mediaQuery: media.above.lg,\n    responsiveValue: \"var(\".concat(panelSplitterResizingVar, \", \").concat(panelVariableWidth, \")\")\n  })\n  // ------ END UNSAFE STYLES ------\n  , /*#__PURE__*/React.createElement(PanelSplitterProvider, {\n    panelId: panelPanelSplitterId,\n    panelRef: ref,\n    panelWidth: width,\n    onCompleteResize: setWidth,\n    getResizeBounds: getResizeBounds,\n    resizingCssVar: panelSplitterResizingVar,\n    position: \"start\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: ax([styles.scrollContainer])\n  }, children)));\n}"],
  "mappings": "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",
  "names": ["import_react", "ExpandableMenuItemIcon", "ChevronDownIcon", "ChevronRightIcon", "React", "React", "import_react", "React", "import_react", "styles", "React", "import_react", "styles", "React", "import_react", "styles", "React", "import_react", "panelSplitterResizingVar", "styles", "getResizeBounds"]
}
