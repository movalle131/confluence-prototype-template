import {
  _extends,
  init_extends
} from "./chunk-TRLI7EVB.js";
import {
  ax,
  init_runtime
} from "./chunk-XC7QRLB3.js";
import {
  _defineProperty,
  _objectWithoutProperties,
  fg,
  init_defineProperty,
  init_esm,
  init_objectWithoutProperties
} from "./chunk-WFA677R7.js";
import {
  require_react
} from "./chunk-QJTFJ6OV.js";
import {
  __esm,
  __export,
  __toESM
} from "./chunk-V4OQ3NZ2.js";

// node_modules/@atlaskit/icon/dist/esm/components/icon.js
import "/Users/movalle/Documents/GitHub/test-enhanced-app/node_modules/@atlaskit/icon/dist/esm/components/icon.compiled.css";
function ownKeys(e, r) {
  var t = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(e);
    r && (o = o.filter(function(r2) {
      return Object.getOwnPropertyDescriptor(e, r2).enumerable;
    })), t.push.apply(t, o);
  }
  return t;
}
function _objectSpread(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t = null != arguments[r] ? arguments[r] : {};
    r % 2 ? ownKeys(Object(t), true).forEach(function(r2) {
      _defineProperty(e, r2, t[r2]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r2) {
      Object.defineProperty(e, r2, Object.getOwnPropertyDescriptor(t, r2));
    });
  }
  return e;
}
var React, import_react, sizeStyles, Icon, icon_default;
var init_icon = __esm({
  "node_modules/@atlaskit/icon/dist/esm/components/icon.js"() {
    init_extends();
    init_defineProperty();
    React = __toESM(require_react());
    init_runtime();
    import_react = __toESM(require_react());
    sizeStyles = {
      small: "_1bsb7vkz _4t3i7vkz _5fdi7vkz _zbji7vkz",
      medium: "_1bsb1tcg _4t3i1tcg _5fdi1tcg _zbji1tcg",
      large: "_1bsbzwfg _4t3izwfg _5fdizwfg _zbjizwfg",
      xlarge: "_1bsbckbl _4t3ickbl _5fdickbl _zbjickbl"
    };
    Icon = (0, import_react.memo)(function Icon2(props) {
      var _ref = props, Glyph = _ref.glyph, dangerouslySetGlyph = _ref.dangerouslySetGlyph, _ref$primaryColor = _ref.primaryColor, primaryColor = _ref$primaryColor === void 0 ? "currentColor" : _ref$primaryColor, secondaryColor = _ref.secondaryColor, size = _ref.size, testId = _ref.testId, label = _ref.label, width = _ref.width, height = _ref.height, UNSAFE_margin = _ref.UNSAFE_margin;
      var glyphProps = dangerouslySetGlyph ? {
        dangerouslySetInnerHTML: {
          __html: dangerouslySetGlyph
        }
      } : {
        children: Glyph ? React.createElement(Glyph, {
          role: "presentation"
        }) : null
      };
      var customDimensions = width && height ? {
        width: width + "px",
        height: height + "px"
      } : null;
      return React.createElement("span", _extends({
        "data-testid": testId,
        "data-vc": "icon-".concat(testId),
        role: label ? "img" : void 0,
        "aria-label": label ? label : void 0,
        "aria-hidden": label ? void 0 : true,
        style: _objectSpread(_objectSpread({}, customDimensions), {}, {
          "--icon-primary-color": primaryColor,
          // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values -- Ignored via go/DSP-18766
          "--icon-secondary-color": secondaryColor,
          // eslint-disable-next-line @atlaskit/ui-styling-standard/no-imported-style-values -- Ignored via go/DSP-18766
          margin: UNSAFE_margin
        })
      }, glyphProps, {
        className: ax(["_1e0c1o8l _1o9zidpf _vyfuvuon _vwz4kb7n _1szv15vq _1tly15vq _rzyw1osq _17jb1osq _1ksvoz0e _3se1x1jp _re2rglyw _1veoyfq0 _1kg81r31", "_jcxd1r8n _gq0g1onz _1trkwc43", primaryColor === secondaryColor && "_18hbwc43", secondaryColor === "transparent" && "_4fyi1j28", size && sizeStyles[size]])
      }));
    });
    icon_default = Icon;
  }
});

// node_modules/@atlaskit/icon/dist/esm/components/icon-facade.js
var import_react2, _excluded, sizeSpacingMap, IconFacade;
var init_icon_facade = __esm({
  "node_modules/@atlaskit/icon/dist/esm/components/icon-facade.js"() {
    init_extends();
    init_objectWithoutProperties();
    import_react2 = __toESM(require_react());
    init_esm();
    init_icon();
    _excluded = ["dangerouslySetGlyph", "size"];
    sizeSpacingMap = {
      utility: {
        small: "compact",
        medium: "spacious"
      },
      core: {
        small: "none",
        medium: "spacious"
      }
    };
    IconFacade = (0, import_react2.memo)(function IconFacade2(_ref) {
      var dangerouslySetGlyph = _ref.dangerouslySetGlyph, size = _ref.size, props = _objectWithoutProperties(_ref, _excluded);
      var NewIcon = props.newIcon;
      var iconSize = size !== null && size !== void 0 ? size : "medium";
      var useNewIcon = !props.isFacadeDisabled && // eslint-disable-next-line @atlaskit/platform/ensure-feature-flag-prefix
      fg("platform-visual-refresh-icons-legacy-facade");
      if (useNewIcon && NewIcon && (iconSize === "small" || iconSize === "medium") && !fg("platform-visual-refresh-icons-facade-removal")) {
        if (props.iconType === "utility") {
          var Icon3 = NewIcon;
          return import_react2.default.createElement(Icon3, _extends({}, props, {
            spacing: fg("platform-visual-refresh-icons-facade-button-fix") ? sizeSpacingMap["utility"][iconSize] : "none",
            color: props.primaryColor || "currentColor",
            type: props.iconType
          }));
        } else {
          var _Icon = NewIcon;
          return import_react2.default.createElement(_Icon, _extends({}, props, {
            size: iconSize,
            spacing: sizeSpacingMap["core"][iconSize],
            color: props.primaryColor || "currentColor",
            type: props.iconType
          }));
        }
      }
      return import_react2.default.createElement(Icon, _extends({
        dangerouslySetGlyph,
        size
      }, props));
    });
  }
});

// node_modules/@atlaskit/icon/dist/esm/entry-points/base.js
var base_exports = {};
__export(base_exports, {
  Icon: () => Icon,
  IconFacade: () => IconFacade,
  default: () => icon_default
});
var init_base = __esm({
  "node_modules/@atlaskit/icon/dist/esm/entry-points/base.js"() {
    init_icon();
    init_icon_facade();
  }
});

export {
  base_exports,
  init_base
};
//# sourceMappingURL=chunk-CBXLYWMJ.js.map
