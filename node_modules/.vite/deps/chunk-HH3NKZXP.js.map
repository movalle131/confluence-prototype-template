{
  "version": 3,
  "sources": ["../../@atlaskit/navigation-system/dist/esm/ui/menu-section/menu-section.js", "../../@atlaskit/navigation-system/dist/esm/ui/menu-section/menu-section-context.js", "../../@atlaskit/navigation-system/dist/esm/ui/menu-section/menu-section-heading.js", "../../@atlaskit/navigation-system/dist/esm/ui/menu-section/divider.js"],
  "sourcesContent": ["import React from 'react';\nimport { useId } from '@atlaskit/ds-lib/use-id';\nimport { MenuListItem } from '../menu-item/menu-list-item';\nimport { MenuSectionContext } from './menu-section-context';\n/**\n * __MenuSection__\n *\n * A composable component for grouping menu items, along with a heading (`MenuSectionHeading`) and a divider (`Divider`).\n *\n * Usage example:\n * ```tsx\n * <MenuSection>\n *   <MenuSectionHeading>Section heading</MenuSectionHeading>\n *   <MenuList>\n *     <MenuItem>Item 1</MenuItem>\n *     <MenuItem>Item 2</MenuItem>\n *   </MenuList>\n *   <Divider />\n * </MenuSection>\n * ```\n */\nexport var MenuSection = function MenuSection(_ref) {\n  var children = _ref.children,\n    testId = _ref.testId,\n    _ref$isMenuListItem = _ref.isMenuListItem,\n    isMenuListItem = _ref$isMenuListItem === void 0 ? false : _ref$isMenuListItem;\n  var id = useId();\n  var content = /*#__PURE__*/React.createElement(MenuSectionContext.Provider, {\n    value: id\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    role: \"group\",\n    \"aria-labelledby\": \"\".concat(id, \"-heading\")\n  }, children));\n  if (isMenuListItem) {\n    return /*#__PURE__*/React.createElement(MenuListItem, {\n      testId: testId\n    }, content);\n  }\n\n  // Legacy. isMenuListItem should become default.\n  return content;\n};", "import { createContext, useContext } from 'react';\nimport invariant from 'tiny-invariant';\n\n/**\n * Context for the current menu section. It holds a unique ID for the section, used for associating the section heading\n * as an accessible label for the group.\n */\nexport var MenuSectionContext = /*#__PURE__*/createContext(null);\nexport var useMenuSectionContext = function useMenuSectionContext() {\n  var context = useContext(MenuSectionContext);\n  invariant(context, 'useMenuSectionContext must be used within a MenuSection');\n  return context;\n};", "/* menu-section-heading.tsx generated by @compiled/babel-plugin v0.36.1 */\nimport \"./menu-section-heading.compiled.css\";\nimport * as React from 'react';\nimport { ax, ix } from \"@compiled/react/runtime\";\nimport { useMenuSectionContext } from './menu-section-context';\nvar styles = {\n  root: \"_11c81vhk _1rjcu2gc _syaz131l _bozg12x7\"\n};\n\n/**\n * __MenuSectionHeading__\n *\n * The label for the menu section group.\n */\nexport var MenuSectionHeading = function MenuSectionHeading(_ref) {\n  var children = _ref.children;\n  var id = useMenuSectionContext();\n  return /*#__PURE__*/React.createElement(\"h2\", {\n    id: \"\".concat(id, \"-heading\"),\n    className: ax([styles.root])\n  }, children);\n};", "/* divider.tsx generated by @compiled/babel-plugin v0.36.1 */\nimport \"./divider.compiled.css\";\nimport * as React from 'react';\nimport { ax, ix } from \"@compiled/react/runtime\";\nvar styles = null;\n\n/**\n * __Divider__\n *\n * A divider for use between menu sections.\n */\nexport var Divider = function Divider() {\n  return /*#__PURE__*/React.createElement(\"hr\", {\n    /**\n     * The existing usage of these dividers is presentational,\n     * so we are removing the separator semantics by default.\n     *\n     * In the future we may consider allowing opt-in separator semantics,\n     * but it probably isn't necessary.\n     */\n    role: \"none\",\n    className: ax([\"_h7alglyw _179rglyw _mqm2pp12 _1bsb1osq\"]),\n    style: {\n      \"--_18x9sjc\": ix(\"1px solid \".concat(\"var(--ds-border, #091E4224)\"))\n    }\n  });\n};"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;AAAA,IAAAA,gBAAkB;;;ACAlB,mBAA0C;AAOnC,IAAI,yBAAkC,4BAAc,IAAI;AACxD,IAAI,wBAAwB,SAASC,yBAAwB;AAClE,MAAI,cAAU,yBAAW,kBAAkB;AAC3C,YAAU,SAAS,yDAAyD;AAC5E,SAAO;AACT;;;ADSO,IAAI,cAAc,SAASC,aAAY,MAAM;AAClD,MAAI,WAAW,KAAK,UAClB,SAAS,KAAK,QACd,sBAAsB,KAAK,gBAC3B,iBAAiB,wBAAwB,SAAS,QAAQ;AAC5D,MAAI,KAAK,MAAM;AACf,MAAI,UAAuB,cAAAC,QAAM,cAAc,mBAAmB,UAAU;AAAA,IAC1E,OAAO;AAAA,EACT,GAAgB,cAAAA,QAAM,cAAc,OAAO;AAAA,IACzC,MAAM;AAAA,IACN,mBAAmB,GAAG,OAAO,IAAI,UAAU;AAAA,EAC7C,GAAG,QAAQ,CAAC;AACZ,MAAI,gBAAgB;AAClB,WAAoB,cAAAA,QAAM,cAAc,cAAc;AAAA,MACpD;AAAA,IACF,GAAG,OAAO;AAAA,EACZ;AAGA,SAAO;AACT;;;AEvCA,IAAAC,SAAuB;AACvB;AAFA,OAAO;AAIP,IAAI,SAAS;AAAA,EACX,MAAM;AACR;AAOO,IAAI,qBAAqB,SAASC,oBAAmB,MAAM;AAChE,MAAI,WAAW,KAAK;AACpB,MAAI,KAAK,sBAAsB;AAC/B,SAA0B,qBAAc,MAAM;AAAA,IAC5C,IAAI,GAAG,OAAO,IAAI,UAAU;AAAA,IAC5B,WAAW,GAAG,CAAC,OAAO,IAAI,CAAC;AAAA,EAC7B,GAAG,QAAQ;AACb;;;ACnBA,IAAAC,SAAuB;AACvB;AAFA,OAAO;AAUA,IAAI,UAAU,SAASC,WAAU;AACtC,SAA0B,qBAAc,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAQ5C,MAAM;AAAA,IACN,WAAW,GAAG,CAAC,yCAAyC,CAAC;AAAA,IACzD,OAAO;AAAA,MACL,cAAc,uBAAG,aAAa,OAAO,6BAA6B,CAAC;AAAA,IACrE;AAAA,EACF,CAAC;AACH;",
  "names": ["import_react", "useMenuSectionContext", "MenuSection", "React", "React", "MenuSectionHeading", "React", "Divider"]
}
