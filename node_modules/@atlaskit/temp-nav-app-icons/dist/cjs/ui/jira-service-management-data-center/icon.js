"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.JiraServiceManagementDataCenterIcon = JiraServiceManagementDataCenterIcon;
var _react = _interopRequireDefault(require("react"));
var _iconWrapper = require("../../utils/icon-wrapper");
/**
 * THIS FILE WAS CREATED VIA CODEGEN DO NOT MODIFY {@see http://go/af-codegen}
 * @codegen <<SignedSource::785b520448be5254a616c00701ca6073>>
 * @codegenCommand yarn workspace @atlaskit/temp-nav-app-icons build-temp-logos
 */

// `height` is set to 100% to allow the SVG to scale with the parent element
var svg = "<svg height=\"100%\" viewBox=\"0 0 25 24\">\n    <path fill=\"var(--tile-color, white)\" d=\"M6.417.5h12a5.5 5.5 0 0 1 5.5 5.5v12a5.5 5.5 0 0 1-5.5 5.5h-12a5.5 5.5 0 0 1-5.5-5.5V6a5.5 5.5 0 0 1 5.5-5.5\"/>\n    <path fill=\"none\" stroke=\"var(--border-color, #dddee1)\" d=\"M6.417.5h12a5.5 5.5 0 0 1 5.5 5.5v12a5.5 5.5 0 0 1-5.5 5.5h-12a5.5 5.5 0 0 1-5.5-5.5V6a5.5 5.5 0 0 1 5.5-5.5Z\"/>\n    <path fill=\"var(--icon-color, #1868db)\" d=\"M14.117 10.203h4.464c.67 0 .899.637.49 1.144l-6.98 8.616c-2.257-1.798-2.044-4.643-.393-6.72zm-3.45 3.433H6.205c-.67 0-.899-.638-.49-1.144l6.981-8.617c2.256 1.799 2.011 4.61.376 6.704z\"/>\n</svg>\n";

/**
 * __JiraServiceManagementDataCenterIcon__
 *
 * A temporary component to represent the icon for Jira Service Management Data Center.
 * @deprecated This component has been replaced by the component `JiraServiceManagementDataCenterIcon` in `@atlaskit/logo`.
 * Please migrate any usages of this temporary component, using the prop `shouldUseNewLogoDesign` where necessary
 * to enable the new design by default.
 *
 */
function JiraServiceManagementDataCenterIcon(_ref) {
  var size = _ref.size,
    _ref$appearance = _ref.appearance,
    appearance = _ref$appearance === void 0 ? 'brand' : _ref$appearance,
    _ref$label = _ref.label,
    label = _ref$label === void 0 ? 'Jira Service Management Data Center' : _ref$label,
    testId = _ref.testId;
  return /*#__PURE__*/_react.default.createElement(_iconWrapper.IconWrapper, {
    svg: svg,
    label: label,
    isDataCenter: true,
    appearance: appearance,
    size: size,
    testId: testId
  });
}