"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CrowdIcon = CrowdIcon;
var _react = _interopRequireDefault(require("react"));
var _iconWrapper = require("../../utils/icon-wrapper");
/**
 * THIS FILE WAS CREATED VIA CODEGEN DO NOT MODIFY {@see http://go/af-codegen}
 * @codegen <<SignedSource::737475caba8467007ea15db78e7ae272>>
 * @codegenCommand yarn workspace @atlaskit/temp-nav-app-icons build-temp-logos
 */

// `height` is set to 100% to allow the SVG to scale with the parent element
var svg = "<svg height=\"100%\" viewBox=\"0 0 24 24\">\n    <path fill=\"var(--tile-color, white)\" d=\"M6 .5h12A5.5 5.5 0 0 1 23.5 6v12a5.5 5.5 0 0 1-5.5 5.5H6A5.5 5.5 0 0 1 .5 18V6A5.5 5.5 0 0 1 6 .5\"/>\n    <path fill=\"none\" stroke=\"var(--border-color, #dddee1)\" d=\"M6 .5h12A5.5 5.5 0 0 1 23.5 6v12a5.5 5.5 0 0 1-5.5 5.5H6A5.5 5.5 0 0 1 .5 18V6A5.5 5.5 0 0 1 6 .5Z\"/>\n    <path fill=\"var(--icon-color, #1868db)\" d=\"M18.71 7.463 12 4.993l-6.71 2.47a.44.44 0 0 0-.29.433l.14 3.807c.103 3.148 1.684 5.489 4.163 7.018a.446.446 0 0 0 .646-.204l1.445-3.412a.22.22 0 0 0-.14-.298 2.585 2.585 0 1 1 1.492 0 .22.22 0 0 0-.14.298l1.446 3.412a.446.446 0 0 0 .645.204c2.48-1.529 4.06-3.87 4.163-7.018L19 7.896a.44.44 0 0 0-.29-.433\"/>\n</svg>\n";

/**
 * __CrowdIcon__
 *
 * A temporary component to represent the icon for Crowd.
 * @deprecated This component has been replaced by the component `CrowdIcon` in `@atlaskit/logo`.
 * Please migrate any usages of this temporary component, using the prop `shouldUseNewLogoDesign` where necessary
 * to enable the new design by default.
 *
 */
function CrowdIcon(_ref) {
  var size = _ref.size,
    _ref$appearance = _ref.appearance,
    appearance = _ref$appearance === void 0 ? 'brand' : _ref$appearance,
    _ref$label = _ref.label,
    label = _ref$label === void 0 ? 'Crowd' : _ref$label,
    testId = _ref.testId;
  return /*#__PURE__*/_react.default.createElement(_iconWrapper.IconWrapper, {
    svg: svg,
    label: label,
    isDataCenter: true,
    appearance: appearance,
    size: size,
    testId: testId
  });
}