"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.JiraWorkManagementIcon = void 0;
var _react = _interopRequireDefault(require("react"));
var _useId = require("@atlaskit/ds-lib/use-id");
var _tokens = require("@atlaskit/tokens");
var _constants = require("../../constants");
var _wrapper = _interopRequireDefault(require("../../wrapper"));
var _utils = require("../utils");
var svg = function svg(_ref, colorMode, id) {
  var appearance = _ref.appearance,
    iconColor = _ref.iconColor;
  var colors = {
    iconGradientStart: _constants.legacyDefaultLogoParams.iconGradientStart,
    iconGradientStop: _constants.legacyDefaultLogoParams.iconGradientStart,
    iconColor: iconColor
  };
  if (appearance) {
    colors = (0, _utils.getColorsFromAppearanceOldLogos)(appearance, colorMode);
  }
  return "\n    <svg\n      fill=\"none\"\n      height=\"32\"\n      viewBox=\"0 0 32 32\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <linearGradient\n        id=\"".concat(id, "\"\n        gradientUnits=\"userSpaceOnUse\"\n        x1=\"13.9485\"\n        x2=\"20.7792\"\n        y1=\"20.2388\"\n        y2=\"11.8277\"\n      >\n        <stop offset=\"0\" stop-color=\"").concat(colors.iconGradientStart, "\" ").concat(colors.iconGradientStart === 'inherit' ? 'stop-opacity="0.4"' : '', " />\n        <stop offset=\"100%\" stop-color=\"").concat(colors.iconGradientStop, "\" />\n      </linearGradient>\n      <path\n        d=\"m18.3893 7-3.4257 13.1867c4.3592 1.2052 7.8383-.3558 9.1709-5.4802l1.9988-7.6973z\"\n        fill=\"url(#").concat(id, ")\"\n      />\n      <path\n      fill=\"").concat(colors.iconColor, "\"\n      d=\"m13.7566 24.8265 3.4257-13.1866c-4.3623-1.196-7.8383.3649-9.17087 5.4985l-2.01143 7.6881z\"\n      />\n    </svg>");
};

// eslint-disable-next-line @repo/internal/deprecations/deprecation-ticket-required
/**
 * __Jira Work Management icon__
 *
 * The Jira Work Management icon without an accompanying wordmark.
 *
 * - [Examples](https://atlassian.design/components/logo/examples)
 * - [Code](https://atlassian.design/components/logo/code)
 * - [Usage](https://atlassian.design/components/logo/usage)
 *
 * @deprecated JiraWorkManagementIcon is deprecated and will be removed from atlaskit/logo in the next major release. Please use JiraIcon.
 */
var JiraWorkManagementIcon = exports.JiraWorkManagementIcon = function JiraWorkManagementIcon(_ref2) {
  var appearance = _ref2.appearance,
    _ref2$label = _ref2.label,
    label = _ref2$label === void 0 ? 'Jira Work Management' : _ref2$label,
    _ref2$size = _ref2.size,
    size = _ref2$size === void 0 ? _constants.defaultLogoParams.size : _ref2$size,
    testId = _ref2.testId,
    _ref2$iconColor = _ref2.iconColor,
    iconColor = _ref2$iconColor === void 0 ? _constants.defaultLogoParams.iconColor : _ref2$iconColor,
    _ref2$textColor = _ref2.textColor,
    textColor = _ref2$textColor === void 0 ? _constants.defaultLogoParams.textColor : _ref2$textColor;
  var _useThemeObserver = (0, _tokens.useThemeObserver)(),
    colorMode = _useThemeObserver.colorMode;
  var id = (0, _useId.useId)();
  return /*#__PURE__*/_react.default.createElement(_wrapper.default, {
    appearance: appearance,
    label: label,
    svg: svg({
      appearance: appearance,
      iconColor: iconColor
    }, colorMode, id),
    iconColor: iconColor,
    size: size,
    testId: testId,
    textColor: textColor
  });
};