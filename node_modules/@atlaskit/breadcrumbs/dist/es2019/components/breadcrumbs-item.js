/* breadcrumbs-item.tsx generated by @compiled/babel-plugin v0.36.1 */
import _extends from "@babel/runtime/helpers/extends";
import "./breadcrumbs-item.compiled.css";
import * as React from 'react';
import { ax, ix } from "@compiled/react/runtime";
import { memo, useRef } from 'react';
import { fg } from '@atlaskit/platform-feature-flags';
import Tooltip from '@atlaskit/tooltip';
import Step from './internal/step';
import StepOld from './internal/step-old';
import useOverflowable from './internal/use-overflowable';
const itemWrapperStyles = null;
const VAR_STEP_TRUNCATION_WIDTH = '--max-width';
const ICON_WIDTH_ESTIMATE = 24;
const staticItemStyles = null;
const staticItemWithTruncationStyles = null;
const staticItemWithoutTruncationStyles = null;
const BreadcrumbsItem = /*#__PURE__*/memo(({
  analyticsContext,
  component,
  // `createAnalyticsEvent` should be here, but throws errors on render since
  // it ends up being spread on a DOM element at the very end
  href,
  iconAfter,
  iconBefore,
  onClick,
  onTooltipShown,
  // This is overridden by the `buttonRef` below
  ref,
  target,
  testId,
  text,
  truncationWidth,
  // I believe there is only `createAnalyticsEvent` left on here, but leaving
  // it here to allow this to be a patch and not a major
  ...rest
}) => {
  const stepTextRef = useRef(null);

  // If icons are provided we include their width in the truncation calculation to ensure we're as accurate as possible.
  // Note: this assumes icons are 24px wide which should be almost always.
  // Not really an issue if the icons are smaller, just that truncation occurs slightly earlier than you may want.
  let iconWidthAllowance = 0;
  if (iconBefore) {
    iconWidthAllowance += ICON_WIDTH_ESTIMATE;
  }
  if (iconAfter) {
    iconWidthAllowance += ICON_WIDTH_ESTIMATE;
  }
  const [hasOverflow, showTooltip] = useOverflowable(truncationWidth, stepTextRef.current, iconWidthAllowance);

  // This should be a part of staticItemStyles but it requires the !important flag to prevent the padding from being overridden by the button styles
  // compiled treats `${token(xxx)} !important` differently when concat !important in es2019 and esm built files
  // the padding and font weight were not sourced correctly in the esm build
  const buttonOverrideStyles = {
    paddingBlock: "var(--ds-space-025, 2px)",
    fontWeight: "var(--ds-font-weight-regular, 400)"
  };

  // Note: cast to `any` is required to type verification - see https://github.com/frenic/csstype#what-should-i-do-when-i-get-type-errors
  const dynamicItemStyles = {
    [VAR_STEP_TRUNCATION_WIDTH]: typeof truncationWidth !== 'undefined' && `${truncationWidth}px`
  };
  const step = !component && fg('platform_dst_breadcrumbs_step_conversion') ? /*#__PURE__*/React.createElement(Step, {
    ref: stepTextRef,
    analyticsContext: analyticsContext,
    href: href,
    iconAfter: iconAfter,
    iconBefore: iconBefore,
    onClick: onClick,
    target: target,
    testId: testId,
    truncationWidth: truncationWidth
  }, text) : /*#__PURE__*/React.createElement(StepOld, _extends({}, rest, {
    analyticsContext: analyticsContext,
    component: component,
    hasOverflow: hasOverflow,
    href: href,
    iconAfter: iconAfter,
    iconBefore: iconBefore,
    onClick: onClick,
    ref: stepTextRef,
    target: target,
    testId: testId,
    // eslint-disable-next-line @atlaskit/ui-styling-standard/enforce-style-prop -- Ignored via go/DSP-18766
    style: truncationWidth ? {
      ...dynamicItemStyles,
      ...buttonOverrideStyles
    } : buttonOverrideStyles,
    className: ax(["_vwz41txs", truncationWidth ? "_p12f8zc4" : "_1ul9grf3 _1o9zzg3v"])
  }), text);
  return /*#__PURE__*/React.createElement("li", {
    className: ax(["_1e0c1txw _vchhusvi _p12f1osq _4t3iubh0 _2lx2vrvc _ect41gqc _6rthze3t _1pfhze3t _12l2ze3t _ahbqze3t _85i5ze3t _1q51ze3t _y4tize3t _bozgze3t _5nddv77o _1j1pu2gc _1dsoftgi _toskidpf _15621n76 _191d1h6o"])
  }, showTooltip ? /*#__PURE__*/React.createElement(Tooltip, {
    content: text,
    position: "bottom",
    onShow: onTooltipShown
  }, step) : step);
});

// eslint-disable-next-line @repo/internal/react/require-jsdoc
export default BreadcrumbsItem;