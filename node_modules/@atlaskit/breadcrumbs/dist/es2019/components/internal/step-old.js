import _extends from "@babel/runtime/helpers/extends";
import React from 'react';
import { usePlatformLeafEventHandler } from '@atlaskit/analytics-next/usePlatformLeafEventHandler';
import Button from '@atlaskit/button/standard-button';
import __noop from '@atlaskit/ds-lib/noop';
const analyticsAttributes = {
  componentName: 'breadcrumbsItem',
  packageName: "@atlaskit/breadcrumbs",
  packageVersion: "15.2.2"
};
const noop = __noop;

/**
 * __Step__
 *
 * A button that represents a single step in a breadcrumbs component.
 */
const StepOld = /*#__PURE__*/React.forwardRef(({
  analyticsContext,
  component,
  hasOverflow = true,
  href = '#',
  iconAfter,
  iconBefore,
  onClick: onClickProvided = noop,
  target,
  testId,
  // Button does not take `createAnalyticsEvent`, but it is spread on anyway
  ...props
}, ref) => {
  const handleClicked = usePlatformLeafEventHandler({
    fn: onClickProvided,
    action: 'clicked',
    analyticsData: analyticsContext,
    ...analyticsAttributes
  });
  return /*#__PURE__*/React.createElement(Button, _extends({}, props, {
    appearance: "subtle-link",
    component: component,
    href: href,
    iconAfter: hasOverflow ? undefined : iconAfter,
    iconBefore: hasOverflow ? undefined : iconBefore,
    onClick: handleClicked,
    ref: ref,
    spacing: "none",
    target: target,
    testId: testId
  }));
});
export default StepOld;