/* list.tsx generated by @compiled/babel-plugin v0.36.1 */
"use strict";

var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.List = void 0;
var _react = _interopRequireWildcard(require("react"));
var React = _react;
var _runtime = require("@compiled/react/runtime");
function _interopRequireWildcard(e, t) { if ("function" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function _interopRequireWildcard(e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || "object" != _typeof(e) && "function" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (var _t in e) "default" !== _t && {}.hasOwnProperty.call(e, _t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t)) && (i.get || i.set) ? o(f, _t, i) : f[_t] = e[_t]); return f; })(e, t); }
function _List(_ref, forwardedRef) {
  var children = _ref.children,
    testId = _ref.testId,
    xcss = _ref.xcss;
  return (
    /*#__PURE__*/
    /**
     * We are using `role="list"` instead of a `ul` element to enable more flexible
     * composition. By using ARIA roles we can validly have elements between a list
     * and list items, as long as those in-between elements have no semantics.
     */
    React.createElement("div", {
      role: "list",
      ref: forwardedRef,
      className: xcss,
      "data-testid": testId
    }, children)
  );
}

/**
 * __List__
 *
 * A an element with the role of `list` for semantically grouping list items.
 *
 * This is the internal primitive used by other external components in the navigation system.
 */
var List = exports.List = /*#__PURE__*/(0, _react.forwardRef)(_List);