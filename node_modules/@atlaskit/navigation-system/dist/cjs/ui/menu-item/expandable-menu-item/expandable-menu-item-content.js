/* expandable-menu-item-content.tsx generated by @compiled/babel-plugin v0.36.1 */
"use strict";

var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ExpandableMenuItemContent = void 0;
require("./expandable-menu-item-content.compiled.css");
var _react = _interopRequireWildcard(require("react"));
var React = _react;
var _runtime = require("@compiled/react/runtime");
var _react2 = require("@compiled/react");
var _list = require("../../../components/list");
var _constants = require("../constants");
var _expandableMenuItemContext = require("./expandable-menu-item-context");
function _interopRequireWildcard(e, t) { if ("function" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function _interopRequireWildcard(e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || "object" != _typeof(e) && "function" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (var _t in e) "default" !== _t && {}.hasOwnProperty.call(e, _t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t)) && (i.get || i.set) ? o(f, _t, i) : f[_t] = e[_t]); return f; })(e, t); }
var styles = {
  content: "_bozg1crf",
  collapsedContent: "_1e0cglyw"
};
/**
 * __ExpandableMenuItemContent__
 *
 * The expandable and collapsable section of the expandable menu item. It should contain the nested menu items.
 */
var ExpandableMenuItemContent = exports.ExpandableMenuItemContent = /*#__PURE__*/(0, _react.forwardRef)(function (_ref, forwardedRef) {
  var children = _ref.children;
  var isExpanded = (0, _expandableMenuItemContext.useIsExpanded)();
  var level = (0, _expandableMenuItemContext.useLevel)();
  var hasExpanded = (0, _react.useRef)(false);
  var areAllAncestorsExpanded = (0, _expandableMenuItemContext.useAreAllAncestorsExpanded)();
  if (!isExpanded && !hasExpanded.current) {
    return null;
  }
  hasExpanded.current = true;
  return /*#__PURE__*/React.createElement(_expandableMenuItemContext.LevelContext.Provider, {
    value: level + 1
  }, /*#__PURE__*/React.createElement(_expandableMenuItemContext.AreAllAncestorsExpandedContext.Provider, {
    value:
    /**
     * By combining the current ancestor and with the current menu item's state, all nested menu items will know if their
     * ancestor menu items are all expanded.
     */
    areAllAncestorsExpanded && isExpanded
  }, /*#__PURE__*/React.createElement(_list.List, {
    ref: forwardedRef,
    xcss: (0, _react2.cx)(styles.content, !isExpanded && styles.collapsedContent)
  }, children)));
});