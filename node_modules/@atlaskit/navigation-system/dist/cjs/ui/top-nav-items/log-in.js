"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.LogIn = void 0;
var _react = _interopRequireWildcard(require("react"));
var _logIn = _interopRequireDefault(require("@atlaskit/icon/core/log-in"));
var _listItem = require("../../components/list-item");
var _migration = require("./themed/migration");
function _interopRequireWildcard(e, t) { if ("function" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function _interopRequireWildcard(e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || "object" != _typeof(e) && "function" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (var _t in e) "default" !== _t && {}.hasOwnProperty.call(e, _t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t)) && (i.get || i.set) ? o(f, _t, i) : f[_t] = e[_t]); return f; })(e, t); }
/**
 * __Log in__
 *
 * The Log in button for the top navigation.
 */
var LogIn = exports.LogIn = /*#__PURE__*/(0, _react.forwardRef)(function (_ref, ref) {
  var onClick = _ref.onClick,
    onMouseEnter = _ref.onMouseEnter,
    testId = _ref.testId,
    interactionName = _ref.interactionName,
    href = _ref.href,
    label = _ref.label;
  return (
    /*#__PURE__*/
    /**
     * This component doesn't use `EndItem` internally because it renders a
     * `LinkIconButton` instead of an `IconButton`.
     *
     * We could make another abstraction, but this is the only top navigation item
     * that renders a link.
     */
    _react.default.createElement(_listItem.ListItem, null, /*#__PURE__*/_react.default.createElement(_migration.LinkIconButton, {
      ref: ref,
      label: label,
      href: href,
      onClick: onClick,
      onMouseEnter: onMouseEnter,
      testId: testId,
      interactionName: interactionName,
      icon: _logIn.default,
      appearance: "subtle",
      isTooltipDisabled: false
    }))
  );
});