"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.LinkIconButton = exports.LinkButton = exports.IconButton = exports.Button = void 0;
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _react = _interopRequireWildcard(require("react"));
var _new = _interopRequireWildcard(require("@atlaskit/button/new"));
var _button = require("./button");
var _hasCustomThemeContext = require("./has-custom-theme-context");
function _interopRequireWildcard(e, t) { if ("function" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function _interopRequireWildcard(e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || "object" != _typeof(e) && "function" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (var _t in e) "default" !== _t && {}.hasOwnProperty.call(e, _t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t)) && (i.get || i.set) ? o(f, _t, i) : f[_t] = e[_t]); return f; })(e, t); }
// Explicitly typed to use only the themed button API,
// which is a subset of the normal button API
var IconButton = exports.IconButton = /*#__PURE__*/(0, _react.forwardRef)(function (props, ref) {
  var hasCustomTheme = (0, _hasCustomThemeContext.useHasCustomTheme)();
  var Component = hasCustomTheme ? _button.ThemedIconButton : _new.IconButton;
  return /*#__PURE__*/_react.default.createElement(Component, (0, _extends2.default)({
    ref: ref
  }, props));
});

// Explicitly typed to use only the themed button API,
// which is a subset of the normal button API
var LinkIconButton = exports.LinkIconButton = /*#__PURE__*/(0, _react.forwardRef)(function (props, ref) {
  var hasCustomTheme = (0, _hasCustomThemeContext.useHasCustomTheme)();
  var Component = hasCustomTheme ? _button.ThemedLinkIconButton : _new.LinkIconButton;
  return /*#__PURE__*/_react.default.createElement(Component, (0, _extends2.default)({
    ref: ref
  }, props));
});

// Explicitly typed to use only the themed button API,
// which is a subset of the normal button API
var Button = exports.Button = /*#__PURE__*/(0, _react.forwardRef)(function (props, ref) {
  var hasCustomTheme = (0, _hasCustomThemeContext.useHasCustomTheme)();
  var Component = hasCustomTheme ? _button.ThemedButton : _new.default;
  return /*#__PURE__*/_react.default.createElement(Component, (0, _extends2.default)({
    ref: ref
  }, props));
});

// Explicitly typed to use only the themed button API,
// which is a subset of the normal button API
var LinkButton = exports.LinkButton = /*#__PURE__*/(0, _react.forwardRef)(function (props, ref) {
  var hasCustomTheme = (0, _hasCustomThemeContext.useHasCustomTheme)();
  var Component = hasCustomTheme ? _button.ThemedLinkButton : _new.LinkButton;
  return /*#__PURE__*/_react.default.createElement(Component, (0, _extends2.default)({
    ref: ref
  }, props));
});