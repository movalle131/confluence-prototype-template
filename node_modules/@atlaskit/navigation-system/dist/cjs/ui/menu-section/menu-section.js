"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.MenuSection = void 0;
var _react = _interopRequireDefault(require("react"));
var _useId = require("@atlaskit/ds-lib/use-id");
var _menuListItem = require("../menu-item/menu-list-item");
var _menuSectionContext = require("./menu-section-context");
/**
 * __MenuSection__
 *
 * A composable component for grouping menu items, along with a heading (`MenuSectionHeading`) and a divider (`Divider`).
 *
 * Usage example:
 * ```tsx
 * <MenuSection>
 *   <MenuSectionHeading>Section heading</MenuSectionHeading>
 *   <MenuList>
 *     <MenuItem>Item 1</MenuItem>
 *     <MenuItem>Item 2</MenuItem>
 *   </MenuList>
 *   <Divider />
 * </MenuSection>
 * ```
 */
var MenuSection = exports.MenuSection = function MenuSection(_ref) {
  var children = _ref.children,
    testId = _ref.testId,
    _ref$isMenuListItem = _ref.isMenuListItem,
    isMenuListItem = _ref$isMenuListItem === void 0 ? false : _ref$isMenuListItem;
  var id = (0, _useId.useId)();
  var content = /*#__PURE__*/_react.default.createElement(_menuSectionContext.MenuSectionContext.Provider, {
    value: id
  }, /*#__PURE__*/_react.default.createElement("div", {
    role: "group",
    "aria-labelledby": "".concat(id, "-heading")
  }, children));
  if (isMenuListItem) {
    return /*#__PURE__*/_react.default.createElement(_menuListItem.MenuListItem, {
      testId: testId
    }, content);
  }

  // Legacy. isMenuListItem should become default.
  return content;
};