"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useSortedSkipLinks = exports.SkipLinksDataContext = void 0;
var _toConsumableArray2 = _interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray"));
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _react = require("react");
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
/**
 * Provides a way to store skip links
 */
var SkipLinksDataContext = exports.SkipLinksDataContext = /*#__PURE__*/(0, _react.createContext)([]);
var _assignIndex = function assignIndex(num, arr) {
  if (!arr.includes(num)) {
    return num;
  }
  return _assignIndex(num + 1, arr);
};
var sortSkipLinks = function sortSkipLinks(arr) {
  var customLinks = arr.filter(function (link) {
    return Number.isInteger(link.listIndex);
  });
  if (customLinks.length === 0) {
    return arr;
  }
  var usedIndexes = customLinks.map(function (a) {
    return a.listIndex;
  });
  var regularLinksWithIdx = arr.filter(function (link) {
    return link.listIndex === undefined;
  }).map(function (link, idx) {
    var listIndex = _assignIndex(idx, usedIndexes);
    usedIndexes.push(listIndex);
    return _objectSpread(_objectSpread({}, link), {}, {
      listIndex: listIndex
    });
  });
  return [].concat((0, _toConsumableArray2.default)(customLinks), (0, _toConsumableArray2.default)(regularLinksWithIdx)).sort(function (a, b) {
    return a.listIndex - b.listIndex;
  });
};
var useSortedSkipLinks = exports.useSortedSkipLinks = function useSortedSkipLinks() {
  var skipLinksData = (0, _react.useContext)(SkipLinksDataContext);
  return (0, _react.useMemo)(function () {
    return sortSkipLinks(skipLinksData);
  }, [skipLinksData]);
};