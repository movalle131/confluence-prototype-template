import type { StrictXCSSProp } from '@atlaskit/css';
import type { CommonSlotProps } from './types';
/**
 * The Panel layout area is rendered to the right (inline end) of the Main area, or the Aside area if it is present.
 *
 * On small viewports (below 64rem, or 1024px), the Panel slot will become an overlay.
 *
 * You can optionally render a `PanelSplitter` as a child to make the panel area resizable.
 */
export declare function Panel({ children, defaultWidth, label, skipLinkLabel, testId, id: providedId, xcss, hasBorder, }: CommonSlotProps & {
    /**
     * The content of the layout area.
     */
    children: React.ReactNode;
    /**
     * The accessible name of the slot, announced by screen readers.
     */
    label?: string;
    /**
     * The default width of the layout area.
     *
     * It should be between the resize bounds - the minimum is 120px and the maximum is 50% of the viewport width.
     *
     * This value is also used as the minimum resizing width, except when the `defaultWidth` is greater then `400px`,
     * in which case `400px` will be used as the minimum resizing width instead.
     */
    defaultWidth?: number;
    /**
     * Bounded style overrides.
     */
    xcss?: StrictXCSSProp<'backgroundColor', never>;
    /**
     * Whether or not the slot has its own border. On small screens this becomes a shadow.
     *
     * Defaults to the `platform_design_system_nav4_panel_default_border` gate.
     * This will be `false` while we update app usage, eventually becoming `true`.
     * Then this prop will be removed.
     */
    hasBorder?: boolean;
}): JSX.Element;
