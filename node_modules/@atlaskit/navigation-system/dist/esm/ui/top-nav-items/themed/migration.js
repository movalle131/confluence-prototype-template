import _extends from "@babel/runtime/helpers/extends";
import React, { forwardRef } from 'react';
import AkButton, { IconButton as AkIconButton, LinkButton as AkLinkButton, LinkIconButton as AkLinkIconButton } from '@atlaskit/button/new';
import { ThemedButton, ThemedIconButton, ThemedLinkButton, ThemedLinkIconButton } from './button';
import { useHasCustomTheme } from './has-custom-theme-context';
// Explicitly typed to use only the themed button API,
// which is a subset of the normal button API
var IconButton = /*#__PURE__*/forwardRef(function (props, ref) {
  var hasCustomTheme = useHasCustomTheme();
  var Component = hasCustomTheme ? ThemedIconButton : AkIconButton;
  return /*#__PURE__*/React.createElement(Component, _extends({
    ref: ref
  }, props));
});

// Explicitly typed to use only the themed button API,
// which is a subset of the normal button API
var LinkIconButton = /*#__PURE__*/forwardRef(function (props, ref) {
  var hasCustomTheme = useHasCustomTheme();
  var Component = hasCustomTheme ? ThemedLinkIconButton : AkLinkIconButton;
  return /*#__PURE__*/React.createElement(Component, _extends({
    ref: ref
  }, props));
});

// Explicitly typed to use only the themed button API,
// which is a subset of the normal button API
var Button = /*#__PURE__*/forwardRef(function (props, ref) {
  var hasCustomTheme = useHasCustomTheme();
  var Component = hasCustomTheme ? ThemedButton : AkButton;
  return /*#__PURE__*/React.createElement(Component, _extends({
    ref: ref
  }, props));
});

// Explicitly typed to use only the themed button API,
// which is a subset of the normal button API
var LinkButton = /*#__PURE__*/forwardRef(function (props, ref) {
  var hasCustomTheme = useHasCustomTheme();
  var Component = hasCustomTheme ? ThemedLinkButton : AkLinkButton;
  return /*#__PURE__*/React.createElement(Component, _extends({
    ref: ref
  }, props));
});
export { IconButton, Button, LinkIconButton, LinkButton };