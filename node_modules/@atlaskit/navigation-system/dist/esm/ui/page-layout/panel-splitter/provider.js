import React, { Fragment, useMemo, useRef } from 'react';
import { PanelSplitterContext } from './context';
/**
 * Provides the context required for the panel splitter to work within a page layout slot.
 *
 * Should be used in the layout area components, e.g. SideNav, Aside etc, as opposed to products.
 */
export var PanelSplitterProvider = function PanelSplitterProvider(_ref) {
  var panelId = _ref.panelId,
    panelWidth = _ref.panelWidth,
    onCompleteResize = _ref.onCompleteResize,
    getResizeBounds = _ref.getResizeBounds,
    resizingCssVar = _ref.resizingCssVar,
    panelRef = _ref.panelRef,
    _ref$position = _ref.position,
    position = _ref$position === void 0 ? 'end' : _ref$position,
    _ref$isEnabled = _ref.isEnabled,
    isEnabled = _ref$isEnabled === void 0 ? true : _ref$isEnabled,
    children = _ref.children;
  var portalRef = useRef(null);
  var context = useMemo(function () {
    return {
      panelId: panelId,
      panelWidth: panelWidth,
      onCompleteResize: onCompleteResize,
      getResizeBounds: getResizeBounds,
      resizingCssVar: resizingCssVar,
      position: position,
      panelRef: panelRef,
      isEnabled: isEnabled,
      portalRef: portalRef
    };
  }, [panelId, panelWidth, onCompleteResize, getResizeBounds, resizingCssVar, position, portalRef, panelRef, isEnabled]);
  return /*#__PURE__*/React.createElement(Fragment, null, /*#__PURE__*/React.createElement(PanelSplitterContext.Provider, {
    value: context
  }, children), /*#__PURE__*/React.createElement("div", {
    ref: portalRef
  }));
};