import { createContext, useContext } from 'react';
import invariant from 'tiny-invariant';
import { ExpandableMenuItemLevelContext } from './expandable-menu-item-level-context';
/**
 * Whether all ancestor menu items of the current menu item are expanded. Used to know if the current menu item is
 * shown within the menu item tree.
 */
export var AreAllAncestorsExpandedContext = /*#__PURE__*/createContext(null);

/**
 * A context for storing the isExpanded value of the ExpandableMenuItem.
 */
export var IsExpandedContext = /*#__PURE__*/createContext(null);

/**
 * A context for storing a function that sets isExpanded value of the ExpandableMenuItem.
 */
export var SetIsExpandedContext = /*#__PURE__*/createContext(null);

/**
 * A context for storing a function that triggers when isExpanded value of the ExpandableMenuItem is changed.
 */
export var OnExpansionToggleContext = /*#__PURE__*/createContext(null);

/**
 * A context for storing the level value of the ExpandableMenuItem.
 */
export var LevelContext = ExpandableMenuItemLevelContext;
export var useIsExpanded = function useIsExpanded() {
  var context = useContext(IsExpandedContext);
  invariant(context !== null, 'useIsExpanded must be used within an ExpandableMenuItem');
  return context;
};
export var useSetIsExpanded = function useSetIsExpanded() {
  var context = useContext(SetIsExpandedContext);
  invariant(context !== null, 'useSetIsExpanded must be used within an ExpandableMenuItem');
  return context;
};
export var useOnExpansionToggle = function useOnExpansionToggle() {
  return useContext(OnExpansionToggleContext);
};
export var useLevel = function useLevel() {
  return useContext(LevelContext);
};

/**
 * Whether all ancestor menu items of the current menu item are expanded. Used to know if the current menu item is
 * shown within the menu item tree.
 *
 * It works by combining (using &&) all the expansion states of the current menu item's ancestors.
 *
 * Using `true` as the fallback for cases when the menu item does not have ancestors.
 */
export var useAreAllAncestorsExpanded = function useAreAllAncestorsExpanded() {
  var _useContext;
  return (_useContext = useContext(AreAllAncestorsExpandedContext)) !== null && _useContext !== void 0 ? _useContext : true;
};