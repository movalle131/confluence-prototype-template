import { createContext, useContext, useMemo } from 'react';
/**
 * Provides a way to store skip links
 */
export const SkipLinksDataContext = /*#__PURE__*/createContext([]);
const assignIndex = (num, arr) => {
  if (!arr.includes(num)) {
    return num;
  }
  return assignIndex(num + 1, arr);
};
const sortSkipLinks = arr => {
  const customLinks = arr.filter(link => Number.isInteger(link.listIndex));
  if (customLinks.length === 0) {
    return arr;
  }
  const usedIndexes = customLinks.map(a => a.listIndex);
  const regularLinksWithIdx = arr.filter(link => link.listIndex === undefined).map((link, idx) => {
    const listIndex = assignIndex(idx, usedIndexes);
    usedIndexes.push(listIndex);
    return {
      ...link,
      listIndex
    };
  });
  return [...customLinks, ...regularLinksWithIdx].sort((a, b) => a.listIndex - b.listIndex);
};
export const useSortedSkipLinks = () => {
  const skipLinksData = useContext(SkipLinksDataContext);
  return useMemo(() => {
    return sortSkipLinks(skipLinksData);
  }, [skipLinksData]);
};