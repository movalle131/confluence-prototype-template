import _extends from "@babel/runtime/helpers/extends";
import React, { forwardRef } from 'react';
import AkButton, { IconButton as AkIconButton, LinkButton as AkLinkButton, LinkIconButton as AkLinkIconButton } from '@atlaskit/button/new';
import { ThemedButton, ThemedIconButton, ThemedLinkButton, ThemedLinkIconButton } from './button';
import { useHasCustomTheme } from './has-custom-theme-context';
// Explicitly typed to use only the themed button API,
// which is a subset of the normal button API
const IconButton = /*#__PURE__*/forwardRef((props, ref) => {
  const hasCustomTheme = useHasCustomTheme();
  const Component = hasCustomTheme ? ThemedIconButton : AkIconButton;
  return /*#__PURE__*/React.createElement(Component, _extends({
    ref: ref
  }, props));
});

// Explicitly typed to use only the themed button API,
// which is a subset of the normal button API
const LinkIconButton = /*#__PURE__*/forwardRef((props, ref) => {
  const hasCustomTheme = useHasCustomTheme();
  const Component = hasCustomTheme ? ThemedLinkIconButton : AkLinkIconButton;
  return /*#__PURE__*/React.createElement(Component, _extends({
    ref: ref
  }, props));
});

// Explicitly typed to use only the themed button API,
// which is a subset of the normal button API
const Button = /*#__PURE__*/forwardRef((props, ref) => {
  const hasCustomTheme = useHasCustomTheme();
  const Component = hasCustomTheme ? ThemedButton : AkButton;
  return /*#__PURE__*/React.createElement(Component, _extends({
    ref: ref
  }, props));
});

// Explicitly typed to use only the themed button API,
// which is a subset of the normal button API
const LinkButton = /*#__PURE__*/forwardRef((props, ref) => {
  const hasCustomTheme = useHasCustomTheme();
  const Component = hasCustomTheme ? ThemedLinkButton : AkLinkButton;
  return /*#__PURE__*/React.createElement(Component, _extends({
    ref: ref
  }, props));
});
export { IconButton, Button, LinkIconButton, LinkButton };