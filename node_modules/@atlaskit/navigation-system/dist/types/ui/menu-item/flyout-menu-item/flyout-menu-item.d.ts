import React, { type ReactNode } from 'react';
export type FlyoutMenuItemProps = {
    /**
     * Should contain `FlyoutMenuItemTrigger` and `FlyoutMenuItemContent`.
     */
    children: ReactNode;
    /**
     * ID that is assigned to the popup container element and used to associate the trigger with the content.
     */
    id?: string;
    /**
     * Allows to control the open state of the flyout externally.
     *
     * If you are controlling the state, you should update your state using:
     * - `onClick` on the `FlyoutMenuItemTrigger`
     * - `onClose` on the `FlyoutMenuItemContent`
     */
    isOpen?: boolean;
    /**
     * Whether the flyout menu is open by default.
     *
     * You can use this to set the default expansion state without needing to entirely control the state.
     */
    isDefaultOpen?: boolean;
    /**
     * Callback that is called when the flyout menu is opened or closed.
     *
     * Can be used for analytics purposes when you are not controlling the state yourself.
     */
    onOpenChange?: (isOpen: boolean) => void;
};
/**
 * __FlyoutMenuItem__
 *
 * Displays content in a flyout menu, triggered by a button.
 *
 * The top-level component that contains the trigger and content of a flyout menu.
 *
 * Usage example:
 * ```tsx
 * <FlyoutMenuItem>
 *   <FlyoutMenuItemTrigger>Trigger</FlyoutMenuItemTrigger>
 *   <FlyoutMenuItemContent>
 *     <MenuList>
 *       <ButtonMenuItem>Item 1</ButtonMenuItem>
 *       <ButtonMenuItem>Item 2</ButtonMenuItem>
 *     </MenuList>
 *   </FlyoutMenuItemContent>
 * </FlyoutMenuItem>
 * ```
 */
export declare const FlyoutMenuItem: React.ForwardRefExoticComponent<FlyoutMenuItemProps & React.RefAttributes<HTMLDivElement>>;
